{
  "count": 20,
  "start": 0,
  "total": 464,
  "books": [
    {
      "rating": {
        "max": 10,
        "numRaters": 475,
        "average": "8.7",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "朴灵"
      ],
      "pubdate": "2013-12-1",
      "tags": [
        {
          "count": 588,
          "name": "node.js",
          "title": "node.js"
        },
        {
          "count": 333,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 156,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 134,
          "name": "Node.js",
          "title": "Node.js"
        },
        {
          "count": 127,
          "name": "Web",
          "title": "Web"
        },
        {
          "count": 95,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 68,
          "name": "nodejs",
          "title": "nodejs"
        },
        {
          "count": 56,
          "name": "技术",
          "title": "技术"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s27269296.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "第1章　Node简介　　1\n1.1 　Node的诞生历程　　1\n1.2 　Node的命名与起源　　1\n1.2.1 　为什么是JavaScript　　2\n1.2.2 　为什么叫Node　　2\n1.3 　Node给JavaScript带来的意义　　2\n1.4 　Node的特点　　4\n1.4.1 　异步I\/O　　4\n1.4.2 　事件与回调函数　　6\n1.4.3 　单线程　　7\n1.4.4 　跨平台　　7\n1.5 　Node的应用场景　　8\n1.5.1 　I\/O密集型　　8\n1.5.2 　是否不擅长CPU密集型业务　　8\n1.5.3 　与遗留系统和平共处　　10\n1.5.4 　分布式应用　　10\n1.6 　Node的使用者　　10\n1.7 　参考资源　　11\n第2章　模块机制　　12\n2.1 　CommonJS规范　　13\n2.1.1 　CommonJS的出发点　　13\n2.1.2 　CommonJS的模块规范　　14\n2.2 　Node的模块实现　　15\n2.2.1 　优先从缓存加载　　16\n2.2.2 　路径分析和文件定位　　16\n2.2.3 　模块编译　　18\n2.3 　核心模块　　20\n2.3.1 　JavaScript核心模块的编译过程　　21\n2.3.2 　C\/C++核心模块的编译过程　　22\n2.3.3 　核心模块的引入流程　　25\n2.3.4 　编写核心模块　　25\n2.4 　C\/C++扩展模块　　27\n2.4.1 　前提条件　　28\n2.4.2 　C\/C++扩展模块的编写　　29\n2.4.3 　C\/C++扩展模块的编译　　30\n2.4.4 　C\/C++扩展模块的加载　　31\n2.5 　模块调用栈　　32\n2.6 　包与NPM　　33\n2.6.1 　包结构　　34\n2.6.2 　包描述文件与NPM　　34\n2.6.3 　NPM常用功能　　37\n2.6.4 　局域NPM　　42\n2.6.5 　NPM潜在问题　　43\n2.7 　前后端共用模块　　44\n2.7.1 　模块的侧重点　　44\n2.7.2 　AMD规范　　44\n2.7.3 　CMD规范　　45\n2.7.4 　兼容多种模块规范　　45\n2.8 　总结　　46\n2.9 　参考资源　　46\n第3章　异步I\/O　　47\n3.1 　为什么要异步I\/O　　47\n3.1.1 　用户体验　　48\n3.1.2 　资源分配　　49\n3.2 　异步I\/O实现现状　　50\n3.2.1 　异步I\/O与非阻塞I\/O　　50\n3.2.2 　理想的非阻塞异步I\/O　　54\n3.2.3 　现实的异步I\/O　　54\n3.3 　Node的异步I\/O　　56\n3.3.1 　事件循环　　56\n3.3.2 　观察者　　56\n3.3.3 　请求对象　　57\n3.3.4 　执行回调　　59\n3.3.5 　小结　　60\n3.4 　非I\/O的异步API　　60\n3.4.1 　定时器　　60\n3.4.2 　process.nextTick()　　61\n3.4.3 　setImmediate()　　62\n3.5 　事件驱动与高性能服务器　　63\n3.6 　总结　　65\n3.7 　参考资源　　65\n第4章　异步编程　　66\n4.1 　函数式编程　　66\n4.1.1 　高阶函数　　66\n4.1.2 　偏函数用法　　67\n4.2 　异步编程的优势与难点　　68\n4.2.1 　优势　　69\n4.2.2 　难点　　70\n4.3 　异步编程解决方案　　74\n4.3.1 　事件发布\/订阅模式　　74\n4.3.2 　Promise\/Deferred模式　　82\n4.3.3 　流程控制库　　93\n4.4 　异步并发控制　　105\n4.4.1 　bagpipe的解决方案　　105\n4.4.2 　async的解决方案　　109\n4.5 　总结　　110\n4.6 　参考资源　　110\n第5章　内存控制　　111\n5.1 　V8的垃圾回收机制与内存限制　　111\n5.1.1 　Node与V8　　112\n5.1.2 　V8的内存限制　　112\n5.1.3 　V8的对象分配　　112\n5.1.4 　V8的垃圾回收机制　　113\n5.1.5 　查看垃圾回收日志　　119\n5.2 　高效使用内存　　121\n5.2.1 　作用域　　121\n5.2.2 　闭包　　123\n5.2.3 　小结　　124\n5.3 　内存指标　　124\n5.3.1 　查看内存使用情况　　124\n5.3.2 　堆外内存　　126\n5.3.3 　小结　　127\n5.4 　内存泄漏　　127\n5.4.1 　慎将内存当做缓存　　127\n5.4.2 　关注队列状态　　130\n5.5 　内存泄漏排查　　130\n5.5.1 　node-heapdump　　131\n5.5.2 　node-memwatch　　132\n5.5.3 　小结　　135\n5.6 　大内存应用　　135\n5.7 　总结　　136\n5.8 　参考资源　　136\n第6章 　理解Buffer　　137\n6.1 　Buffer结构　　137\n6.1.1 　模块结构　　137\n6.1.2 　Buffer对象　　138\n6.1.3 　Buffer内存分配　　139\n6.2 　Buffer的转换　　141\n6.2.1 　字符串转Buffer　　141\n6.2.2 　Buffer转字符串　　142\n6.2.3 　Buffer不支持的编码类型　　142\n6.3 　Buffer的拼接　　143\n6.3.1 　乱码是如何产生的　　144\n6.3.2 　setEncoding()与string_decoder()　　144\n6.3.3 　正确拼接Buffer　　145\n6.4 　Buffer与性能　　146\n6.5 　总结　　149\n6.6 　参考资源　　149\n第7章　网络编程　　150\n7.1 　构建TCP服务　　150\n7.1.1 　TCP　　150\n7.1.2 　创建TCP服务器端　　151\n7.1.3 　TCP服务的事件　　153\n7.2 　构建UDP服务　　154\n7.2.1 　创建UDP套接字　　154\n7.2.2 　创建UDP服务器端　　154\n7.2.3 　创建UDP客户端　　155\n7.2.4 　UDP套接字事件　　155\n7.3 　构建HTTP服务　　155\n7.3.1 　HTTP　　156\n7.3.2 　http模块　　157\n7.3.3 　HTTP客户端　　161\n7.4 　构建WebSocket服务　　163\n7.4.1 　WebSocket握手　　164\n7.4.2 　WebSocket数据传输　　167\n7.4.3 　小结　　169\n7.5 　网络服务与安全　　169\n7.5.1 　TLS\/SSL　　170\n7.5.2 　TLS服务　　172\n7.5.3 　HTTPS服务　　173\n7.6 　总结　　175\n7.7 　参考资源　　176\n第8章　构建Web应用　　177\n8.1 　基础功能　　177\n8.1.1 　请求方法　　178\n8.1.2 　路径解析　　179\n8.1.3 　查询字符串　　180\n8.1.4 　Cookie　　181\n8.1.5 　Session　　184\n8.1.6 　缓存　　190\n8.1.7 　Basic认证　　193\n8.2 　数据上传　　195\n8.2.1 　表单数据　　195\n8.2.2 　其他格式　　196\n8.2.3 　附件上传　　197\n8.2.4 　数据上传与安全　　199\n8.3 　路由解析　　201\n8.3.1 　文件路径型　　202\n8.3.2 　MVC　　202\n8.3.3 　RESTful　　207\n8.4 　中间件　　210\n8.4.1 　异常处理　　214\n8.4.2 　中间件与性能　　215\n8.4.3 　小结　　216\n8.5 　页面渲染　　217\n8.5.1 　内容响应　　217\n8.5.2 　视图渲染　　219\n8.5.3 　模板　　220\n8.5.4 　Bigpipe　　231\n8.6 　总结　　235\n8.7 　参考资源　　235\n第9章　玩转进程　　236\n9.1 　服务模型的变迁　　236\n9.1.1 　石器时代：同步　　236\n9.1.2 　青铜时代：复制进程　　237\n9.1.3 　白银时代：多线程　　237\n9.1.4 　黄金时代：事件驱动　　237\n9.2 　多进程架构　　238\n9.2.1 　创建子进程　　239\n9.2.2 　进程间通信　　240\n9.2.3 　句柄传递　　242\n9.2.4 　小结　　247\n9.3 　集群稳定之路　　248\n9.3.1 　进程事件　　248\n9.3.2 　自动重启　　249\n9.3.3 　负载均衡　　254\n9.3.4 　状态共享　　255\n9.4 　Cluster模块　　257\n9.4.1 　Cluster工作原理　　258\n9.4.2 　Cluster事件　　259\n9.5 　总结　　259\n9.6 　参考资源　　260\n第10章　测试　　261\n10.1 　单元测试　　261\n10.1.1 　单元测试的意义　　261\n10.1.2 　单元测试介绍　　263\n10.1.3 　工程化与自动化　　276\n10.1.4 　小结　　277\n10.2 　性能测试　　278\n10.2.1 　基准测试　　278\n10.2.2 　压力测试　　280\n10.2.3 　基准测试驱动开发　　281\n10.2.4 　测试数据与业务数据的转换　　283\n10.3 　总结　　284\n10.4 　参考资源　　284\n第11章　产品化　　285\n11.1 　项目工程化　　285\n11.1.1 　目录结构　　285\n11.1.2 　构建工具　　286\n11.1.3 　编码规范　　289\n11.1.4 　代码审查　　289\n11.2 　部署流程　　290\n11.2.1 　部署环境　　291\n11.2.2 　部署操作　　291\n11.3 　性能　　293\n11.3.1 　动静分离　　293\n11.3.2 　启用缓存　　294\n11.3.3 　多进程架构　　294\n11.3.4 　读写分离　　295\n11.4 　日志　　295\n11.4.1 　访问日志　　295\n11.4.2 　异常日志　　296\n11.4.3 　日志与数据库　　299\n11.4.4 　分割日志　　299\n11.4.5 　小结　　299\n11.5 　监控报警　　299\n11.5.1 　监控　　300\n11.5.2 　报警的实现　　302\n11.5.3 　监控系统的稳定性　　303\n11.6 　稳定性　　303\n11.7 　异构共存　　304\n11.8 　总结　　305\n11.9 　参考资源　　305\n附录A 　安装Node　　306\nA.1 　Windows系统下的Node安装　　306\nA.2 　Mac系统下Node的安装　　307\nA.3 　Linux系统下Node的安装　　308\nA.4 　总结　　309\nA.5 　参考资源　　309\n附录B 　调试Node　　310\nB.1 　Debugger　　310\nB.2 　Node Inspector　　311\nB.2.1 　安装Node Inspector　　312\nB.2.2 　错误堆栈　　312\nB.3 　总结　　313\n附录C 　Node编码规范　　314\nC.1 　根源　　314\nC.2 　编码规范　　315\nC.2.1 　空格与格式　　315\nC.2.2 　命名规范　　317\nC.2.3 　比较操作　　318\nC.2.4 　字面量　　318\nC.2.5 　作用域　　318\nC.2.6 　数组与对象　　319\nC.2.7 　异步　　320\nC.2.8 　类与模块　　320\nC.2.9 　注解规范　　321\nC.3 　最佳实践　　321\nC.3.1 　冲突的解决原则　　321\nC.3.2 　给编辑器设置检测工具　　321\nC.3.3 　版本控制中的hook　　322\nC.3.4 　持续集成　　322\nC.4 　总结　　322\nC.5 　参考资源　　323\n附录D 　搭建局域NPM仓库　　324\nD.1 　NPM仓库的安装　　325\nD.1.1 　安装Erlang和CouchDB　　325\nD.1.2 　搭建NPM仓库　　326\nD.2 　高阶应用　　328\nD.2.1 　镜像仓库　　328\nD.2.2 　私有模块应用　　328\nD.2.3 　纯私有仓库　　329\nD.3 　总结　　331\nD.4 　参考资源　　332",
      "ebook_url": "http:\/\/read.douban.com\/ebook\/12053349\/",
      "pages": "332",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s27269296.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s27269296.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s27269296.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/25768396\/",
      "id": "25768396",
      "publisher": "人民邮电出版社",
      "isbn10": "7115335508",
      "isbn13": "9787115335500",
      "title": "深入浅出Node.js",
      "url": "http:\/\/api.douban.com\/v2\/book\/25768396",
      "alt_title": "",
      "author_intro": "朴灵\n真名田永强，文艺型码农，就职于阿里巴巴数据平台，资深工程师，Node.js布道者，写了多篇文章介绍Node.js的细节。活跃于CNode社区，是线下会议NodeParty的组织者和JSConf China（沪JS和京JS）的组织者之一。热爱开源，多个Node.js模块的作者。个人GitHub地址：http:\/\/github.com\/JacksonTian。叩首问路，码梦为生。",
      "summary": "本书从不同的视角介绍了 Node 内在的特点和结构。由首章Node 介绍为索引，涉及Node 的各个方面，主要内容包含模块机制的揭示、异步I\/O 实现原理的展现、异步编程的探讨、内存控制的介绍、二进制数据Buffer 的细节、Node 中的网络编程基础、Node 中的Web 开发、进程间的消息传递、Node 测试以及通过Node 构建产品需要的注意事项。最后的附录介绍了Node 的安装、调试、编码规范和NPM 仓库等事宜。\n本书适合想深入了解 Node 的人员阅读。",
      "ebook_price": "39.99",
      "series": {
        "id": "13000",
        "title": "图灵原创"
      },
      "price": "CNY 69.00"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 599,
        "average": "7.5",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "郭家寶（BYVoid）"
      ],
      "pubdate": "2012-7",
      "tags": [
        {
          "count": 610,
          "name": "Node.js",
          "title": "Node.js"
        },
        {
          "count": 313,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 201,
          "name": "Web开发",
          "title": "Web开发"
        },
        {
          "count": 118,
          "name": "后端开发",
          "title": "后端开发"
        },
        {
          "count": 101,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 99,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 75,
          "name": "Web",
          "title": "Web"
        },
        {
          "count": 64,
          "name": "后端",
          "title": "后端"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s10307479.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "目 　 　录\n第1章 　Node.js简介　　1\n1.1 　Node.js 是什么　　2\n1.2 　Node.js 能做什么　　3\n1.3 　异步式 I\/O 与事件驱动　　4\n1.4 　Node.js 的性能　　5\n1.4.1 　Node.js 架构简介　　5\n1.4.2 　Node.js 与 PHP + Nginx　　6\n1.5 　JavaScript 简史　　6\n1.5.1 　Netscape 与 LiveScript　　7\n1.5.2 　Java 与 Javascript　　7\n1.5.3 　微软的加入—— JScript　　8\n1.5.4 　标准化—— ECMAScript　　8\n1.5.5 　浏览器兼容性问题　　9\n1.5.6 　引擎效率革命和 JavaScript 的未来　　9\n1.6 　CommonJS　　10\n1.6.1 　服务端 JavaScript 的重生　　10\n1.6.2 　CommonJS 规范与实现　　11\n1.7 　参考资料　　12\n第2章 　安装和配置Node.js　　13\n2.1 　安装前的准备　　14\n2.2 　快速安装　　14\n2.2.1 　Microsoft Windows系统上安装Node.js　　14\n2.2.2 　Linux 发行版上安装Node.js　　16\n2.2.3 　Mac OS X上安装Node.js　　16\n2.3 　编译源代码　　17\n2.3.1 　在 POSIX 系统中编译　　17\n2.3.2 　在 Windows系统中编译　　18\n2.4 　安装Node 包管理器　　18\n2.5 　安装多版本管理器　　19\n2.6 　参考资料　　21\n第3章 　Node.js快速入门　　23\n3.1 　开始用 Node.js 编程　　24\n3.1.1 　Hello World　　24\n3.1.2 　Node.js 命令行工具　　25\n3.1.3 　建立 HTTP 服务器　　26\n3.2 　异步式 I\/O 与事件式编程　　29\n3.2.1 　阻塞与线程　　29\n3.2.2 　回调函数　　31\n3.2.3 　事件　　33\n3.3 　模块和包　　34\n3.3.1 　什么是模块　　35\n3.3.2 　创建及加载模块　　35\n3.3.3 　创建包　　38\n3.3.4 　Node.js 包管理器　　41\n3.4 　调试　　45\n3.4.1 　命令行调试　　45\n3.4.2 　远程调试　　47\n3.4.3 　使用 Eclipse 调试 Node.js　　48\n3.4.4 　使用 node-inspector 调试Node.js　　54\n3.5 　参考资料　　55\n第4章 　Node.js核心模块　　57\n4.1 　全局对象　　58\n4.1.1 　全局对象与全局变量　　58\n4.1.2 　process　　58\n4.1.3 　console　　60\n4.2 　常用工具 util　　61\n4.2.1 　util.inherits　　61\n4.2.2 　util.inspect　　62\n4.3 　事件驱动 events　　63\n4.3.1 　事件发射器　　64\n4.3.2 　error 事件　　65\n4.3.3 　继承 EventEmitter　　65\n4.4 　文件系统 fs　　65\n4.4.1 　fs.readFile　　66\n4.4.2 　fs.readFileSync　　67\n4.4.3 　fs.open　　67\n4.4.4 　fs.read　　68\n4.5 　HTTP 服务器与客户端　　70\n4.5.1 　HTTP 服务器　　70\n4.5.2 　HTTP 客户端　　74\n4.6 　参考资料　　77\n第5章 　使用Node.js进行Web开发　　79\n5.1 　准备工作　　80\n5.1.1 　使用http模块　　82\n5.1.2 　Express 框架　　83\n5.2 　快速开始　　84\n5.2.1 　安装 Express　　84\n5.2.2 　建立工程　　85\n5.2.3 　启动服务器　　86\n5.2.4 　工程的结构　　87\n5.3 　路由控制　　89\n5.3.1 　工作原理　　89\n5.3.2 　创建路由规则　　92\n5.3.3 　路径匹配　　93\n5.3.4 　REST 风格的路由规则　　94\n5.3.5 　控制权转移　　95\n5.4 　模板引擎　　97\n5.4.1 　什么是模板引擎　　97\n5.4.2 　使用模板引擎　　98\n5.4.3 　页面布局　　99\n5.4.4 　片段视图　　100\n5.4.5 　视图助手　　100\n5.5 　建立微博网站　　102\n5.5.1 　功能分析　　102\n5.5.2 　路由规划　　102\n5.5.3 　界面设计　　103\n5.5.4 　使用Bootstrap　　104\n5.6 　用户注册和登录　　107\n5.6.1 　访问数据库　　107\n5.6.2 　会话支持　　110\n5.6.3 　注册和登入　　111\n5.6.4 　页面权限控制　　120\n5.7 　发表微博　　123\n5.7.1 　微博模型　　123\n5.7.2 　发表微博　　125\n5.7.3 　用户页面　　126\n5.7.4 　首页　　127\n5.7.5 　下一步　　129\n5.8 　参考资料　　129\n第6章 　Node.js进阶话题　　131\n6.1 　模块加载机制　　132\n6.1.1 　模块的类型　　132\n6.1.2 　按路径加载模块　　132\n6.1.3 　通过查找node_modules目录加载模块　　133\n6.1.4 　加载缓存　　134\n6.1.5 　加载顺序　　134\n6.2 　控制流　　135\n6.2.1 　循环的陷阱　　135\n6.2.2 　解决控制流难题　　137\n6.3 　Node.js 应用部署　　138\n6.3.1 　日志功能　　138\n6.3.2 　使用cluster模块　　140\n6.3.3 　启动脚本　　142\n6.3.4 　共享80端口　　143\n6.4 　Node.js 不是银弹　　144\n6.5 　参考资料　　146\n附录A 　JavaScript的高级特性　　147\n附录B 　Node.js编程规范　　167\n索引　　175",
      "pages": "178",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s10307479.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s10307479.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s10307479.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/10789820\/",
      "id": "10789820",
      "publisher": "人民邮电出版社",
      "isbn10": "7115283990",
      "isbn13": "9787115283993",
      "title": "Node.js开发指南",
      "url": "http:\/\/api.douban.com\/v2\/book\/10789820",
      "alt_title": "",
      "author_intro": "郭家寶（BYVoid），清华大学计算机系2010级本科生，曾获得信息学奥林匹克竞赛（NOI）金牌。他从中学开始涉足开源开发，参与过「汉典网」等许多Web项目的前后端设计开发，同时是Linux输入法ibus-pinyin的作者。他从2009年Node.js诞生之始，就一直在关注它的发展，有过许多用Node.js建立网站的经验，活跃于CNode社区。",
      "summary": "Node.js是一种方兴未艾的新技术，诞生于2009年。经过两年的快速变化，Node.js生态圈已经逐渐走向稳定。Node.js采用了以往类似语言和框架中非常罕见的技术，总结为关键词就是：非阻塞式控制流、异步I\/O、单线程消息循环。不少开发者在入门时总要经历一个痛苦的思维转变过程，给学习带来巨大的障碍。 而本书的目的就是帮助读者扫清这些障碍，学会使用Node.js进行Web后端开发，同时掌握事件驱动的异步式编程风格，以便进一步利用Node.js的高级特性。",
      "series": {
        "id": "13000",
        "title": "图灵原创"
      },
      "price": "45.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 56,
        "average": "8.3",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Mike Cantelon",
        "Marc Harter",
        "TJ Holowaychuk",
        "Nathan Rajlich"
      ],
      "pubdate": "2013-11-25",
      "tags": [
        {
          "count": 99,
          "name": "Node.js",
          "title": "Node.js"
        },
        {
          "count": 31,
          "name": "javascript",
          "title": "javascript"
        },
        {
          "count": 25,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 18,
          "name": "nodejs",
          "title": "nodejs"
        },
        {
          "count": 11,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 11,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 8,
          "name": "node.js",
          "title": "node.js"
        },
        {
          "count": 5,
          "name": "软件开发",
          "title": "软件开发"
        }
      ],
      "origin_title": "Mike Cantelon and TJ Holowaychuk",
      "image": "https://img1.doubanio.com\/mpic\/s27194543.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "Part 1: Node Fundamentals\n1: Why the Web needs Node - FREE\n2: Getting started with Node - AVAILABLE\n3: Asynchronous programming\nPart 2: Web Application Development with Node\n4: Buiding Node web applications\n5: Storing Node application data\n6: Automating testing with Node\n7: Connect\n8: Express\n9: Web application output templating in Node\n10: Deploying Node web applications\nPart 3: Going Further with Node\n11: Beyond Web Servers\n12: The Node ecosystem\nAppendices\nA: Debugging Node applications\nB: Creating documentation",
      "pages": "416",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s27194543.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s27194543.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s27194543.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6805117\/",
      "id": "6805117",
      "publisher": "Manning Publications",
      "isbn10": "1617290572",
      "isbn13": "9781617290572",
      "title": "Node.js in Action",
      "url": "http:\/\/api.douban.com\/v2\/book\/6805117",
      "alt_title": "Mike Cantelon and TJ Holowaychuk",
      "author_intro": "Mike Cantelon is a web programmer with 10 years of experience in bespoke and product-oriented web application development. TJ Holowaychuk is a software engineer at LearnBoost and author of many Node.js modules, including the popular Express Node.js framework",
      "summary": "* Simplifies web application development * Outlines valuable online resources * Teaches Node.js from the ground up Node.js is an elegant server-side JavaScript development environment perfect for scalable, high-performance web applications. Node allows developers to access HTTP and general TCP\/IP functionality using a minimalist server-side JavaScript interface. Node.js in Action  is an example-driven tutorial that starts at square one and goes through all the features, techniques, and concepts needed to build production-quality Node applications. First it shows how to set up a Node development environment and the community-created extensions. Then it runs through some simple demonstration programs and introduces asynchronous programming, a requirement for real-time applications such as chat, online games, and live statistics. It also shows how to create serious web applications using NodeUPSILON s HTTP API and introduces community frameworks that make web development easier and faster.",
      "price": "USD 44.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 58,
        "average": "7.4",
        "min": 0
      },
      "subtitle": "将JavaScript进行到底",
      "author": [
        "劳奇 (Guillermo Rauch)"
      ],
      "pubdate": "2014-1-1",
      "tags": [
        {
          "count": 91,
          "name": "Node.js",
          "title": "Node.js"
        },
        {
          "count": 36,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 25,
          "name": "node.js",
          "title": "node.js"
        },
        {
          "count": 13,
          "name": "web",
          "title": "web"
        },
        {
          "count": 13,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 12,
          "name": "前端开发",
          "title": "前端开发"
        },
        {
          "count": 9,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 8,
          "name": "nodejs",
          "title": "nodejs"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s27132823.jpg",
      "binding": "平装",
      "translator": [
        "赵静"
      ],
      "catalog": "PART Ⅰ　从安装与概念开始\nCHAPTER 1　安装............................................... 3\n在Windows下安装............................................... 3\n在OS.X下安装. ................................................ 4\n在Linux下安装................................................. 5\n编译. ............................................................5\n确保安装成功. ...............................................5\nNode.REPL................................................. 5\n执行文件.......................................................... 6\nNPM................................................................. 6\n安装模块...........................................................7\n自定义模块. .......................................................8\n安装二进制工具包. ..................................................9\n浏览NPM仓库. .......................................................9\n小结................................................................. 10\nCHAPTER 2　JavaScript概览.........................................11\n介绍.......................................................... 11\nJavaScript基础..................................................... 12\n类型. ......................................................... 12\n类型的困惑. ............................................... 12\n函数. .......................................................... 13\nTHIS、FUNCTION #CALL以及FUNCTION#APPLY.................... 14\n函数的参数数量. ........................... 14\n闭包. ........................................................ 14\n类. .............................................................. 15\n继承. ..................................................... 16\nTRY.{}.CATCH.{}...................................... 17\nv8中的JavaScript............................... 17\nOBJECT#KEYS....................................................... 18\nARRAY#ISARRAY................................................ 18\n数组方法................................................. 18\n字符串方法.. .................................................... 19\nJSON............................................................. 19\nFUNCTION#BIND....................................................... 19\nFUNCTION#NAME.............................................. 19\n_PROTO_（继承）. ............................................ 20\n存取器....................................................... 20\n小结.............................................................. 21\nCHAPTER ３　阻塞与非阻塞IO................................. 23\n能力越强，责任就越大................................................. 23\n阻塞. ............................................................. 25\n单线程的世界. ............................................... 27\n错误处理..................................................... 29\n堆栈追踪................................................ 30\n小结............................................................... 32\nCHAPTER 4　Node中的JavaScript ..................................... 33\nglobal对象....................................................... 33\n实用的全局对象. ................................................ 34\n模块系统............................................................ 34\n绝对和相对模块. .................................................. 35\n暴露API. ............................................................... 37\n事件......................................................... 38\nbuffer............................................................... 40\n小结................................................................... 41\nPART Ⅱ　Node重要的API\nCHAPTER 5　命令行工具（CLI）以及FS API：首个Node应用................... 45\n需求................................................. 45\n编写首个Node程序...................................... 46\n创建模块.............................................. 46\n同步还是异步. ............................ 47\n理解什么是流（stream）................................... 49\n输入和输出. .......................................................... 50\n重构. ........................................ 53\n用fs进行文件操作. .............................. 55\n对CLI一探究竟. ................................................. 56\nargv.................................................... 57\n工作目录...................................... 57\n环境变量........................................... 58\n退出. ............................................... 58\n信号. .......................................................... 58\nANSI转义码............................................ 59\n对fs一探究竟. ................................................. 59\nStream......................................................... 59\n监视. .......................................... 60\n小结...................................................... 61\nCHAPTER 6　TCP ........................................... 63\nTCP有哪些特性. ..................................................... 64\n面向连接的通信和保证顺序的传递. ........................... 64\n面向字节........................................ 65\n可靠性............................................... 65\n流控制......................................... 65\n拥堵控制.............................................. 65\nTelnet................................................................ 65\n基于TCP的聊天程序............................................... 68\n创建模块..................................... 68\n理解NET.SERVER.API........................ 68\n接收连接....................................... 70\ndata事件. ...................................................... 71\n状态以及记录连接情况. ........................................ 73\n圆满完成此程序. ............................................ 75\n一个IRC客户端程序.......................................... 77\n创建模块.............................................. 77\n理解NET#STREAM.API.. ......................................... 78\n实现部分IRC协议. .................................................. 78\n测试实际的IRC服务器. .................................. 78\n小结................................................................. 79\nCHAPTER 7　HTTP .................................................. 81\nHTTP结构......................................................... 81\n头信息. ...................................................... 82\n连接.............................................................. 87\n一个简单的Web服务器.................................................. 88\n创建模块....................................... 88\n输出表单.................................................... 88\nmethod和URL. ........................................... 90\n数据. .............................................. 92\n整合. ................................................ 94\n让程序更健壮. ..................................... 95\n一个Twitter.Web客户端......................................... 96\n创建模块....................................... 96\n发送一个简单的HTTP请求. ...................... 97\n发送数据......................................... 98\n获取推文................................................. 99\nsuperagent来拯救.............................................. 102\n使用up重启HTTP服务器..................................... 103\n小结............................................. 104\nPART Ⅲ　Web开发\nCHAPTER 8　Connect .............................. 107\n使用HTTP构建一个简单的网站. ....................................... 108\n通过Connect实现一个简单的网站...................................... 111\n中间件. ................................................. 112\n书写可重用的中间件. .........................114\nstatic中间件. .............................................119\nquery中间件. .......................................120\nlogger中间件................................................... 120\nbody.parser中间件. .................................122\ncookie.........................................................125\n会话（session）. ......................................126\nRedis.session..................................................131\nmethodOverride中间件. ...........................132\nbasicAuth中间件. ......................................132\n小结.............................................................. 134\nCHAPTER 9　Express..................................................135\n一个小型Express应用. ...................................... 135\n创建模块..............................................136\nHTML...........................................................136\nSETUP..........................................................137\n定义路由............................................137\n查询. .................................................140\n运行. .....................................................141\n设置......................................................... 142\n模板引擎...................................................... 143\n错误处理........................................................ 144\n快捷方法................................................. 144\n路由................................................ 146\n中间件. .................................................... 148\n代码组织策略. ......................................... 149\n小结................................................. 151\nCHAPTER 10　WebSocket .................. 153\nAjax.............................................. 153\nHTML5.WebSocket............................................... 156\n一个ECHO示例. ......................................................... 157\n初始化项目. .............................................157\n建立服务器. ..................................................158\n建立客户端. ......................................159\n运行示例程序. ...................................160\n鼠标光标.......................................... 161\n初始化示例程序. .........................................161\n建立服务器. ............................................161\n建立客户端. .....................................164\n运行示例程序. .........................................166\n面临一个挑战. ............................................. 166\n关闭并不意味着断开连接. .............................166\nJSON...........................................167\n重连. ...................................................167\n广播. ................................................167\nWebSocket属于HTML5：早期浏览器不支持. ..........................167\n解决方案.................................................167\n小结............................................................. 167\nCHAPTER 11　Socket.IO.............................................169\n传输................................................. 170\n断开.VS.关闭. ............................................170\n事件. ..........................................170\n命名空间..............................................171\n聊天程序................................................. 172\n初始化程序. .......................................172\n构建服务器. ..........................................172\n构建客户端. .......................................173\n事件和广播. ........................................175\n消息接收确认. .................................179\n一个轮流做DJ的应用................................ 180\n扩展聊天应用. ...........................................181\n集成Grooveshark.API. ...............................182\n播放歌曲...............................................185\n小结.................................................... 190\nPART Ⅳ　数据库\nCHAPTER 12　MongoDB.......................193\n安装.................................................. 195\n使用MongoDB：一个用户认证的例子. .................................. 195\n构建应用程序. .......................................195\n创建Express.App.. ..............................196\n连接MongoDB. ...................................200\n创建文档......................................201\n查找文档..................................203\n身份验证中间件. ..................................204\n校验.. ..............................................205\n原子性..............................................206\n安全模式................................206\nMongoose介绍......................................... 206\n定义模型........................................207\n定义嵌套的键. ..........................208\n定义嵌套文档. .....................................209\n构建索引..........................................209\n中间件.................................................209\n探测模型状态.. ...............................210\n查询. ..............................................210\n扩展查询........................................210\n排序.. ........................................211\n选择. ......................................................211\n限制.. .....................................211\n跳过. .........................................211\n自动产生键. ...............................211\n转换. ..............................................212\n一个使用Mongoose的例子........................................ 212\n构建应用.................................212\n重构. ..............................213\n建立模型.................................213\n小结.......................................... 215\nCHAPTER 13　MySQL...........................................217\nnode-mysql........................................ 217\n初始化项目. .......................................217\nExpress应用. ...................................218\n连接MySQL. .....................................219\n初始化脚本. .......................................220\n创建数据................................................224\n获取数据.....................................228\nsequelize............................................ 229\n初始化sequelize. ................................230\n初始化Express应用. ....................................230\n连接sequelize. .........................233\n定义模型和同步. ........................... 234\n创建数据.................................236\n获取数据......................................238\n删除数据..............................239\n完整地完成应用. ...............................240\n小结.......................................... 241\nCHAPTER 14　Redis......................................... 243\n安装Redis............................................... 244\nRedis查询语言. ............................................... 245\n数据类型............................................. 245\n字符串. ...................................246\n哈希. .................................................246\n列表. ......................................... 248\n数据集. .....................................249\n有序数据集. .........................................249\nRedis和Node. .......................................... 249\n使用node-redis实现一个社交图谱. .............250\n小结......................................... 259\nPART Ⅴ　测试\nCHAPTER 15　代码共享 ................................. 263\n什么样的代码可以共享........................................... 263\n书写兼容的JavaScript代码................................ 264\n导出模块......................................................264\n模拟实现ECMA.API. ................................265\n模拟实现Node.API. ......................................267\n模拟实现浏览器端API. ...............................267\n跨浏览器的继承实现. ...........................268\n集成到一起：browserbuild. ...................... 268\n基础案例....................................269\n小结......................................... 271\nCHAPTER 16　测试................................... 273\n简单测试........................................ 273\n测试目标............................................. 274\n测试策略................................... 274\n测试程序...................................................275\nexpect.js................................................. 276\nAPI一览. .........................................276\nMocha................................................. 278\n测试异步代码. ..................................279\nBDD风格. ................................281\nTDD风格. .......................................281\nexport风格. .................................282\n在浏览器端使用Mocha. ...................................282\n小结.................................... 284\n索引 ...................................... 285",
      "pages": "292",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s27132823.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s27132823.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s27132823.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/25767596\/",
      "id": "25767596",
      "publisher": "电子工业出版社",
      "isbn10": "7121217694",
      "isbn13": "9787121217692",
      "title": "了不起的Node.js",
      "url": "http:\/\/api.douban.com\/v2\/book\/25767596",
      "alt_title": "",
      "author_intro": "Guillermo Rauch（旧金山，加利福尼亚州）是一家位于旧金山，为\n当地教育提供相关服务的创业公司LearnBoost的CTO和联合创始人。\nRauch还是几个知名Node.js项目的发明者，曾在JSConf和一些\nNode.js workshop做过演讲。\"\n译者介绍：\nGoddy Zhao（本名赵静），Successfactors(SAP子公司)软件工程师。毕业于复旦大学，先后在IBM、淘宝工作过，专注于企业级富客户端Web应用的开发，擅长前后端相结合的技术解决方案。曾与人合译过多本前端图书，并曾在沪JS及D2前端技术论坛担任过主持人和演讲嘉宾。个人主页http：\/\/goddyzhao.me。",
      "summary": "本书是一本经典的 Learning by Doing的书籍。它由 Node社区著名的 Socket.IO作者—— Guillermo Rauch，通过大量的实践案例撰写，并由 Node社区非常活跃的开发者—— Goddy Zhao翻译而成。\n本书内容主要由对五大部分的介绍组成： Node核心设计理念、 Node核心模块 API、Web开发、数据库以及测试。从前到后、由表及里地对使用 Node进行 Web开发的每一个环节都进行了深入的讲解，并且最大的特点就是通过大量的实际案例、代码展示来剖析技术点，讲解最佳实践。",
      "price": "CNY 79.00"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 37,
        "average": "6.9",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "徐会生",
        "何启伟",
        "康爱媛"
      ],
      "pubdate": "2009.2",
      "tags": [
        {
          "count": 30,
          "name": "ExtJs",
          "title": "ExtJs"
        },
        {
          "count": 17,
          "name": "javascript",
          "title": "javascript"
        },
        {
          "count": 7,
          "name": "Ajax",
          "title": "Ajax"
        },
        {
          "count": 7,
          "name": "web开发",
          "title": "web开发"
        },
        {
          "count": 5,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 4,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 4,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 4,
          "name": "javascript,UI,Ext",
          "title": "javascript,UI,Ext"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s3549733.jpg",
      "binding": "平",
      "translator": [],
      "catalog": "",
      "pages": "400",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s3549733.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s3549733.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s3549733.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/3424887\/",
      "id": "3424887",
      "publisher": "人民邮电出版社图灵公司",
      "isbn10": "7115196222",
      "isbn13": "9787115196224",
      "title": "深入浅出Ext JS",
      "url": "http:\/\/api.douban.com\/v2\/book\/3424887",
      "alt_title": "",
      "author_intro": "徐会生\n高级软件工程师兼系统架构师，资深Java EE开发专家。他是国内探索Ext JS的先驱之一，精通UI开发，业余时间为Family168撰写了大量开源方面的教程。\n何启伟\n有10余年Java EE开发经验，为银行、医疗、烟草等各大行业成功开发了大量企业级应用。他用Ext JS和J2EE开发了一个强大的企业级应用框架——Ext Framework，在国内处于一流水平。同时，他还自主开发了大量EXT扩展组件，深受广大开发者欢迎。\n康爱媛\n从事金融行业软件开发多年，目前是北京一家大型IT公司的项目负责人，利用Java EE和Ext JS为众多行业开发过企业级的系统框架。",
      "summary": "一、内容简介\n以用户为中心的时代，应用的界面外观正在变得越来越重要。然而，很多程序员都缺乏美术功底，要开发出界面美观的应用实属不易。Ext JS的出现，为广大程序员们解决了这一难题。它有丰富多彩的界面和强大的功能，是开发具有炫丽外观的RIA应用的最佳选择。\n本书是国内Ext JS先驱者的智慧结晶。内容翔实、示例丰富，包含大量示例代码，可操作性极强。不仅全面地阐述了Ext JS的基础知识，而且深入浅出地讲解了Ext JS开发中的高级技巧，同时还给出了大量专家级的建议。通过学习本书，读者将感受到Ext JS的无穷魅力和Ajax技术带来的完美体验。\n本书适合有一定CSS和HTML基础的开发者阅读。\n二、本书赞誉\n1.涵盖Ext JS 3.0新特性\n2.Ext JS专家力作，实例丰富，完美结合理论和实践\n3.Ajax中国、Dojo中国、Family168、开源人、17 Ext 5大网站联袂推荐\n三、媒体评论\n1.“本书是非常急缺的全面讲解Ext JS的图书，弥补了Ajax社区的一大空白。”\n——Ajax中国（www.okajax.com），国内权威的Ajax专业门户\n2.“要想全面了解和掌握Ext JS，强烈推荐阅读《深入浅出Ext JS》。从各方面来看，这本书都非常优秀！”\n——Dojo中国（www.dojochina.com），Dojo中文官方网站\n3.本书样章发布后好评如潮，经仔细研读，果然名副其实。内容翔实，示例丰富，叙述风趣幽默，可操作性极强……Ext JS开发者必备！\n——一起Ext（www.17ext.com），著名Ext中文论坛\n4.“Ext JS是最炫丽的Ajax框架，开源人网站开发了大量基于Ext JS的应用，本书将是2009年最值得期待的Ajax技术图书之一。相信它一定会受到开源技术爱好者的欢迎，也一定可以为所有爱好Ext JS的开发者带来价值。”\n——开源人（http:\/\/www.vifir.com\/），专注于为开源人士服务的互动平台",
      "price": "49.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 58,
        "average": "6.8",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "赵坤",
        "寸志",
        "雷宗民",
        "吴中骅"
      ],
      "pubdate": "2014-5-1",
      "tags": [
        {
          "count": 59,
          "name": "Node.js",
          "title": "Node.js"
        },
        {
          "count": 16,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 11,
          "name": "node.js",
          "title": "node.js"
        },
        {
          "count": 11,
          "name": "实战",
          "title": "实战"
        },
        {
          "count": 10,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 10,
          "name": "node",
          "title": "node"
        },
        {
          "count": 8,
          "name": "技术",
          "title": "技术"
        },
        {
          "count": 8,
          "name": "计算机",
          "title": "计算机"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s27261368.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "第1章　使用Express + MongoDB搭建多人博客.................. 1\n1.1　一个简单的博客.......................... 2\n1.1.1　学习环境......................... 2\n1.1.2　快速开始......................... 2\n1.1.3　路由控制......................... 7\n1.1.4　模板引擎....................... 11\n1.1.5　搭建多人博客............... 13\n1.1.6　使用数据库................... 17\n1.1.7　注册和登录................... 21\n1.1.8　发表文章....................... 35\n1.2　使用Markdown............................... 40\n1.3　增加文件上传功能.................... 42\n1.4　实现用户页面和文章页面................... 45\n1.5　增加编辑与删除功能................ 49\n1.6　实现留言功能............................ 54\n1.7　实现分页功能............................ 57\n1.8　增加存档页面............................ 60\n1.9　增加标签和标签页面................ 62\n1.10　增加pv统计和留言统计..................... 68\n1.11　增加文章检索功能....................... 70\n1.12　增加友情链接......................... 72\n1.13　增加404页面........................... 73\n1.14　增加用户头像......................... 74\n1.15　增加转载功能和转载统计............ 77\n1.16　增加日志功能......................... 84\n1.17　小结......................................... 85\n第2章　使用Express+MongoDB搭建多人博客番外篇.................... 87\n2.1　番外篇之一——使用Passport....................... 88\n2.2　番外篇之二——部署到Heroku................................... 91\n2.3　番外篇之三——使用Mongoose...................... 95\n2.4　番外篇之四——使用Async.......................... 98\n2.5　番外篇之五——使用KindEditor.................... 102\n2.6　番外篇之六——使用Handlebars................ 105\n2.7　番外篇之七——使用KindEditor............. 109\n第3章　使用Redis搭建漂流瓶服务器..............................111\n3.1　初识Redis.................................. 112\n3.2　开始漂流瓶之旅............................. 119\n3.3　讨厌的海星................................... 127\n3.4　扔回海里......................................... 127\n3.5　今天的瓶子已经用完啦.................. 129\n3.6　我的瓶子.................................. 131\n3.7　女神，我们做朋友吧....................... 134\n3.8　部署.......................................... 137\n3.9　小结.......................................... 139\n3.10　参考文献............................... 139\n第4章　使用Meteor搭建微博网站................ 141\n4.1　Meteor简介............................. 142\n4.2　Meteor的安装与使用................. 142\n4.3　快速入门.................................. 145\n4.3.1　测试一：客户端和服务器端执行同一段代码............ 156\n4.3.2　测试二：响应式............. 156\n4.3.3　测试三：insecure包................ 157\n4.3.4　测试四：autopublish包.............................. 159\n4.3.5　测试五：加载顺序............... 161\n4.4　开始搭建微博网站.................................... 161\n4.4.1　开发环境............................ 161\n4.4.2　学习目标.......................... 162\n4.4.3　创建应...................................... 162\n4.5　路由功能....................................... 165\n4.6　用户注册..................................... 169\n4.7　用户登录.................................. 173\n4.8　发表微博.................................. 174\n4.9　使用Markdown.................................. 176\n4.10　部署....................................... 177\n4.11　小结....................................... 179\n4.12　参考文献.................................. 179\n第5章　使用socket.io+Angular打造单页应用.......................... 181\n5.1　最简单的聊天室............................ 182\n5.1.1　socket.io简介..................... 182\n5.1.2　Angular.js................................. 182\n5.1.3　开始新建TechNode目录.............. 182\n5.1.4　express.js服务器.................... 183\n5.1.5　安装Bootstrap和Angular.js........ 185\n5.1.6　搭建聊天室......................... 186\n5.1.7　开始与好友聊天................ 192\n5.2　让用户不再匿名........................... 192\n5.2.1　添加登录功能..................... 192\n5.2.2　用户登录与认证................ 195\n5.2.3　socket.io验证...................... 200\n5.2.4　显示用户名和在线用户列表................................. 202\n5.2.5　我不喜欢你们................................ 211\n5.3　提供不同的房间................................ 211\n5.3.1　设计房间列表页面............................. 211\n5.3.2　添加房间API.......................... 212\n5.3.3　实现room的controller................. 213\n5.3.4　提供socket的房间API................ 214\n5.3.5　登录后跳转至房间列表.............. 215\n5.3.6　房间列表............................. 216\n5.3.7　进入单独的房间........................ 219\n5.3.8　让消息只在房间内传递................... 224\n5.3.9　用户离开房间.......................... 225\n5.3.10　坏代码的味道...................... 227\n5.4　架构优化与发布....................... 227\n5.4.1　项目结构..................... 228\n5.4.2　分拆http和socket服务...................... 229\n5.4.3　客户端缓存................. 231\n5.4.4　使用Grunt打包TechNode..... 236\n5.4.5　发布TechNode.................. 242\n5.4.6　聊天室之旅结束啦.................. 242\n第6章　网络爬虫与数据操作........................... 243\n6.1　学习目标.................................. 244\n6.2　网络爬虫.................................. 245\n6.2.1　相关模块介绍.................. 246\n6.2.2　创建网络爬虫前的准备工作................................. 253\n6.2.3　获取文章分类列表...................... 254\n6.2.4　获取分类下的文章列表............... 257\n6.2.5　获取文章的内容.................. 262\n6.2.6　获取文章分类下的所有文章................................... 264\n6.2.7　将结果保存到数据库中................... 267\n6.2.8　保存文章分类............................. 269\n6.2.9　一个完整的爬虫实例............... 270\n6.3　显示数据库中的数据.............................. 279\n6.3.1　相关模块介绍......................... 279\n6.3.2　创建Web服务器前的工作........................... 280\n6.3.3　查询数据.................................... 281\n6.3.4　博客首页.................................. 283\n6.3.5　文章页面................................. 285\n6.4　自动更新文章数据.................................. 286\n6.4.1　相关模块介绍.............................. 287\n6.4.2　准备工作........................... 290\n6.4.3　定时执行更新任务............................... 290\n6.5　让程序更稳定地运行................................. 291\n6.5.1　处理uncaughtException事件................................ 291\n6.5.2　使用pm2来启动程序.................................. 291\n6.5.3　安装pm2........................................... 292\n6.5.4　启动和停止程序..................... 292\n6.6　处理 GBK 编码的网页.......................... 292\n6.7　小结.......................................... 294\n6.8　参考文献.................................. 294\n第7章　Node.js的进程与线程............................ 295\n7.1　Node.js和PHP................................. 296\n7.2　单线程的Node.js............................... 298\n7.3　单线程的优缺点.......................... 298\n7.4　多线程...................................... 300\n7.5　多进程...................................... 305\n7.6　多进程和多线程使用的比较................ 310\n7.7　总结.......................................... 314\n7.8　参考文献.................................. 315\n第8章　发布一个Package............................ 317\n8.1　Node.js包解决的问题...................... 318\n8.2　创建package.json............................ 318\n8.3　设计package的文件目录..................... 319\n8.4　纯js包开发............................... 321\n8.5　安装node-gyp......................................... 323\n8.6　创建binding.byp............................... 324\n8.7　C++插件包开发............................ 324\n8.8　包的测试.................................. 330\n8.9　跨平台测试................................. 333\n8.10　readme.md......................................... 334\n8.11　发布到GitHub............................ 334\n8.12　发布到npm............................. 334\n8.13　状态图标............................... 335\n8.14　总结....................................... 336\n8.15　参考文献............................... 337\n第9章　Web安全实战............................... 339\n9.1　什么是Web安全............................ 340\n安全的定义和意识........................ 340\n9.2　Node.js中的Web安全................ 341\nHTTP管道洪水漏洞...................... 341\n9.3　SQL注入....................................... 343\n9.4　XSS脚本攻击................................ 345\n9.5　CSRF请求伪造............................. 350\n9.6　应用层DoS拒绝服务................... 358\n9.7　文件路径漏洞............................... 366\n9.8　加密安全.......................................... 372\n9.9　小结.............................................. 375\n9.10　参考文献.................................. 375",
      "pages": "376",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s27261368.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s27261368.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s27261368.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/25867920\/",
      "id": "25867920",
      "publisher": "电子工业出版社",
      "isbn10": "7121226766",
      "isbn13": "9787121226762",
      "title": "Node.js 实战",
      "url": "http:\/\/api.douban.com\/v2\/book\/25867920",
      "alt_title": "",
      "author_intro": "赵坤，现于北京红树岛科技有限公司实习，热爱互联网，崇尚开源精神。2013年偶遇Node.js，相见恨晚，从此开始一条Node.js不归路。\n寸志，毕业于同济大学信息安全专业，现任Teambition前端工程师；《深入浅出CoffeeScript》译者。\n雷宗民，某外贸公司PHP码农，2011年6月开始接触Node.js，从此开始各种折腾与重复造轮子。\n吴中骅，目前就职于苏州唐人数码科技有限公司，主要负责公司用户中心、充值平台的开发，API平台开发以及APP游戏研发。",
      "summary": "《Node.js 实战（双色）》通过8 个实例讲解了Node.js 在实战开发中的应用，涉及Node.js 常用框架、非关系型数据库、关系型数据库、运维命令和网络安全等内容。章节按照从简单到复杂的难度排序，每一章都通过一个有趣的实例指引读者从头开发一个应用，让读者可以循序渐进地学习Node.js，以及在实战开发中的编程技巧。\n《Node.js 实战（双色）》面向的是有一定Node.js 基础的读者，建议读者把本书当作入门书和进阶书之间的过渡书籍来阅读。当然，《Node.js 实战（双色）》也适合那些有其他服务器编程语言基础，并且想尝试Node.js 新鲜技术的人阅读。\n编辑推荐\n因为CNode社区点击率颇高、粉丝数万的《一起学node.js》，我认识了《Node.js实战》这本书的几位作者，他们在CNode社区内的贡献、与粉丝跟帖及回复频率，文章更新速度，让我确定了与其合作的想法。很高兴，《Node.js实战》没有成为教条式的入门级别，而是跳出Node.js入门的圈子，真正进入Node.js实战层次。《Node.js实战》的内容架构也是由简入难的，Node.js入门级读者也可从中得到灵感。对《Node.js实战》的内容用6个字可以总结：让人大呼过瘾！废话不多说了，目录就在下方，赶快看吧，绝对物超所值。\n本书中的实例涵盖了Node.js开发的各个部分，大到项目架构创建、小到每一次I\/O操作，在本书中都有详细的介绍。请阅读本书，将你的想法运行在你的Node进程上。\n——袁锋（@Python发烧友）某网数据产品部资深Web开发工程师，CNode.org社区核心成员\n如果你想用Node.js快速开发一个个人博客；如果你想用Node.js做一个爬虫程序，定时获取你想要的东西；如果你想用Node.js打造实时Web应用；如果你想让Node.js支持多线程；如果你想在npm上发布一个自己的package；如果你想让自己的Node.js站点更加安全；那么，你就需要拥有这本《Node.js实战》，本书对这些内容有详尽的实例供您参考。\n——田永强（@朴灵）就职于某网站数据平台，Node.js布道师，《深入浅出Node.js》作者\n无论是国家还是我们个人，都必须关注安全问题；同样，互联网安全也与每个互联网开发人员休戚相关。这本书介绍了使用Node.js开发Web应用可能面临的安全问题，以及抵御一些常规恶意攻击的各种防御措施，并搭建了一个安全的Web站点，其内容让人印象深刻。\n——谢骋超（@圈圈套圈圈）网易Pomelo开源分布式网络游戏框架总负责人\n本书是我看过的最贴近实战开发的Node.js书籍之一，虽然它由4位作者合力完成，写作风格难免有所不同，但是通读本书后，4位作者带来的精彩章节却让我大呼过瘾，有继续阅读下去的强烈欲望。感谢4位作者为我们这些Node.js爱好者带来了这本充满经验和知识的《Node.js实战》。\n——张轩丞（某网花名朋春）就职于某网站数据平台 曾主导开发的ITier（标准数据中间层）、MyFox（分布式MySQL集群代理层）",
      "price": "59"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 45,
        "average": "7.4",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Addy Osmani"
      ],
      "pubdate": "2012-7-22",
      "tags": [
        {
          "count": 53,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 43,
          "name": "Backbone.js",
          "title": "Backbone.js"
        },
        {
          "count": 18,
          "name": "前端",
          "title": "前端"
        },
        {
          "count": 15,
          "name": "web开发",
          "title": "web开发"
        },
        {
          "count": 9,
          "name": "Programming",
          "title": "Programming"
        },
        {
          "count": 8,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 5,
          "name": "O'Reilly",
          "title": "O'Reilly"
        },
        {
          "count": 5,
          "name": "Web开发",
          "title": "Web开发"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s9114173.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "150",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s9114173.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s9114173.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s9114173.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/10750114\/",
      "id": "10750114",
      "publisher": "O'Reilly Media",
      "isbn10": "1449328253",
      "isbn13": "9781449328252",
      "title": "Developing Backbone.js Applications",
      "url": "http:\/\/api.douban.com\/v2\/book\/10750114",
      "alt_title": "",
      "author_intro": "",
      "summary": "If you want to build your site's frontend with the single-page application (SPA) model, this hands-on book shows you how to get the job done with Backbone.js. You'll learn how to create structured JavaScript applications, using Backbone's own flavor of model-view-controller (MVC) architecture. Start with the basics of MVC, SPA, and Backbone, then get your hands dirty building sample applications - a simple Todo list app, a RESTful book library app, and a modular app with Backbone and RequireJS. Author Addy Osmani, an engineer for Google's Chrome team, also demonstrates advanced uses of the framework. Learn how Backbone.js brings MVC benefits to the client-side  Write code that can be easily read, structured, and extended  Work with the Backbone.Marionette and Thorax extension frameworks  Solve common problems you'll encounter when using Backbone.js  Organize your code into modules with AMD and RequireJS  Paginate data for your Collections with the Backbone.Paginator plugin  Bootstrap a new Backbone.js application with boilerplate code  Use Backbone with jQuery Mobile and resolve routing problems between the two  Unit-test your Backbone apps with Jasmine, QUnit, and SinonJS",
      "price": "USD 29.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 35,
        "average": "8.3",
        "min": 0
      },
      "subtitle": "",
      "author": [],
      "pubdate": "2014-5",
      "tags": [
        {
          "count": 35,
          "name": "Node.js",
          "title": "Node.js"
        },
        {
          "count": 25,
          "name": "nodejs",
          "title": "nodejs"
        },
        {
          "count": 19,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 17,
          "name": "web开发",
          "title": "web开发"
        },
        {
          "count": 14,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 13,
          "name": "node.js",
          "title": "node.js"
        },
        {
          "count": 7,
          "name": "node",
          "title": "node"
        },
        {
          "count": 6,
          "name": "前端开发",
          "title": "前端开发"
        }
      ],
      "origin_title": "Node.js in Action",
      "image": "https://img3.doubanio.com\/mpic\/s27264241.jpg",
      "binding": "平装",
      "translator": [
        "[美] Mike Cantelon",
        "[美] TJ Holowaychuk",
        "[美] Nathan Rajlich"
      ],
      "catalog": "第一部分　Node基础\n第1章　欢迎进入Node.js世界　　2\n1.1　构建于JavaScript之上　　3\n1.2　异步和事件触发：浏览器　　4\n1.3　异步和事件触发：服务器　　5\n1.4　DIRT程序　　6\n1.5　默认DIRT　　8\n1.5.1　简单的异步程序　　9\n1.5.2　Hello World HTTP服务器　　10\n1.5.3　流数据　　10\n1.6　小结　　11\n第2章　构建有多个房间的聊天室程序　　12\n2.1　程序概览　　12\n2.2　程序需求及初始设置　　15\n2.2.1　提供HTTP和WebSocket服务　　15\n2.2.2　创建程序的文件结构　　16\n2.2.3　指明依赖项　　16\n2.2.4　安装依赖项　　17\n2.3　提供HTML、CSS和客户端JavaScript的服务　　18\n2.3.1　创建静态文件服务器　　19\n2.3.2　添加HTML和CSS文件　　21\n2.4　用Socket.IO处理与聊天相关的消息　　23\n2.4.1　设置Socket.IO服务器　　24\n2.4.2　处理程序场景及事件　　25\n2.5　在程序的用户界面上使用客户端JavaScript　　29\n2.5.1　将消息和昵称\/房间变更请求传给服务器　　29\n2.5.2　在用户界面中显示消息及可用房间　　30\n2.6　小结　　34\n第3章　Node编程基础　　35\n3.1　Node功能的组织及重用　　36\n3.1.1　创建模块　　37\n3.1.2　用module.exports微调模块的创建　　39\n3.1.3　用node_modules重用模块　　40\n3.1.4　注意事项　　41\n3.2　异步编程技术　　42\n3.2.1　用回调处理一次性事件　　43\n3.2.2　用事件发射器处理重复性事件　　46\n3.2.3　异步开发的难题　　53\n3.3　异步逻辑的顺序化　　54\n3.3.1　什么时候使用串行流程控制　　55\n3.3.2　实现串行化流程控制　　56\n3.3.3　实现并行化流程控制　　58\n3.3.4　利用社区里的工具　　60\n3.4　小结　　61\n第二部分　用Node开发Web程序\n第4章　构建Node Web程序　　64\n4.1　HTTP服务器的基础知识　　64\n4.1.1　Node如何向开发者呈现HTTP请求　　65\n4.1.2　一个用“Hello World”做响应的HTTP服务器　　67\n4.1.3　读取请求头及设定响应头　　67\n4.1.4　设定HTTP响应的状态码　　67\n4.2　构建RESTful Web服务　　68\n4.2.1　用POST请求创建资源　　69\n4.2.2　用GET请求获取资源　　71\n4.2.3　用DELETE请求移除资源　　72\n4.3　提供静态文件服务　　73\n4.3.1　创建一个静态文件服务器　　73\n4.3.2　处理服务器错误　　77\n4.3.3　用fs.stat()实现先发制人的错误处理　　77\n4.4　从表单中接受用户输入　　78\n4.4.1　处理提交的表单域　　78\n4.4.2　用formidable处理上传的文件　　81\n4.4.3　计算上传进度　　84\n4.5　用HTTPS加强程序的安全性　　85\n4.6　小结　　86\n第5章　存储Node程序中的数据　　87\n5.1　无服务器的数据存储　　88\n5.1.1　内存存储　　88\n5.1.2　基于文件的存储　　88\n5.2　关系型数据库管理系统　　91\n5.2.1　MySQL　　91\n5.2.2　PostgreSQL　　99\n5.3　NoSQL数据库　　100\n5.3.1　Redis　　101\n5.3.2　MongoDB　　105\n5.3.3　Mongoose　　107\n5.4　小结　　109\n第6章　Connect　　110\n6.1　搭建一个Connect程序　　111\n6.2　Connect的工作机制　　112\n6.2.1　做日志的中间件　　112\n6.2.2　响应“hello world”的中间件　　113\n6.3　为什么中间件的顺序很重要　　114\n6.3.1　中间件什么时候不调用next()　　114\n6.3.2　用中间件的顺序执行认证　　115\n6.4　挂载中间件和服务器　　115\n6.4.1　认证中间件　　116\n6.4.2　显示管理面板的中间件　　117\n6.5　创建可配置中间件　　118\n6.5.1　创建可配置的logger中间件组件　　119\n6.5.2　构建路由中间件组件　　120\n6.5.3　构建一个重写URL的中间件组件　　122\n6.6　使用错误处理中间件　　123\n6.6.1　Connect的默认错误处理器　　124\n6.6.2　自行处理程序错误　　124\n6.6.3　使用多个错误处理中间件组件　　125\n6.7　小结　　129\n第7章　Connect自带的中间件　　130\n7.1　解析cookie、请求主体和查询字符串的中间件　　131\n7.1.1　cookieParser()：解析HTTP cookie　　131\n7.1.2　bodyParser()：解析请求主体　　134\n7.1.3　limit()：请求主体的限制　　135\n7.1.4　query()：查询字符串解析　　137\n7.2　实现Web程序核心功能的中间件　　138\n7.2.1　logger()：记录请求　　138\n7.2.2　favicon()：提供favicon　　140\n7.2.3　methodOverride()：伪造HTTP方法　　141\n7.2.4　vhost()：虚拟主机　　143\n7.2.5　session()：会话管理　　144\n7.3　处理Web程序安全的中间件　　148\n7.3.1　basicAuth()：HTTP基本认证　　148\n7.3.2　csrf()：跨站请求伪造防护　　150\n7.3.3　errorHandler()：开发错误处理　　150\n7.4　提供静态文件服务的中间件　　152\n7.4.1　static()：静态文件服务　　152\n7.4.2　compress()：压缩静态文件　　154\n7.4.3　directory()：目录列表　　156\n7.5　小结　　157\n第8章　Express　　158\n8.1　生成程序骨架　　160\n8.1.1　安装Express的可执行程序　　161\n8.1.2　生成程序　　162\n8.1.3　探索程序　　162\n8.2　配置Express和你的程序　　164\n8.3　渲染视图　　166\n8.3.1　视图系统配置　　167\n8.3.2　视图查找　　169\n8.3.3　把数据输出到视图中　　171\n8.4　处理表单和文件上传　　175\n8.4.1　实现照片模型　　175\n8.4.2　创建照片上传表单　　176\n8.4.3　显示上传照片列表　　178\n8.5　创建资源下载　　179\n8.5.1　创建照片下载路由　　179\n8.5.2　实现照片下载路由　　180\n8.6　小结　　182\n第9章　Express进阶　　183\n9.1　认证用户　　184\n9.1.1　保存和加载用户　　184\n9.1.2　注册新用户　　189\n9.1.3　已注册用户登录　　194\n9.1.4　用户加载中间件　　197\n9.2　先进的路由技术　　199\n9.2.1　校验用户内容提交　　199\n9.2.2　特定路由中间件　　202\n9.2.3　实现分页　　205\n9.3　创建一个公开的REST API　　208\n9.3.1　设计API　　208\n9.3.2　添加基本的认证　　209\n9.3.3　实现路由　　209\n9.3.4　启用内容协商　　212\n9.4　错误处理　　214\n9.4.1　处理404错误　　215\n9.4.2　处理错误　　217\n9.5　小结　　220\n第10章　测试Node程序　　221\n10.1　单元测试　　222\n10.1.1　assert模块　　222\n10.1.2　Nodeunit　　225\n10.1.3　Mocha　　227\n10.1.4　Vows　　232\n10.1.5　should.js　　234\n10.2　验收测试　　235\n10.2.1　Tobi　　236\n10.2.2　Soda　　237\n10.3　小结　　239\n第11章　Web程序模板　　240\n11.1　用模板保持代码的整洁性　　240\n11.2　嵌入JavaScript的模板　　244\n11.2.1　创建模板　　245\n11.2.2　用EJS过滤器处理模板数据　　246\n11.2.3　将EJS集成到你的程序中　　249\n11.2.4　在客户端程序中使用EJS　　250\n11.3　使用Mustache模板语言与Hogan　　251\n11.3.1　创建模板　　251\n11.3.2　Mustache标签　　252\n11.3.3　微调Hogan　　254\n11.4　用Jade做模板　　255\n11.4.1　Jade基础知识　　256\n11.4.2　Jade模板中的逻辑　　258\n11.4.3　组织Jade模板　　260\n11.5　小结　　264\n第三部分　在Node中更进一步\n第12章　部署Node程序并维持正常运行时间　　266\n12.1　安置Node程序　　266\n12.1.1　专用的和虚拟私有服务器　　267\n12.1.2　云主机　　268\n12.2　部署的基础知识　　269\n12.2.1　从Git存储库部署　　270\n12.2.2　让Node保持运行　　270\n12.3　让正常运行时间和性能达到最优　　271\n12.3.1　用Upstart维护正常运行时间　　272\n12.3.2　集群API：利用多核的优势　　273\n12.3.3　静态文件及代理　　275\n12.4　小结　　277\n第13章　超越Web服务器　　278\n13.1　Socket.IO　　278\n13.1.1　创建一个最小的Socket.IO程序　　279\n13.1.2　用Socket.IO触发页面和CSS的重新加载　　281\n13.1.3　Socket.IO的其他用法　　283\n13.2　深入TCP\/IP网络　　284\n13.2.1　处理缓冲区和二进制数据　　284\n13.2.2　创建TCP服务器　　286\n13.2.3　创建TCP客户端　　289\n13.3　跟操作系统交互的工具　　290\n13.3.1　单例的全局process对象　　291\n13.3.2　使用文件系统模块　　293\n13.3.3　繁衍外部进程　　296\n13.4　开发命令行工具　　301\n13.4.1　解析命令行参数　　301\n13.4.2　处理stdin和stdout　　302\n13.4.3　添加彩色的输出　　304\n13.5　小结　　306\n第14章　Node生态系统　　307\n14.1　给Node开发人员的在线资源　　308\n14.1.1　Node和模块的参考资料　　308\n14.1.2　Google群组　　309\n14.1.3　IRC　　309\n14.1.4　GitHub问题列表　　310\n14.2　GitHub　　310\n14.2.1　GitHub入门　　311\n14.2.2　添加一个项目到GitHub中　　312\n14.2.3　用GitHub协作　　314\n14.3　为npm库做贡献　　316\n14.3.1　准备包　　317\n14.3.2　编写包规范　　317\n14.3.3　测试和发布包　　318\n14.4　小结　　320\n附录A　安装Node和社区附加组件　　321\n附录B　调试Node　　329\n附录C　Express的扩展及配置　　336",
      "ebook_url": "http:\/\/read.douban.com\/ebook\/14300777\/",
      "pages": "356",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s27264241.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s27264241.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s27264241.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/25870705\/",
      "id": "25870705",
      "publisher": "人民邮电出版社",
      "isbn10": "7115352461",
      "isbn13": "9787115352460",
      "title": "Node.js实战",
      "url": "http:\/\/api.douban.com\/v2\/book\/25870705",
      "alt_title": "Node.js in Action",
      "author_intro": "作者简介：\nMike Cantelon\nNode.js核心框架贡献者、Node社区活跃分子、资深培训师和演讲人。\nMarc Harter\nNode.js核心框架贡献者。\nT.J. Holowaychuk\n参与开发了很多Node.js模块，包括流行的Express框架。\nNathan Rajlich\n大名鼎鼎的TooTallNate，Node.js核心代码提交者。\n译者简介：\n吴海星\n2001年毕业于南京理工大学。编程数载代码不过几十万，翻译几年码字不过几百万。项目不过十几个，带队不到五十人。年过而立，惴惴不安，愈加发奋，孜孜求学，愿凭绵薄之力，贡献于IT社区。",
      "summary": "服务器端JavaScript？没错。Node.js是一个JavaScript服务器，支持可伸缩的高性能Web应用。借助异步I\/O，这个服务器可以同时做很多事情，能满足聊天、游戏和实时统计等应用的需求。并且既然是JavaScript，那你就可以全栈使用一种语言。\n本书向读者展示了如何构建产品级应用，对关键概念的介绍清晰明了，贴近实际的例子，涵盖从安装到部署的各个环节，是一部讲解与实践并重的优秀著作。通过学习本书，读者将深入异步编程、数据存储、输出模板、读写文件系统，掌握创建TCP\/IP服务器和命令行工具等非HTTP程序的技术。本书同样非常适合熟悉Rails、Django或PHP开发的读者阅读学习。\n本书主要内容：\nNode.js及其扩展的安装配置；\n全面理解异步编程和事件循环；\n学会开发微博、聊天和游戏等热门应用。",
      "ebook_price": "29.99",
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 43,
        "average": "6.7",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "[英] George Ornbo"
      ],
      "pubdate": "2013-4-1",
      "tags": [
        {
          "count": 31,
          "name": "node.js",
          "title": "node.js"
        },
        {
          "count": 20,
          "name": "Node.js",
          "title": "Node.js"
        },
        {
          "count": 10,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 8,
          "name": "javascript",
          "title": "javascript"
        },
        {
          "count": 3,
          "name": "后端开发",
          "title": "后端开发"
        },
        {
          "count": 3,
          "name": "前端",
          "title": "前端"
        },
        {
          "count": 2,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 1,
          "name": "程序设计",
          "title": "程序设计"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s26588828.jpg",
      "binding": "平装",
      "translator": [
        "傅强",
        "陈宗斌"
      ],
      "catalog": "第1部分　入门\n第1章　Node.js介绍　2\n1.1　什么是Node.js　2\n1.2　使用Node.js能做什么　3\n1.3　安装并创建第一个Node.js程序　3\n1.3.1　验证Node.js正确安装　4\n1.3.2　创建“Hello World”Node.js程序　4\n1.4　小结　5\n1.5　问与答　6\n1.6　测验　6\n1.6.1　问题　6\n1.6.2　答案　7\n1.7　练习　7\n第2章　npm(Node包管理器)　8\n2.1　npm是什么　8\n2.2　安装npm　9\n2.3　安装模块　9\n2.4　使用模块　10\n2.5　如何找模块　11\n2.5.1　官方来源　11\n2.5.2　非官方来源　12\n2.6　本地和全局的安装　13\n2.6.1　本地安装　13\n2.6.2　全局安装　13\n2.7　如何找模块文档　14\n2.8　使用package.json指定依赖关系(dependency)　14\n2.9　小结　16\n2.10　问与答　16\n2.11　测验　16\n2.11.1　问题　16\n2.11.2　答案　17\n2.12　练习　17\n第3章　Node.js的作用　18\n3.1　设计Node.js的目的　18\n3.2　理解I\/O　19\n3.3　处理输入　19\n3.4　联网的I\/O是不可预测的　22\n3.5　人类是不可预测的　24\n3.6　处理不可预测性　25\n3.7　小结　26\n3.8　问与答　26\n3.9　测验　27\n3.9.1　问题　27\n3.9.2　答案　27\n3.10　练习　27\n第4章　回调(Callback)　29\n4.1　什么是回调　29\n4.2　剖析回调　33\n4.3　Node.js如何使用回调　34\n4.4　同步和异步代码　36\n4.5　事件循环　39\n4.6　小结　39\n4.7　问与答　39\n4.8　测验　40\n4.8.1　问题　40\n4.8.2　答案　40\n4.9　练习　40\n第2部分　使用Node.js的基本网站\n第5章　HTTP　44\n5.1　什么是HTTP　44\n5.2　使用Node.js的HTTP服务器　44\n5.2.1　一个基础的服务器　44\n5.2.2　加入头(Header)　45\n5.2.3　检查响应头　46\n5.2.4　Node.js中的重定向　49\n5.2.5　响应不同的请求　50\n5.3　使用Node.js的HTTP客户端　52\n5.4　小结　53\n5.5　问与答　53\n5.6　测验　54\n5.6.1　问题　54\n5.6.2　答案　54\n5.7　练习　54\n第6章　Express介绍　55\n6.1　什么是Express　55\n6.2　为什么使用Express　55\n6.3　安装Express　56\n6.4　创建一个基础的Express站点　56\n6.5　探索Express　58\n6.5.1　app.js　58\n6.5.2　node_modules　58\n6.5.3　package.json　58\n6.5.4　public　58\n6.5.5　routes　58\n6.5.6　views　58\n6.6　介绍Jade　59\n6.6.1　使用Jade定义页面结构　60\n6.6.2　使用Jade输出数据　62\n6.7　小结　68\n6.8　问与答　68\n6.9　测验　68\n6.9.1　问题　69\n6.9.2　答案　69\n6.10　练习　69\n第7章　深入Express　70\n7.1　Web应用程序中的路由　70\n7.2　在Express中路由如何工作　70\n7.3　添加GET路由　71\n7.4　添加POST路由　72\n7.5　在路由中使用参数　73\n7.6　让路由保持可维护性　74\n7.7　视图渲染　75\n7.8　使用本地变量　76\n7.9　小结　78\n7.10　问与答　78\n7.11　测验　78\n7.11.1　问题　79\n7.11.2　答案　79\n7.12　练习　79\n第8章　数据的持久化　80\n8.1　什么是持久的数据　80\n8.2　将数据写入文件　81\n8.3　从文件读取数据　82\n8.4　读取环境变量　83\n8.5　使用数据库　84\n8.5.1　关系数据库　84\n8.5.2　NoSQL数据库　85\n8.6　在Node.js中使用MongoDB　85\n8.6.1　安装MongoDB　86\n8.6.2　连接MongoDB　87\n8.6.3　定义文档　89\n8.6.4　将Twitter Bootstrap包含进来　90\n8.6.5　索引(Index)视图　91\n8.6.6　创建(Create)视图　93\n8.6.7　编辑视图　95\n8.6.8　删除任务　98\n8.6.9　添加闪出消息　99\n8.6.10　验证输入的数据　101\n8.7　小结　102\n8.8　问与答　103\n8.9　测验　103\n8.9.1　问题　103\n8.9.2　答案　103\n8.10　练习　104\n第3部分　调试、测试与部署\n第9章　调试Node.js应用程序　106\n9.1　调试　106\n9.2　STDIO模块　107\n9.3　Node.js调试器　111\n9.4　Node Inspector　113\n9.5　关于测试的注释　116\n9.6　小结　116\n9.7　问与答　116\n9.8　测验　117\n9.8.1　问题　117\n9.8.2　答案　117\n9.9　练习　117\n第10章　测试Node.js应用程序　119\n10.1　为什么测试　119\n10.2　Assert(断言)模块　120\n10.3　第三方测试工具　122\n10.4　行为驱动的开发(Behavior Driven Development)　125\n10.4.1　Vows　125\n10.4.2　Mocha　128\n10.5　小结　131\n10.6　问与答　131\n10.7　测验　132\n10.7.1　问题　132\n10.7.2　答案　132\n10.8　练习　132\n第11章　部署Node.js应用程序　133\n11.1　准备好部署　133\n11.2　在云上托管　133\n11.3　Heroku　135\n11.3.1　注册Heroku　135\n11.3.2　为Heroku准备应用程序　136\n11.3.3　将应用程序部署到Heroku　137\n11.4　Cloud Foundry　138\n11.4.1　注册Cloud Foundry　138\n11.4.2　为Cloud Foundry准备应用程序　139\n11.4.3　将应用程序部署到Cloud Foundry　140\n11.5　Nodester　141\n11.5.1　注册Nodester　141\n11.5.2　为Nodester准备应用程序　142\n11.5.3　将应用程序部署到Nodester　143\n11.6　其他PaaS提供商　144\n11.7　小结　144\n11.8　问与答　144\n11.9　测验　145\n11.9.1　测验　145\n11.9.2　答案　145\n11.10　练习　145\n第4部分　使用Node.js的中间站点\n第12章　介绍Socket.IO　148\n12.1　现在要开始学习一些完全不同的技术了　148\n12.2　动态Web简史　148\n12.3　Socket.IO　149\n12.4　基础的Socket.IO示例　150\n12.5　从服务器发送数据到客户端　152\n12.6　将数据广播给客户端　156\n12.7　双向数据　160\n12.8　小结　163\n12.9　问与答　163\n12.10　测验　164\n12.10.1　问题　164\n12.10.2　答案　164\n12.11　练习　165\n第13章　一个Socket.IO聊天服务器　166\n13.1　Express和Socket.IO　166\n13.2　添加昵称　168\n13.2.1　将昵称发送给服务器　169\n13.2.2　管理昵称列表　171\n13.2.3　使用回调来验证　174\n13.2.4　广播昵称列表　178\n13.2.5　添加消息收发功能　179\n13.3　小结　183\n13.4　问与答　184\n13.5　测验　184\n13.5.1　问题　184\n13.5.2　答案　184\n13.6　练习　185\n第14章　一个流Twitter客户端　186\n14.1　流API　186\n14.2　注册Twitter　187\n14.3　和Node.js一起使用Twitter的API　189\n14.4　从数据中挖掘含义　191\n14.5　将数据推送到浏览器　194\n14.6　创建一个实时的爱恨表　197\n14.7　小结　206\n14.8　问与答　206\n14.9　测验　206\n14.9.1　问题　206\n14.9.2　答案　206\n14.10　练习　207\n第15章　JSON API　208\n15.1　API　208\n15.2　JSON　209\n15.3　使用Node.js发送JSON数据　211\n15.4　从JavaScript对象创建JSON　212\n15.5　使用Node.js消费JSON数据　213\n15.6　使用Node.js创建JSON API　216\n15.6.1　在Express中以JSON发送数据　216\n15.6.2　构建应用程序　219\n15.7　小结　224\n15.8　问与答　225\n15.9　测验　225\n15.9.1　问题　225\n15.9.2　答案　225\n15.10　练习　226\n第5部分　探索Node.js API\n第16章　进程模块　228\n16.1　进程是什么　228\n16.2　退出进程以及进程中的错误　230\n16.3　进程与信号　230\n16.4　向进程发送信号　231\n16.5　使用Node.js创建脚本　233\n16.6　给脚本传递参数　234\n16.7　小结　236\n16.8　问与答　236\n16.9　测验　237\n16.9.1　问题　237\n16.9.2　答案　237\n16.10　练习　238\n第17章　子进程模块　239\n17.1　什么是子进程　239\n17.2　杀死子进程　241\n17.3　与子进程通信　242\n17.4　集群(Cluster)模块　244\n17.5　小结　246\n17.6　问与答　246\n17.7　测验　246\n17.7.1　问题　246\n17.7.2　答案　246\n17.8　练习　247\n第18章　事件模块　248\n18.1　理解事件　248\n18.2　通过HTTP演示事件　251\n18.3　用事件玩乒乓　254\n18.4　动态编写事件侦听器程序　255\n18.5　小结　258\n18.6　问与答　258\n18.7　测验　259\n18.7.1　问题　259\n18.7.2　答案　259\n18.8　练习　259\n第19章　缓冲区模块　260\n19.1　二进制数据初步　260\n19.2　从二进制到文本　261\n19.3　二进制和Node.js　262\n19.4　Node.js中的缓冲区是什么？　264\n19.5　写入缓冲区　265\n19.6　向缓冲区追加数据　266\n19.7　复制缓冲区　267\n19.8　修改缓冲区中的字符串　267\n19.9　小结　268\n19.10　问与答　268\n19.11　测验　268\n19.11.1　问题　268\n19.11.2　答案　269\n19.12　练习　269\n第20章　流模块　270\n20.1　流简介　270\n20.2　可读流　272\n20.3　可写流　275\n20.4　通过管道连接流　276\n20.5　流的MP3　277\n20.6　小结　278\n20.7　问与答　278\n20.8　测验　279\n20.8.1　问题　279\n20.8.2　答案　279\n20.9　练习　279\n第6部分　进一步的Node.js开发\n第21章　CoffeeScript　282\n21.1　什么是CoffeeScript　282\n21.2　安装与运行CoffeeScript　284\n21.3　为什么要使用预编译器　285\n21.4　CoffeeScript的功能　286\n21.4.1　最小语法　286\n21.4.2　条件和比较　287\n21.4.3　循环　288\n21.4.4　字符串　289\n21.4.5　对象　290\n21.4.6　类、继承和super　291\n21.5　调试CoffeeScript　294\n21.6　对CoffeeScript的反应　294\n21.7　小结　295\n21.8　问与答　295\n21.9　测验　296\n21.9.1　问题　296\n21.9.2　答案　296\n21.10　练习　296\n第22章　创建Node.js模块　298\n22.1　为什么创建模块　298\n22.2　流行的Node.js模块　298\n22.3　package.json文件　299\n22.4　文件夹结构　301\n22.5　开发和测试模块　302\n22.6　添加可执行文件　304\n22.7　使用面向对象或者基于原型的编程　305\n22.8　通过GitHub共享代码　306\n22.9　使用Travis CI　307\n22.10　发布到npm　309\n22.11　公开模块　310\n22.12　小结　310\n22.13　问与答　310\n22.14　测验　311\n22.14.1　问题　311\n22.14.2　答案　311\n22.15　练习　311\n第23章　使用Connect创建中间件　312\n23.1　什么是中间件　312\n23.2　Connect中的中间件　313\n23.3　使用中间件的访问控制　317\n23.4　按IP地址限制访问　319\n23.5　将用户强制到单个域上　321322\n23.6　小结　323324\n23.7　问与答　324\n23.8　测验　324\n23.8.1　问题　324\n23.8.2　答案　324325\n23.9　练习　324325\n第24章　结合使用Backbone.js与Node.js　326\n24.1　什么是Backbone.js　326\n24.2　Backbone.js如何工作　327\n24.3　一个简单的Backbone.js视图　332\n24.4　使用Backbone.js创建记录　336\n24.5　小结　337\n24.6　问与答　337\n24.7　测验　338\n24.7.1　问题　338\n24.7.2　答案　338\n24.8　练习　338",
      "pages": "338",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s26588828.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s26588828.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s26588828.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/23780706\/",
      "id": "23780706",
      "publisher": "人民邮电出版社",
      "isbn10": "7115311072",
      "isbn13": "9787115311078",
      "title": "Node.js入门经典",
      "url": "http:\/\/api.douban.com\/v2\/book\/23780706",
      "alt_title": "",
      "author_intro": "George Ornbo是英国的一位JavaScript和Ruby开发人员。他开发Web应用程序已有8年时间，一开始是以自由职业者的身份工作，最近则为伦敦的pebble {code}工作。他的博客地址是http:\/\/shapeshed.com，在网络中大多数常见的地方，他都以@shapeshed出现。",
      "summary": "",
      "series": {
        "id": "28591",
        "title": "入门经典"
      },
      "price": "59.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 34,
        "average": "6.9",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "何启伟",
        "徐会生",
        "康爱媛"
      ],
      "pubdate": "2010-5",
      "tags": [
        {
          "count": 28,
          "name": "ExtJs",
          "title": "ExtJs"
        },
        {
          "count": 16,
          "name": "javascript",
          "title": "javascript"
        },
        {
          "count": 9,
          "name": "web",
          "title": "web"
        },
        {
          "count": 9,
          "name": "前端开发",
          "title": "前端开发"
        },
        {
          "count": 7,
          "name": "前端",
          "title": "前端"
        },
        {
          "count": 3,
          "name": "开发",
          "title": "开发"
        },
        {
          "count": 3,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 2,
          "name": "设计",
          "title": "设计"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s4335889.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "",
      "pages": "488",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4335889.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4335889.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4335889.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4811111\/",
      "id": "4811111",
      "publisher": "人民邮电出版社",
      "isbn10": "7115226377",
      "isbn13": "9787115226372",
      "title": "深入浅出Ext JS",
      "url": "http:\/\/api.douban.com\/v2\/book\/4811111",
      "alt_title": "",
      "author_intro": "徐会生  高级软件工程师兼系统架构师，资深Java EE开发专家。他是国内探索Ext JS的先驱之一，精通UI开发，业余时间为Family168（www.family168.com）撰写了大量开源方面的教程。\n何启伟  拥有10余年Java EE开发经验，为银行、医疗、烟草等各大行业成功开发了大量企业级应用。他用Ext JS和J2EE开发了一个强大的企业级应用框架——Ext Framework，在国内颇具影响力。同时，他还独立开发了大量EXT扩展组件，深受广大开发者欢迎。\n康爱媛  从事金融行业软件开发多年，目前是上海一家大型IT公司的高级工程师，利用Java EE和Ext JS为众多行业开发过企业级的系统框架。",
      "summary": "以用户为中心的时代，应用的界面外观变得越来越重要。然而，很多程序员都缺乏美术功底，要开发出界面美观的应用实属不易。Ext JS的出现，为广大程序员解决了这一难题。它有丰富多彩的界面和强大的功能，是开发具有炫丽外观的RIA应用的最佳选择。\n本书是《深入浅出Ext JS》的升级版，涵盖了最新发布的Ext JS 3.2新特性，并对上一版的内容进行增补，充实了示例代码，同时补充了两个功能强大的实例。特别是新增了如何优化基于EXT的应用，提升加载速度，如何创建用户扩展组件以及常用的第三方扩展件等内容。大家可以看到如何在EXT中使用漂亮的图表，尽情欣赏EXT在性能方面实现的巨大突破，以及各种各样的绚丽组件。\n本书注重理论与实践相结合，适合各层次Web开发人员阅读。",
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 18,
        "average": "7.2",
        "min": 0
      },
      "subtitle": "Professional Ext JS",
      "author": [
        "黄灯桥",
        "徐会生"
      ],
      "pubdate": "2010-1",
      "tags": [
        {
          "count": 9,
          "name": "javascript",
          "title": "javascript"
        },
        {
          "count": 7,
          "name": "ext",
          "title": "ext"
        },
        {
          "count": 5,
          "name": "extjs",
          "title": "extjs"
        },
        {
          "count": 3,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 2,
          "name": "JS高级程序设计",
          "title": "JS高级程序设计"
        },
        {
          "count": 2,
          "name": "Ext",
          "title": "Ext"
        },
        {
          "count": 2,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 2,
          "name": "web前端",
          "title": "web前端"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s4085147.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "前  言\n\n第一部分   Ext Core\n第 1 章   Ext Core 重要概念••••••••••••••••2\n1.1  Ext.Element•••••••••••••••••••••••••••••••••••••••••2\n1.1.1  获取 HTMLElement 节点的 Ext.Element 实例•••••••••••••••••••••••••2\n1.1.2  CSS 样式操作•••••••••••••••••••••••••••••3\n1.1.3  DOM 查询与遍历•••••••••••••••••••••••4\n1.1.4  DOM 操作•••••••••••••••••••••••••••••••••••6\n1.1.5  事件处理•••••••••••••••••••••••••••••••••••••9\n1.1.6  尺寸大小•••••••••••••••••••••••••••••••••••13\n1.1.7  定位功能•••••••••••••••••••••••••••••••••••14\n1.1.8  动画功能•••••••••••••••••••••••••••••••••••16\n1.1.9  杂项•••••••••••••••••••••••••••••••••••••••••••19\n1.2  Ext Core 的 Ajax 功能••••••••••••••••••••••19\n1.3  DomQuery 详解••••••••••••••••••••••••••••••••20\n1.4  模板介绍 ••••••••••••••••••••••••••••••••••••••••••23\n1.5  实用功能 ••••••••••••••••••••••••••••••••••••••••••24\n1.6  定时执行代码 ••••••••••••••••••••••••••••••••••25\n1.7  本章小结 ••••••••••••••••••••••••••••••••••••••••••26\n第 2 章   Ext Core 实例系统 设计•••••••••••••••••••••••••••••••••••••••••••27\n2.1  需求分析 ••••••••••••••••••••••••••••••••••••••••••27\n2.2  系统设计•••••••••••••••••••••••••••••••••••••••••• 28\n2.3  功能结构图•••••••••••••••••••••••••••••••••••••• 29\n2.4  开发与运行环境•••••••••••••••••••••••••••••• 31\n2.5  数据库设计•••••••••••••••••••••••••••••••••••••• 31\n2.6  本章小结•••••••••••••••••••••••••••••••••••••••••• 34\n第 3 章   Ext Core 实例— .NET 语言实现 ••••••••••••••••••••• 35\n3.1  创建应用并设置开发环境 •••••••••••••• 35\n3.2  自定义 Membership 提供程序 •••••••• 37\n3.3  创建母版页•••••••••••••••••••••••••••••••••••••• 38\n3.4  首页设计•••••••••••••••••••••••••••••••••••••••••• 42\n3.5  产品列表页•••••••••••••••••••••••••••••••••••••• 47\n3.6  产品详细信息页•••••••••••••••••••••••••••••• 51\n3.7  登录对话框•••••••••••••••••••••••••••••••••••••• 56\n3.8  用户注册对话框•••••••••••••••••••••••••••••• 61\n3.9  购物车对话框•••••••••••••••••••••••••••••••••• 65\n3.10  结算•••••••••••••••••••••••••••••••••••••••••••••••• 70\n3.11  为产品详细页添加评论••••••••••••••••• 77\n3.12  本章小结•••••••••••••••••••••••••••••••••••••••• 84\n第 4 章   Ext Core 实例— Java 语言实现 •••••••••••••••••••• 85\n4.1  技术选型•••••••••••••••••••••••••••••••••••••••••• 85\n4.2  搭建开发环境•••••••••••••••••••••••••••••••••• 85\n4.3  设计页面布局 ••••••••••••••••••••••••••••••••••87\n4.4  网上商店首页 ••••••••••••••••••••••••••••••••••90\n4.5  产品列表页面 ••••••••••••••••••••••••••••••••••98\n4.6  产品详细信息页面•••••••••••••••••••••••••105\n4.7  登录对话框 ••••••••••••••••••••••••••••••••••••113\n4.8  用户注册对话框•••••••••••••••••••••••••••••118\n4.9  购物车对话框 ••••••••••••••••••••••••••••••••123\n4.10  结算页面 ••••••••••••••••••••••••••••••••••••••126\n4.11  为产品添加评论功能•••••••••••••••••••133\n4.12  本章小结 ••••••••••••••••••••••••••••••••••••••139\n\n第二部分   Store 和 Direct\n第 5 章   在.NET 中使用 Ext.Direct ••••••••••••••••••••••••••••142\n5.1  路由器包的内容•••••••••••••••••••••••••••••142\n5.2  DIY 一个 Ext.Direct 实例 ••••••••••••••152\n5.3  NewtonSoft.JSON•••••••••••••••••••••••••••155\n5.3.1  JSON 的序列化和反序\n列化••••••••••••••••••••••••••••••••••••••••••155\n5.3.2  LINQ to JSON •••••••••••••••••••••••••158\n5.3.3  JSON 文本的输出•••••••••••••••••••162\n5.4  本章小结 ••••••••••••••••••••••••••••••••••••••••163\n第 6 章   在 Java 中使用 Ext.Direct•••••••••••••••••••••••••••••164\n6.1  在 Java 平台上配置 Ext.Direct•••••••164\n6.1.1  下载 directjngine••••••••••••••••••••••164\n6.1.2  配置主控 servlet ••••••••••••••••••••••165\n6.1.3  配置客户端 •••••••••••••••••••••••••••••170\n6.1.4  编写 JavaScript 调用 远程方法•••••••••••••••••••••••••••••••••172\n6.2  为 Ext.Direct 自定义远程方法•••••••••173\n6.3  Ext.Direct 中的高级应用••••••••••••••• 178\n6.3.1  批量请求和批量响应••••••••••••• 178\n6.3.2  在 tree 中使用 Ext.Direct •••••••• 181\n6.3.3  为 grid 设置 DirectStore•••••••••• 183\n6.3.4  在 form 中使用 Ext.Direct 加载数据 ••••••••••••••••••••••••••••••••• 185\n6.3.5  在 form 中使用 Ext.Direct 提交数据••••••••••••••••••••••••••••••••• 187\n6.3.6  使用 polling 方式进行轮询•••• 189\n6.4  本章小结•••••••••••••••••••••••••••••••••••••••• 191\n第 7 章   Store •••••••••••••••••••••••••••••••••••••• 192\n7.1  Store 的结构••••••••••••••••••••••••••••••••••• 192\n7.2  Ext.data.Field•••••••••••••••••••••••••••••••••• 197\n7.3  Ext.data.Record•••••••••••••••••••••••••••••• 198\n7.4  ArrayReader、JsonReader 和 XmlReader••••••••••••••••••••••••••••••••••••• 199\n7.4.1  JsonReader •••••••••••••••••••••••••••••• 200\n7.4.2  ArrayReader•••••••••••••••••••••••••••• 200\n7.4.3  XmlReader •••••••••••••••••••••••••••••• 201\n7.5  Store 的加载数据••••••••••••••••••••••••••• 201\n7.6  Store 的数据操作••••••••••••••••••••••••••• 203\n7.6.1  添加数据••••••••••••••••••••••••••••••••• 203\n7.6.2  删除数据••••••••••••••••••••••••••••••••• 203\n7.6.3  搜索、定位和统计••••••••••••••••• 203\n7.6.4  更新数据••••••••••••••••••••••••••••••••• 206\n7.6.5  排序 •••••••••••••••••••••••••••••••••••••••• 207\n7.7  DataProxy••••••••••••••••••••••••••••••••••••••• 208\n7.8  DirectStore ••••••••••••••••••••••••••••••••••••• 209\n7.9  DataWriter•••••••••••••••••••••••••••••••••••••• 212\n7.10  Ext.data.Api•••••••••••••••••••••••••••••••••• 212\n7.11  本章小结•••••••••••••••••••••••••••••••••••••• 213\n第三部分   Ext-UI\n第 8 章   Ext 用户界面控件••••••••••••••216\n8.1  布局••••••••••••••••••••••••••••••••••••••••••••••••216\n8.1.1  在 FormPanel 中使用 HBoxLayout 进行布局••••••••••••216\n8.1.2  在 FormPanel 中使用 HBoxLayout 和 VBoxLayout 进行布局•••••••••••••••••••••••••••••••••219\n8.1.3  Panel 的 body 的样式范围•••••••••••••••••••••••••••••••••••••••••224\n8.2  Form 表单组件•••••••••••••••••••••••••••••••226\n8.2.1  DisplayField 控件••••••••••••••••••••226\n8.2.2  在 FormPanel 中使用TabPanel ••••••••••••••••••••••••••••••••••229\n8.2.3  DirectLoad 与 DirectSubmit ••••••••••••••••••••••••••••232\n8.2.4  使用 DirectSubmit 上传文件•••••••••••••••••••••••••••••••••••••••••235\n8.3  Grid 组件••••••••••••••••••••••••••••••••••••••••238\n8.3.1  一个结合 DataWrite 和 RowEditor 的 Grid 示例••••••••••238\n8.3.2  在 CRUD 操作中 restful 的 设置以及使用 Ext.Direct 的问题•••••••••••••••••••••••••••••••••••••••••247\n8.4  ListView 控件•••••••••••••••••••••••••••••••••248\n8.5  本章小结 ••••••••••••••••••••••••••••••••••••••••251\n第四部分   Ext  扩展和 Ext 插件\n第 9 章   Ext  扩展 •••••••••••••••••••••••••••••••254\n9.1  利用 Ext.extend 实现继承••••••••••••••254\n9.2  与 Ext 扩展相关的预备知识••••••••• 256\n9.2.1  定义命名空间••••••••••••••••••••••••• 256\n9.2.2  重写构造函数••••••••••••••••••••••••• 257\n9.2.3  继承组件的一些准备••••••••••••• 257\n9.2.4  常用的辅助函数••••••••••••••••••••• 258\n9.2.5  使用 xtype••••••••••••••••••••••••••••••• 258\n9.3  实现一个功能完整的增、删、查、改表格控件 ••••••••••••••••••••••••••• 259\n9.3.1  扩展 GridPanel •••••••••••••••••••••••• 259\n9.3.2  配置列模型••••••••••••••••••••••••••••• 259\n9.3.3  配置显示数据••••••••••••••••••••••••• 260\n9.3.4  点缀 EasyGrid••••••••••••••••••••••••• 261\n9.3.5  实现添加一条记录的功能••••••••• 262\n9.3.6  实现修改一条记录的功能••••••••• 264\n9.3.7  实现删除一条记录的功能••••••••• 266\n9.4  从头实现  Ext 扩展•••••••••••••••••••••••• 270\n9.5  本章小结•••••••••••••••••••••••••••••••••••••••• 274\n第 10 章   Ext 插件 ••••••••••••••••••••••••••••• 275\n10.1  插件的用法•••••••••••••••••••••••••••••••••• 275\n10.2  标签页右键菜单TabCloseMenu••••••••••••••••••••••••••••• 276\n10.3  面板最大化 MaximizeTool •••••••••• 278\n10.4  分页设置 PageSizePlugin •••••••••••• 282\n10.5  行数据扩展 RowExpander••••••••••• 284\n10.6  本章小结•••••••••••••••••••••••••••••••••••••• 290\n第五部分   调试\n第 11 章   调试•••••••••••••••••••••••••••••••••••••• 292\n11.1  测试 Ext.Element 的功能••••••••••••• 292\n11.1.1  获取 Ext.Element 实例•••••••••• 292\n11.1.2  测试 CSS 样式操作 •••••••••••••• 294\n11.1.3  测试 DOM 操作 ••••••••••••••••••••296\n11.1.4  测试 DOM 查询与遍历•••••••••300\n11.1.5  测试事件处理••••••••••••••••••••••••302\n11.2  结合 DataWrite 和 RowEditor\n的 Grid 的调试过程••••••••••••••••••••••303\n11.3  本章小结 ••••••••••••••••••••••••••••••••••••••306\n第六部分   实例\n第 12 章   单页面应用实例系统分析 •••••••••••••••••••••••••••308\n12.1  系统分析 ••••••••••••••••••••••••••••••••••••••308\n12.2  系统设计 ••••••••••••••••••••••••••••••••••••••308\n12.2.1  单页面应用设计的难点••••••••308\n12.2.2  开发与运行环境••••••••••••••••••••309\n12.2.3  数据库设计 •••••••••••••••••••••••••••309\n12.3  各个模块的详细功能说明 •••••••••••311\n12.3.1  登录页面 •••••••••••••••••••••••••••••••311\n12.3.2  主页面•••••••••••••••••••••••••••••••••••311\n12.3.3  角色管理 •••••••••••••••••••••••••••••••311\n12.3.4  用户管理 •••••••••••••••••••••••••••••••312\n12.3.5  进仓管理 •••••••••••••••••••••••••••••••312\n12.3.6  出仓管理 •••••••••••••••••••••••••••••••313\n12.3.7  产品管理 •••••••••••••••••••••••••••••••313\n12.3.8  库存统计 •••••••••••••••••••••••••••••••314\n12.3.9  修改密码 •••••••••••••••••••••••••••••••314\n12.4  本章小结 ••••••••••••••••••••••••••••••••••••••314\n第 13 章   单页面应用实例—.NET 语言实现 •••••••••••••••••315\n13.1  创建应用并设置开发环境 •••••••••••315\n13.2  自定义 Membership 提供程序••••••••••••••••••••••••••••••••••••••••• 317\n13.3  登录页•••••••••••••••••••••••••••••••••••••••••• 319\n13.4  主页面•••••••••••••••••••••••••••••••••••••••••• 324\n13.5  Ext.Direct 的 API 句柄 •••••••••••••••• 329\n13.6  修改密码对话框 •••••••••••••••••••••••••• 330\n13.7  角色管理模块•••••••••••••••••••••••••••••• 333\n13.8  用户管理•••••••••••••••••••••••••••••••••••••• 345\n13.9  产品管理•••••••••••••••••••••••••••••••••••••• 356\n13.10  进仓管理•••••••••••••••••••••••••••••••••••• 367\n13.11  出仓管理•••••••••••••••••••••••••••••••••••• 388\n13.12  库存统计•••••••••••••••••••••••••••••••••••• 403\n13.13  退出页•••••••••••••••••••••••••••••••••••••••• 407\n13.14  权限设置•••••••••••••••••••••••••••••••••••• 408\n13.15  本章小结•••••••••••••••••••••••••••••••••••• 409\n第 14 章   单页面应用实例——Java 语言实现•••••••••••••••• 410\n14.1  技术选型•••••••••••••••••••••••••••••••••••••• 410\n14.2  搭建开发环境•••••••••••••••••••••••••••••• 411\n14.3  配置 Ext.Direct••••••••••••••••••••••••••••• 413\n14.4  用户登录页面•••••••••••••••••••••••••••••• 417\n14.5  系统主页面与动态菜单 •••••••••••••• 421\n14.6  用户管理模块•••••••••••••••••••••••••••••• 427\n14.7  角色管理模块•••••••••••••••••••••••••••••• 439\n14.8  产品管理模块•••••••••••••••••••••••••••••• 447\n14.9  进仓管理模块•••••••••••••••••••••••••••••• 450\n14.10  出仓管理模块•••••••••••••••••••••••••••• 460\n14.11  库存统计模块•••••••••••••••••••••••••••• 474\n14.12  用户修改密码窗口 •••••••••••••••••••• 479\n14.13  用户注销•••••••••••••••••••••••••••••••••••• 482\n14.14  本章小结•••••••••••••••••••••••••••••••••••• 483",
      "ebook_url": "http:\/\/read.douban.com\/ebook\/15091077\/",
      "pages": "483",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4085147.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4085147.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4085147.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4152848\/",
      "id": "4152848",
      "publisher": "机械工业出版社",
      "isbn10": "711128769X",
      "isbn13": "9787111287698",
      "title": "Ext JS高级程序设计",
      "url": "http:\/\/api.douban.com\/v2\/book\/4152848",
      "alt_title": "",
      "author_intro": "黄灯桥 网名“上将军”，从事开发10余年，经验极其丰富。Ext 专家，致力于Ext的研究与推广。2002年开始从事Web开发与相关技术的研究，对各种Web开发技术都有深入了解。不仅是VB和Delphi等的忠实拥趸，而且还擅长C#、ASP.NET和.NET。活跃于各大技术社区，是CSDN的认证专家（http:\/\/blog.csdn.net\/tianxiaode）。\n徐会生 网名“临远”，Family 168创始人之一，Ext 专家。高级软件工程师兼系统架构师，有丰富的Java EE开发经验。在社区里非常活跃，曾经编写和翻译了大量关于Ext和jBPM的资料，深受社区欢迎。..",
      "summary": "本书是国内第一本基于 Ext 3.x 的著作。\n本书对 Ext  JS 的核心知识以及中高级开发者在开发过程中会经常遇到的疑难问题进行了深入分析和探讨。本书不仅详细讲解了 Ext JS  3.0 中新增的用于 Web  2.0 网站开发的核心包 Ext  Core，以及给 Ext  JS 带来革命性变化的 Ext.Direct，而且还全面透彻地介绍了 Ext.Data.Store、Ext  UI、Ext 扩展、Ext 插件和调试等知识。实用性和可操作性强，各个知识点都配 有实用的案例，并给出了最佳实践。全书最后 以一个单页面的大型案例结束，以迭代的方式重现了该案例的实现过程，有助于读者融会贯通，将理论与实践完美结合。\n尤为值得一提的是，本书中的主要实例同时包含.NET 和 Java 两个版本，适合所有.NET 开发者和 Java 开发者阅读。",
      "ebook_price": "44.16",
      "series": {
        "id": "28671",
        "title": "开发人员专业技术丛书"
      },
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 29,
        "average": "9.5",
        "min": 0
      },
      "subtitle": "Scope & Closures",
      "author": [
        "Kyle Simpson"
      ],
      "pubdate": "2014-3-24",
      "tags": [
        {
          "count": 40,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 6,
          "name": "前端",
          "title": "前端"
        },
        {
          "count": 5,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 5,
          "name": "Frontend",
          "title": "Frontend"
        },
        {
          "count": 5,
          "name": "英文原著阅读",
          "title": "英文原著阅读"
        },
        {
          "count": 3,
          "name": "技术",
          "title": "技术"
        },
        {
          "count": 3,
          "name": "Web",
          "title": "Web"
        },
        {
          "count": 3,
          "name": "程序设计",
          "title": "程序设计"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s28028079.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "98",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s28028079.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s28028079.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s28028079.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/25883834\/",
      "id": "25883834",
      "publisher": "O'Reilly Media",
      "isbn10": "1449335586",
      "isbn13": "9781449335588",
      "title": "You Don't Know JS",
      "url": "http:\/\/api.douban.com\/v2\/book\/25883834",
      "alt_title": "",
      "author_intro": "",
      "summary": "",
      "price": "USD 17.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 11,
        "average": "7.7",
        "min": 0
      },
      "subtitle": "JavaScript Everywhere",
      "author": [
        "Guillermo Rauch"
      ],
      "pubdate": "2012-5-1",
      "tags": [
        {
          "count": 15,
          "name": "nodejs",
          "title": "nodejs"
        },
        {
          "count": 10,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 4,
          "name": "node",
          "title": "node"
        },
        {
          "count": 3,
          "name": "Node",
          "title": "Node"
        },
        {
          "count": 3,
          "name": "前端开发",
          "title": "前端开发"
        },
        {
          "count": 3,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 2,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 2,
          "name": "服务器",
          "title": "服务器"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s8916157.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "256",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s8916157.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s8916157.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s8916157.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6915862\/",
      "id": "6915862",
      "publisher": "Wiley",
      "isbn10": "1119962595",
      "isbn13": "9781119962595",
      "title": "Smashing Node.js",
      "url": "http:\/\/api.douban.com\/v2\/book\/6915862",
      "alt_title": "",
      "author_intro": "",
      "summary": "Learn to make more efficient apps, with just one language! Smashing Node.js: JavaScript Everywhere  equips you with the necessary tools to understand Node.js and its uses in developing efficient web apps. With more traditional web servers becoming obsolete, having knowledge on servers that achieve high scalability and optimal resource consumption using Node.js is the key to your app development success. Teaching you the essentials to making event-driven server-side apps, this book demonstrates how you can use less space and take less time for communication between web client and server.  Contains numerous hands-on examples Explains implementation of real-time apps including Socket.IO and HTML5, and WebSockets Addresses practical Node.js advantages from specific design choices Demonstrates why knowledge and use of JavaScript is beneficial  Includes an interactive online component with sample chapters Explains components of stand out apps including brevity and benchmarks  Looking to enhance your abilities even further?  Smashing Node.js: JavaScript Everywhere  makes developing server-side apps accessible with its focus on JavaScript, open source, and easy-to-use language.",
      "price": "USD 44.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 16,
        "average": "7.5",
        "min": 0
      },
      "subtitle": "Building Javascript Based Scalable Software",
      "author": [
        "Pedro Teixeira"
      ],
      "pubdate": "2012-10-23",
      "tags": [
        {
          "count": 17,
          "name": "node.js",
          "title": "node.js"
        },
        {
          "count": 10,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 5,
          "name": "node",
          "title": "node"
        },
        {
          "count": 4,
          "name": "js",
          "title": "js"
        },
        {
          "count": 2,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 2,
          "name": "Web开发",
          "title": "Web开发"
        },
        {
          "count": 1,
          "name": "api",
          "title": "api"
        },
        {
          "count": 1,
          "name": "Node.js",
          "title": "Node.js"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s27232384.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "408",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s27232384.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s27232384.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s27232384.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/7157281\/",
      "id": "7157281",
      "publisher": "Wrox",
      "isbn10": "1118185463",
      "isbn13": "9781118185469",
      "title": "Professional Node.js",
      "url": "http:\/\/api.douban.com\/v2\/book\/7157281",
      "alt_title": "",
      "author_intro": "",
      "summary": "Learn to build fast and scalable software in JavaScript with Node.js  Node.js is a powerful and popular new framework for writing scalable network programs using JavaScript. This no nonsense book begins with an overview of Node.js and then quickly dives into the code, core concepts, and APIs. In-depth coverage pares down the essentials to cover debugging, unit testing, and flow control so that you can start building and testing your own modules right away.  Covers node and asynchronous programming main concepts Addresses the basics: modules, buffers, events, and timers Explores streams, file systems, networking, and automated unit testing Goes beyond the basics, and shares techniques and tools for debugging, unit testing, and flow control If you already know JavaScript and are curious about the power of Node.js, then this is the ideal book for you.",
      "price": "USD 44.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 9,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "黄灯桥"
      ],
      "pubdate": "2012-6-1",
      "tags": [
        {
          "count": 16,
          "name": "ExtJS",
          "title": "ExtJS"
        },
        {
          "count": 11,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 4,
          "name": "前端",
          "title": "前端"
        },
        {
          "count": 3,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 3,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 2,
          "name": "ext",
          "title": "ext"
        },
        {
          "count": 1,
          "name": "qq",
          "title": "qq"
        },
        {
          "count": 1,
          "name": "extjs",
          "title": "extjs"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s28394673.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "前　言\n第1章　Ext JS 4开发入门 \/ 1\n1.1　学习Ext JS必需的基础知识 \/ 1\n1.2　JSON概述 \/ 3\n1.2.1　认识JSON \/  3\n1.2.2　JSON的结构 \/ 3\n1.2.3　JSON的例子 \/ 4\n1.2.4　在JavaScript中使用JSON \/ 4\n1.2.5　在.NET中使用JSON \/ 8\n1.2.6　在Java中使用JSON \/ 12\n1.2.7　更多有关JSON的信息 \/ 15\n1.3　Ext JS 4概述 \/ 15\n1.4　Ext JS的开发工具的获取、安装与配置介绍 \/ 18\n1.4.1　Ext Designer \/ 18\n1.4.2　在Visual Studio中实现智能提示 \/ 23\n1.4.3　Spket \/ 28\n1.4.4　在Eclipse中实现智能提示 \/ 32\n1.5　如何获得帮助 \/ 32\n1.6　本章小结 \/ 33\n第2章　从“Hello World”开始 \/ 34\n2.1　获取Ext JS 4 \/ 34\n2.2　配置使用Ext JS库 \/ 35\n2.3　编写“Hello World”程序 \/ 37\n2.4　关于Ext.onReady  \/ 38\n2.5　关于Ext.BLANK_IMAGE_URL \/ 40\n2.6　关于字体 \/ 42\n2.7　Ext JS 4语法 \/ 42\n2.8　本地化 \/ 60\n2.9　为本书示例准备一个模板 \/ 60\n2.10　本章小结 \/ 61\n第3章　调试工具及技巧 \/ 62\n3.1　使用Firebug进行调试 \/ 62\n3.2　在IE中调试 \/ 76\n3.2.1　使用Debugbar和Companion.js调试 \/ 76\n3.2.2　使用IEtester测试 \/ 80\n3.2.3　在IE 8或IE 9中调试 \/ 83\n3.3　在Chrome中调试 \/ 84\n3.4　调试工具的总结 \/ 84\n3.5　调试技巧 \/ 85\n3.6　本章小结 \/ 89\n第4章　Ext JS的基础架构 \/ 90\n4.1　Ext JS框架的命名空间：Ext \/ 90\n4.1.1　概述 \/ 90\n4.1.2　apply和applyIf方法 \/ 90\n4.1.3　不推荐的extend方法 \/ 92\n4.1.4　数据及其类型检测 \/ 95\n4.1.5　其他的基础方法 \/ 99\n4.2　为框架顺利运行提供支持 \/ 107\n4.2.1　平台检测工具：Ext.is \/ 107\n4.2.2　当前运行环境检测工具：Ext.supports \/ 109\n4.3　Ext JS的静态方法 \/ 112\n4.3.1　概述 \/ 112\n4.3.2　Ext.Object中的静态方法 \/ 113\n4.3.3　Ext.Function中的静态方法 \/ 120\n4.3.4　Ext.Array中的静态方法 \/ 127\n4.3.5　Ext.Error中的静态方法 \/ 133\n4.4　深入了解类的创建及管理 \/ 135\n4.4.1　开始创建类 \/ 135\n4.4.2　创建类的类：Ext.Class \/ 137\n4.4.3　所有继承类的基类：Ext.Base \/ 151\n4.4.4　实现动态加载：Ext.Loader \/ 151\n4.4.5　管理类的类：Ext.ClassManager \/ 159\n4.4.6　类创建的总结 \/ 161\n4.5　动态加载的路径设置 \/ 163\n4.6　综合实例：页面计算器 \/ 165\n4.7　本章小结 \/ 169\n第5章　Ext JS的事件及其应用 \/ 170\n5.1　概述 \/ 170\n5.2　浏览器事件 \/ 170\n5.2.1　绑定浏览器事件的过程：Ext.EventManager \/ 170\n5.2.2　封装浏览器事件：Ext.EventObject \/ 179\n5.2.3　移除浏览器事件 \/ 181\n5.3　内部事件 \/ 184\n5.3.1　内部事件对象：Ext.util.Event \/ 184\n5.3.2　为组件添加事件接口：Ext.util.Observable \/ 188\n5.3.3　为组件绑定事件 \/ 189\n5.3.4　内部事件的触发过程 \/ 192\n5.3.5　移除事件 \/ 194\n5.4　特定功能的事件对象 \/ 196\n5.4.1　延时任务：Ext.util.DelayedTask \/ 196\n5.4.2　一般任务：Ext.util.TaskRunner与Ext.TaskManager \/ 198\n5.4.3　封装好的单击事件：Ext.util.ClickRepeater \/ 200\n5.5　键盘事件 \/ 201\n5.5.1　为元素绑定键盘事件：Ext.util.KeyMap \/ 201\n5.5.2　键盘导航：Ext.util.KeyNav \/ 204\n5.6　综合实例：股票数据的实时更新 \/ 205\n5.7　本章小结 \/ 214\n第6章　选择器与DOM操作 \/ 215\n6.1　Ext JS的选择器：Ext.DomQuery \/ 215\n6.1.1　选择器的作用 \/ 215\n6.1.2　使用Ext.query选择页面元素 \/ 215\n6.1.3　基本选择符 \/ 223\n6.1.4　属性选择符 \/ 229\n6.1.5　CSS属性值选择符 \/ 234\n6.1.6　伪类选择符 \/ 235\n6.1.7　扩展选择器 \/ 248\n6.1.8　Ext.DomQuery的使用方法 \/ 249\n6.1.9　Ext JS选择器的总结 \/ 252\n6.2　获取单一元素：Ext.dom.Element \/ 252\n6.2.1　从错误开始 \/ 252\n6.2.2　使用Ext.get获取元素 \/ 253\n6.2.3　使用Ext.fly获取元素 \/ 256\n6.2.4　使用Ext.getDom获取元素 \/ 257\n6.2.5　获取元素的总结 \/ 258\n6.3　元素生成器：Ext.dom.Helper \/ 258\n6.3.1　概述 \/ 258\n6.3.2　使用createHtml或markup方法生成HTML代码 \/ 258\n6.3.3　使用createDOM方法生成DOM对象 \/ 261\n6.3.4　使用createTemplate方法创建模板 \/ 263\n6.3.5　Helper对象的使用方法 \/ 263\n6.4　元素的操作 \/ 273\n6.5　获取元素集合：Ext.CompositeElementLite与Ext.CompositeElement \/ 277\n6.5.1　使用Ext.select获取元素集合 \/ 277\n6.5.2　Ext.dom.CompositeElement与Ext.dom.CompositeElementLite的区别 \/ 279\n6.5.3　操作元素集合 \/ 279\n6.6　综合实例：可折叠的面板Accordion \/ 280\n6.7　本章小结 \/ 283\n第7章　数据交互 \/ 284\n7.1　数据交互基础 \/ 284\n7.1.1　Ajax概述 \/ 284\n7.1.2　封装Ajax：Ext.data.Connection与Ext.Ajax \/ 284\n7.1.3　使用Ajax \/ 291\n7.1.4　跨域获取数据：Ext.data.JsonP \/ 295\n7.1.5　为Element对象提供加载功能：Ext.ElementLoader \/ 295\n7.1.6　为组件提供加载功能：Ext.ComponentLoader \/ 296\n7.2　代理 \/ 299\n7.2.1　代理概述 \/ 299\n7.2.2　基本的代理：Ext.data.proxy.Proxy \/ 300\n7.2.3　进行批量操作：Ext.data.Batch与Ext.data.Operation \/ 303\n7.2.4　服务器端代理：Ext.data.proxy.Server \/ 305\n7.2.5　使用Ajax处理数据的代理：Ext.data.proxy.Ajax与Ext.data.proxy.Rest \/ 308\n7.2.6　跨域处理数据的代理：Ext.data.proxy.JsonP \/ 312\n7.2.7　为Ext.Direct服务的代理：Ext.data.proxy.Direct \/ 312\n7.2.8　客户端代理：Ext.data.proxy.Client \/ 314\n7.2.9　从变量中提取数据的代理：Ext.data.proxy.Memory \/ 314\n7.2.10　使用浏览器存储的代理：Ext.data.WebStorageProxy、Ext.data. SessionStorageProxy和Ext.data.proxy.LocalStorage \/ 314\n7.3　读取和格式化数据 \/ 315\n7.3.1　概述 \/ 315\n7.3.2　数据的转换过程：Ext.data.reader.Xml、Ext.data.reader.Json和Ext.data.reader.Array \/ 315\n7.3.3　Reader对象的配置项 \/ 321\n7.3.4　格式化提交数据：Ext.data.writer.Writer、Ext.data.writer.JSON和Ext.data. writer.Xml \/ 322\n7.3.5　Writer对象的配置项 \/ 325\n7.4　数据模型 \/ 326\n7.4.1　概述 \/ 326\n7.4.2　数据类型及排序类型：Ext.data.Types与Ext.data.SortTypes \/ 326\n7.4.3　数据模型的骨架——字段：Ext.data.Field \/ 330\n7.4.4　数据集：Ext.util.AbstractMixedCollection与Ext.util.MixedCollection \/ 330\n7.4.5　数据验证及错误处理：Ext.data.validations与Ext.data.Errors \/ 332\n7.4.6　模型的关系：Ext.data.Association、Ext.data.HasManyAssociation和Ext.data.BelongsToAssociation \/ 334\n7.4.7　管理数据模型：Ext.AbstractManager与Ext.ModelManager \/ 336\n7.4.8　定义数据模型：Ext.data.Model \/ 336\n7.4.9　数据模型的定义过程 \/ 337\n7.4.10　数据模型的创建 \/ 340\n7.4.11　数据模型的配置项、属性和方法 \/ 343\n7.5　Store \/ 344\n7.5.1　概述 \/ 344\n7.5.2　Store对象的实例化过程 \/ 345\n7.5.3　TreeStore对象的实例化过程 \/ 348\n7.5.4　Ext.data.Store加载数据的方法 \/ 350\n7.5.5　Ext.data.TreeStore加载数据的方法 \/ 354\n7.5.6　Store的配置项 \/ 358\n7.5.7　Store的分页 \/ 359\n7.5.8　Store的排序：Ext.util.Sorter与Ext.util.Sortable \/ 360\n7.5.9　Store的过滤：Ext.util.Filter \/ 363\n7.5.10　Store的分组：Ext.util.Grouper \/ 363\n7.5.11　树节点：Ext.data.NodeInterface与Ext.data.Tree \/ 364\n7.5.12　Store的方法 \/ 366\n7.5.13　Store的事件 \/ 368\n7.5.14　Store管理器：Ext.data.StoreManager \/ 369\n7.6　综合实例 \/ 369\n7.6.1　远程读取JSON数据 \/ 369\n7.6.2　读取XML数据 \/ 378\n7.6.3　Store的数据操作 \/ 379\n7.7　本章小结 \/ 384\n第8章　模板与组件基础 \/ 385\n8.1　模板 \/ 385\n8.1.1　模板概述 \/ 385\n8.1.2　Ext.Template的创建与编译 \/ 385\n8.1.3　格式化输出数据：Ext.String、Ext.Number、Ext.Date和Ext.util.Format \/ 389\n8.1.4　超级模板：Ext.XTemplate（包括Ext.XTemplateParser和Ext.XTemplateCompiler） \/ 393\n8.1.5　模板的方法 \/ 396\n8.2　组件的基础知识 \/ 396\n8.2.1　概述 \/ 396\n8.2.2　组件类的整体架构 \/ 397\n8.2.3　布局类的整体架构 \/ 402\n8.2.4　组件的创建流程 \/ 403\n8.2.5　常用的组件配置项、属性、方法和事件 \/ 415\n8.3　为组件添加功能 \/ 418\n8.3.1　为元素添加阴影：Ext.Shadow与Ext.ShadowPool \/ 418\n8.3.2　为组件提供阴影和shim功能：Ext.Layer \/ 419\n8.3.3　让组件实现浮动功能：Ext.util.Floating \/ 420\n8.3.4　记录组件状态：Ext.state.Stateful \/ 420\n8.3.5　实现调整大小功能：Ext.resizer.Resizer与Ext.resizer.ResizeTracker \/ 420\n8.3.6　为组件提供拖动功能：Ext.util.ComponentDragger \/ 421\n8.3.7　为组件实现动画功能：Ext.util.Animate \/ 422\n8.3.8　其他的组件辅助功能类 \/ 423\n8.4　组件的管理 \/ 423\n8.4.1　组件管理及查询：Ext.ComponentManager与Ext.ComponentQuery \/ 423\n8.4.2　焦点管理：Ext.FocusManager \/ 424\n8.4.3　z-order管理：Ext.ZindexManager与Ext.WindowManager \/ 425\n8.4.4　状态管理：Ext.state.Manager、Ext.state.Provider、Ext.state.Local-StorageProvider和Ext.state.CookieProvider \/ 426\n8.5　综合实例 \/ 426\n8.5.1　使用子模板 \/ 426\n8.5.2　递归调用模板 \/ 428\n8.6　本章小结 \/ 429\n第9章　容器、面板、布局和视图 \/ 430\n9.1　容器与布局的关系  \/ 430\n9.2　容器 \/ 431\n9.2.1　容器的创建过程：Ext.container.AbstractContainer与Ext.container.Container \/ 431\n9.2.2　 Ext.container.AbstractContainer和Ext.container.Container的配置项、属性、方法和事件 \/ 434\n9.2.3　将body元素作为容器：Ext.container.Viewport \/ 435\n9.3　面板 \/ 436\n9.3.1　面板的结构 \/ 436\n9.3.2　构件的放置：dockedItems \/ 438\n9.3.3　面板标题栏构件：Ext.panel.Header与Ext.panel.Tool \/ 438\n9.3.4　记录和恢复面板属性：Ext.util.Memento \/ 439\n9.3.5　面板常用的配置项、方法和事件 \/ 439\n9.4　布局 \/ 441\n9.4.1　布局概述 \/ 441\n9.4.2　布局的运行流程：Ext.layout.Layout \/ 441\n9.4.3　容器类布局基类：Ext.layout.container.Container \/ 442\n9.4.4　盒子布局、垂直布局与水平布局：Ext.layout.container.Box、Ext.layout.container.VBox与Ext.layout.container.HBox \/ 442\n9.4.5　为盒子模型提供调整大小的功能：Ext.resizer.Splitter \/ 445\n9.4.6　手风琴布局：Ext.layout.container.Accordion \/ 447\n9.4.7　锚固布局：Ext.layout.container.Anchor \/ 448\n9.4.8　绝对定位布局：Ext.layout.container.Absolute \/ 450\n9.4.9　边框布局：Ext.layout.container.Border \/ 451\n9.4.10　自动布局：Ext.layout.container.Auto \/ 453\n9.4.11　表格布局：Ext.layout.container.Table \/ 454\n9.4.12　列布局：Ext.layout.container.Column \/ 455\n9.4.13　自适应布局：Ext.layout.container.AbstractFit与Ext.layout.container.Fit \/ 456\n9.4.14　卡片布局：Ext.layout.container.AbstractCard与Ext.layout.container.Card \/ 456\n9.5　标签面板 \/ 458\n9.5.1　标签面板的构成及其运行流程：Ext.tab.Panel、Ext.tab.Bar与Ext.tab.Tab \/ 458\n9.5.2　标签面板的配置项、属性、方法和事件 \/ 462\n9.5.3　使用标签页 \/ 463\n9.5.4　可重用的标签页 \/ 465\n9.6　视图与选择模型 \/ 465\n9.6.1　视图与选择模型概述 \/ 465\n9.6.2　视图的运行流程：Ext.view.AbstractView与Ext.view.View \/ 466\n9.6.3　选择模型的工作流程 \/ 475\n9.6.4　选择模型的配置项、属性、方法和事件 \/ 480\n9.6.5　视图的配置项、属性、方法和事件 \/ 482\n9.6.6　使用视图 \/ 484\n9.7　页面布局设计 \/ 491\n9.8　综合实例 \/ 492\n9.8.1　布局设计实例：仿Eclipse界面 \/ 492\n9.8.2　在单页面应用中使用卡片布局实现“页面”切换 \/ 496\n9.9　本章小结 \/ 498\n第10章　重构后的Grid \/ 500\n10.1　Grid的基类及其构成 \/ 500\n10.1.1　概述 \/ 500\n10.1.2　表格面板的运行流程：Ext.panel.Table \/ 500\n10.1.3　表格视图的运行流程：Ext.view.Table与Ext.view.TableChunker \/ 505\n10.1.4　列标题容器的运行流程：Ext.grid.header.Container \/ 508\n10.1.5　列标题的运行流程：Ext.grid.column.Column \/ 510\n10.1.6　虚拟滚动条的工作原理：Ext.grid.PagingScroller \/ 511\n10.1.7　锁定列的运行流程：Ext.grid.Lockable与Ext.grid.LockingView \/ 516\n10.2　使用Grid \/ 520\n10.2.1　最简单的Grid \/ 520\n10.2.2　列的配置项 \/ 521\n10.2.3　自定义单元格的显示格式 \/ 523\n10.2.4　通过列对象定义单元格的显示格式 \/ 525\n10.2.5　设置行的背景颜色 \/ 532\n10.2.6　列标题的分组 \/ 533\n10.2.7　使用锁定列 \/ 534\n10.2.8　Grid的配置项、属性、方法和事件 \/ 535\n10.3　Grid的附加功能 \/ 537\n10.3.1　概述 \/ 537\n10.3.2　附加功能基类：Ext.grid.featrue.Featrue \/ 537\n10.3.3　为行添加附加信息：Ext.grid.featrue.RowBody \/ 538\n10.3.4　数据汇总功能：Ext.grid.featrue.AbstractSummary与Ext.grid.featrue. Summary \/ 539\n10.3.5　分组功能：Ext.grid.featrue.Grouping \/ 543\n10.3.6　分组汇总功能：Ext.grid.featrue.GroupingSummary \/ 545\n10.4　可编辑的Grid \/ 546\n10.4.1　概述 \/ 546\n10.4.2　Grid实现可编辑功能的运行流程：Ext.grid.plugin.Editing \/ 547\n10.4.3　单元格编辑的运行流程：Ext.grid.plugin.CellEditing、Ext.grid.CellEditor与Ext.Editor \/ 550\n10.4.4　行编辑的运行流程：Ext.grid.plugin.RowEditing与Ext.grid.RowEditor \/ 556\n10.4.5　在Grid中使用单元格编辑模式 \/ 561\n10.4.6　在Grid中使用行编辑模式 \/ 562\n10.4.7　Grid编辑插件的配置项、属性、方法和事件 \/ 563\n10.5　关于列表视图：ListView \/ 564\n10.6　属性Grid \/ 564\n10.6.1　概述 \/ 564\n10.6.2　使用属性Grid \/ 564\n10.6.3　自定义编辑组件 \/ 565\n10.6.4　PropertyGrid的配置项、属性、方法和事件 \/ 566\n10.7　综合实例 \/ 567\n10.7.1　使用不同选择模型的Grid以及设置默认选择行 \/ 567\n10.7.2　Grid的本地排序和过滤 \/ 569\n10.7.3　使用分页工具条（PagingToolbar）实现远程分页、排序和过滤 \/ 570\n10.7.4　使用分页滚动条（PagingScroller）实现远程分页、排序和过滤 \/ 574\n10.7.5　使用CellEditing实现数据的增删改 \/ 578\n10.7.6　使用RowEditing实现数据的增删改 \/ 587\n10.7.7　主从表的显示 \/ 589\n10.8　本章小结 \/ 595\n第11章　与Grid同源的树 \/ 597\n11.1　树的构成 \/ 597\n11.1.1　概述 \/ 597\n11.1.2　树面板的运行流程：Ext.tree.Panel \/ 597\n11.1.3　TreeStore的运行流程：Ext.data.TreeStore \/ 600\n11.1.4　TreeColumn的运行流程：Ext.tree.Column \/ 602\n11.1.5　视图的运行流程：Ext.tree.View与Ext.data.NodeStore \/ 602\n11.1.6　树的选择模型：Ext.selection.TreeModel \/ 603\n11.2　树的使用 \/ 603\n11.2.1　一个最简单的树 \/ 603\n11.2.2　树节点的默认字段 \/ 603\n11.2.3　为树节点添加附加字段 \/ 604\n11.2.4　显示多列数据（TreeGrid效果） \/ 605\n11.2.5　在树中使用复选框 \/ 605\n11.2.6　树的配置项、属性、方法和事件 \/ 607\n11.3　综合实例 \/ 608\n11.3.1　树的远程加载 \/ 608\n11.3.2　树的动态加载及节点维护 \/ 610\n11.3.3　XML树及节点维护 \/ 617\n11.3.4　使用树动态控制Grid的显示 \/ 622\n11.4　本章小结 \/ 625\n第12章　表单 \/ 626\n12.1　表单的构成及操作 \/ 626\n12.1.1　表单面板的运行流程：Ext.form.Panel与Ext.form.FieldAncestor \/ 626\n12.1.2　表单面板的配置项、属性、方法和事件 \/ 628\n12.1.3　表单的管理：Ext.form.Basic \/ 629\n12.1.4　BasicForm的配置项、属性、方法和事件 \/ 635\n12.1.5　表单的操作：Ext.form.action.Action \/ 636\n12.1.6　加载操作的运行流程：Ext.form.action.Load与Ext.form.action.DirectLoad \/ 637\n12.1.7　提交操作的运行流程：Ext.form.action.Submit、Ext.form.action.DirectSubmit与Ext.form.action.StandardSubmit \/ 641\n12.1.8　字段的构成 \/ 643\n12.1.9　BaseField的配置项、属性、方法和事件 \/ 643\n12.1.10　常用的验证函数：Ext.form.field.VTypes \/ 647\n12.2　使用字段 \/ 647\n12.3　使用Trigger类字段 \/ 664\n12.3.1　具有单击功能的字段：Ext.form.field.Trigger \/ 664\n12.3.2　实现微调功能的Spinner字段 \/ 665\n12.3.3　使用NumberField字段 \/ 666\n12.3.4　下拉选择类字段的基类：Ext.form.field.Picker \/ 667\n12.3.5　使用DateField字段 \/ 667\n12.3.6　使用TimeField字段 \/ 669\n12.4　使用ComboBox字段 \/ 669\n12.4.1　概述 \/ 669\n12.4.2　BoundList对象的运行流程 \/ 670\n12.4.3　ComboBox字段的配置项、属性、方法和事件 \/ 671\n12.4.4　最简单的ComboBox \/ 672\n12.4.5　自定义列表显示格式的ComboBox \/ 673\n12.4.6　动态调整ComboBox的列表数据 \/ 674\n12.4.7　实现ComboBox的联动 \/ 676\n12.4.8　使用ComboBox的查询功能 \/ 684\n12.4.9　设置ComboBox的默认值 \/ 688\n12.5　表单的验证和加载数据 \/ 690\n12.5.1　表单的验证及错误显示方式 \/ 690\n12.5.2　为表单加载数据 \/ 695\n12.6　在表单中使用布局 \/ 701\n12.6.1　分列显示表单的字段 \/ 701\n12.6.2　使用Fieldset作为列容器 \/ 703\n12.6.3　使用两列布局加HtmlEditor的表单 \/ 704\n12.6.4　在表单中使用标签页 \/ 705\n12.7　综合实例：实现Products表的管理功能 \/ 706\n12.8　本章小结 \/ 715\n第13章　窗口 \/ 716\n13.1　窗口：Ext.window.Window. \/ 716\n13.1.1　窗口的构成 \/ 716\n13.1.2　窗口的配置项、属性、方法和事件 \/ 716\n13.1.3　使用窗口 \/ 718\n13.1.4　在窗口内使用布局 \/ 719\n13.2　信息提示窗口：Ext.window.MessageBox \/ 720\n13.2.1　概述 \/ 720\n13.2.2　信息提示窗口的构成 \/ 720\n13.2.3　使用信息提示窗口 \/ 722\n13.2.4　信息提示窗口按钮的本地化 \/ 723\n13.2.5　使用alert方法 \/ 724\n13.2.6　使用confirm方法 \/ 724\n13.2.7　使用progress方法 \/ 725\n13.2.8　使用prompt方法 \/ 726\n13.2.9　使用wait方法 \/ 727\n13.2.10　使用信息提示窗口要注意的问题 \/ 727\n13.3　综合实例：实现登录窗口 \/ 729\n13.4　本章小结 \/ 733\n第14章　按钮、菜单与工具条 \/ 734\n14.1　按钮 \/ 734\n14.1.1　按钮的构成：Ext.button.Button \/ 734\n14.1.2　按钮的配置项、属性、方法和事件 \/ 734\n14.1.3　使用按钮 \/ 736\n14.1.4　带分割线的按钮：Ext.button.Split \/ 737\n14.1.5　多状态按钮：Ext.button.Cycle \/ 737\n14.1.6　按钮组：Ext.container.ButtonGroup \/ 738\n14.2　菜单及菜单项 \/ 739\n14.2.1　Ext JS的菜单（Menu对象）是什么 \/ 739\n14.2.2　菜单管理器：Ext.menu.Manager \/ 740\n14.2.3　菜单项：Ext.menu.Item \/ 740\n14.2.4　可复选的菜单项：Ext.menu.CheckItem \/ 741\n14.2.5　菜单分隔条：Ext.menu.Separator \/ 741\n14.2.6　颜色选择器菜单：Ext.menu.ColorPicker \/ 742\n14.2.7　日期选择菜单：Ext.menu.DatePicker \/ 742\n14.2.8　使用菜单 \/ 742\n14.3　工具栏及工具栏组件 \/ 743\n14.3.1　工具栏：Ext.toolbar.Toolbar \/ 743\n14.3.2　非交互式工具栏条目的基类：Ext.toolbar.Item \/ 743\n14.3.3　文本项：Ext.toolbar.TextItem \/ 744\n14.3.4　填充项：Ext.toolbar.Fill \/ 744\n14.3.5　工具栏分隔条：Ext.toolbar.Separator \/ 744\n14.3.6　空白项：Ext.toolbar.Spacer \/ 744\n14.3.7　分页工具栏：Ext.toolbar.Paging \/ 744\n14.3.8　使用工具栏 \/ 747\n14.4　使用Ext.Action \/ 747\n14.4.1　概述 \/ 747\n14.4.2　Action对象配置项和方法 \/ 748\n14.4.3　使用示例 \/ 748\n14.5　综合实例：在Grid中使用右键菜单 \/ 750\n14.6　本章小结 \/ 752\n第15章　图形与图表 \/ 753\n15.1　基础知识 \/ 753\n15.1.1　SVG简介 \/ 753\n15.1.2　VML简介 \/ 754\n15.2　图形介绍 \/ 755\n15.2.1　概述 \/ 755\n15.2.2　画布的工作流程：Ext.draw.Component \/ 755\n15.2.3　图形引擎及接口：Ext.draw.Surface、Ext.draw.engine.Svg和Ext.draw.engine.Vml \/ 757\n15.2.4　画笔：Ext.draw.Sprite \/ 760\n15.2.5　图层：Ext.draw.CompositeSprite \/ 760\n15.2.6　调色板：Ext.draw.Color \/ 760\n15.2.7　辅助对象：Ext.draw.Draw与Ext.draw.Matrix \/ 760\n15.3　使用图形功能 \/ 760\n15.3.1　简单的开始 \/ 760\n15.3.2　DrawComponent对象的配置项、属性、方法和事件 \/ 761\n15.3.3　Surface对象的配置项、属性、方法和事件 \/ 761\n15.3.4　DrawSprite对象的配置项、属性、方法和事件 \/ 762\n15.3.5　CompositeSprite对象的配置项、属性、方法和事件 \/ 763\n15.3.6　使用基本图形 \/ 764\n15.3.7　使用图片 \/ 765\n15.3.8　使用路径 \/ 766\n15.3.9　移动、旋转和缩放图形 \/ 767\n15.3.10　使用渐变效果 \/ 770\n15.3.11　使用图层 \/ 771\n15.4　图表介绍 \/ 772\n15.4.1　概述 \/ 772\n15.4.2　图表的工作流程 \/ 773\n15.5　使用图表 \/ 776\n15.5.1　从一个简单例子开始 \/ 776\n15.5.2　坐标轴的配置项 \/ 777\n15.5.3　Series对象的配置项、属性、方法和事件 \/ 779\n15.5.4　折线图的配置项 \/ 780\n15.5.5　显示多个折线图及使用图例 \/ 782\n15.5.6　使用面积图 \/ 783\n15.5.7　简单条形图（Bar和Column Chart）及使用标签（Label对象） \/ 785\n15.5.8　堆积条形图 \/ 787\n15.5.9　分组条形图 \/ 788\n15.5.10　自定义条形颜色 \/ 789\n15.5.11　使用散点图 \/ 789\n15.5.12　使用饼图 \/ 791\n15.5.13　自定义饼块颜色 \/ 792\n15.5.14　使用表盘图 \/ 792\n15.5.15　使用雷达图 \/ 795\n15.5.16　使用时间轴 \/ 796\n15.5.17　实现实时动态的图表 \/ 797\n15.5.18　使用组合图 \/ 800\n15.5.19　在图表中使用背景 \/ 801\n15.5.20　在图表中自定义主题 \/ 803\n15.6　本章小结 \/ 805\n第16章　其他组件及实用功能 \/ 806\n16.1　其他组件 \/ 806\n16.2　使用滑块 \/ 812\n16.3　使用提示信息 \/ 814\n16.4　实用功能 \/ 822\n16.5　本章小结 \/ 826\n第17章　可简化通信的Ext.Direct \/ 827\n17.1　准备工作 \/ 827\n17.2　Ext.Direct的工作原理及构成 \/ 827\n17.2.1　工作原理 \/ 827\n17.2.2　Ext.Direct的构成 \/ 828\n17.2.3　RemotingProvider对象的具体工作流程 \/ 829\n17.2.4　PollingProvider对象的具体工作流程 \/ 838\n17.3　配置Ext.Direct的使用环境 \/ 839\n17.3.1　概述 \/ 839\n17.3.2　.NET环境的配置 \/ 839\n17.3.3　Java环境的配置 \/ 842\n17.4　使用Ext.Direct \/ 846\n17.4.1　概述 \/ 846\n17.4.2　使用DirectProxy及进行CURD操作 \/ 846\n17.4.3　使用Ext.Direct实现树的动态加载及节点维护 \/ 854\n17.4.4　使用DirectLoad为表单加载数据 \/ 858\n17.4.5　使用DirectSubmit提交表单及使用Session \/ 863\n17.4.6　使用Ext.Direct上传文件 \/ 866\n17.4.7　使用PollingProvider对象 \/ 868\n17.4.8　错误处理 \/ 871\n17.5　本章小结 \/ 872\n第18章　动画功能 \/ 873\n18.1　动画功能的构成及工作流程 \/ 873\n18.1.1　概述 \/ 873\n18.1.2　动画功能的工作流程：Ext.fx.Anim \/ 874\n18.1.3　分步动画的工作流程：Ext.fx.Animator \/ 877\n18.2　使用动画 \/ 880\n18.2.1　由最简单的动画开始 \/ 880\n18.2.2　过渡效果使用的功能函数介绍 \/ 880\n18.2.3　使用分步动画 \/ 882\n18.2.4　注意的问题 \/ 883\n18.3　在Element对象中使用动画 \/ 883\n18.4　本章小结 \/ 888\n第19章　拖放功能 \/ 889\n19.1　拖放功能的构成及工作流程 \/ 889\n19.1.1　概述 \/ 889\n19.1.2　DragDropManager对象的工作流程 \/ 891\n19.1.3　注册节点：Ext.dd.Registry \/ 893\n19.1.4　一般拖动功能的工作流程：Ext.dd.DD \/ 894\n19.1.5　DragSource对象的工作流程 \/ 897\n19.1.6　DropTarget对象的工作流程 \/ 898\n19.1.7　DragZone对象的工作流程 \/ 899\n19.1.8　DropZone对象的工作流程 \/ 899\n19.2　使用拖放功能 \/ 899\n19.2.1　最简单的拖动效果 \/ 899\n19.2.2　使用DragSource对象与DropTarget对象 \/ 900\n19.2.3　使用DragZone对象与DropZone对象（使用Registry对象） \/ 902\n19.2.4　使用DragZone对象与DropZone对象（不使用Registry对象） \/ 903\n19.2.5　通过拖动实现节点排序 \/ 904\n19.2.6　使用GridViewDropZonePlugin插件 \/ 905\n19.2.7　使用TreeViewDragDropPlugin插件 \/ 907\n19.2.8　关于Grid和Tree拖动后的数据保存问题 \/ 910\n19.3　本章小结 \/ 910\n第20章　扩展与插件 \/ 911\n20.1　扩展与插件的区别 \/ 911\n20.2　扩展与插件如何选择 \/ 911\n20.3　如何编写扩展 \/ 911\n20.3.1　命名空间 \/ 911\n20.3.2　定义扩展 \/ 912\n20.3.3　定义别名 \/ 912\n20.3.4　定义备用名 \/ 912\n20.3.5　要求加载的类：requires与uses \/ 912\n20.3.6　混入功能 \/ 913\n20.3.7　构造函数与initComponent方法 \/ 913\n20.3.8　静态属性和方法与单件模式 \/ 913\n20.3.9　可自动生成set和get方法的属性与initConfig方法 \/ 914\n20.3.10　在扩展中常用的方法 \/ 914\n20.3.11　编写扩展：TreeComboBox \/ 914\n20.4　如何编写插件 \/ 920\n20.4.1　概述 \/ 920\n20.4.2　AbstractPlugin对象 \/ 921\n20.4.3　插件的别名 \/ 921\n20.4.4　编写插件：RowColor \/ 922\n20.5　扩展和插件介绍 \/ 923\n20.5.1　概述 \/ 923\n20.5.2　本地分页代理：Ext.ux.data.PagingMemoryProxy \/ 923\n20.5.3　标签滚动菜单：Ext.ux.TabScrollerMenu \/ 925\n20.5.4　编辑器TinyMCE \/ 926\n20.6　本章小结 \/ 928\n第21章　主题开发 \/ 929\n21.1　准备工作 \/ 929\n21.1.1　安装Ruby \/ 929\n21.1.2　安装Compass \/ 930\n21.1.3　SASS介绍 \/ 931\n21.2　为Ext JS 4创建新主题 \/ 933\n21.2.1　概述 \/ 933\n21.2.2　目录结构 \/ 933\n21.2.3　修改配置 \/ 933\n21.2.4　编译 \/ 935\n21.2.5　测试主题 \/ 935\n21.3　通过ui配置项设置组件样式 \/ 937\n21.4　本章小结 \/ 937\n第22章　MVC应用架构 \/ 938\n22.1　MVC应用架构的构成及工作流程 \/ 938\n22.1.1　构成 \/ 938\n22.1.2　控制器的工作流程：Ext.app.Controller \/ 938\n22.1.3　Application对象的工作流程 \/ 940\n22.2　一步一步实现MVC框架 \/ 942\n22.2.1　概述 \/ 942\n22.2.2　创建目录 \/ 942\n22.2.3　创建首页 \/ 942\n22.2.4　创建启动脚本：app.js \/ 943\n22.2.5　定义登录对话框 \/ 944\n22.2.6　创建应用脚本：Application.js \/ 948\n22.2.7　创建Viewport视图 \/ 949\n22.2.8　菜单视图及控制器 \/ 950\n22.2.9　实现订单管理 \/ 952\n22.2.10　实现产品管理 \/ 958\n22.2.11　示例效果 \/ 969\n22.3　本章小结 \/ 970\n附录　简写类名与Ext JS类名对照表 \/ 971",
      "pages": "980",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s28394673.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s28394673.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s28394673.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/10794786\/",
      "id": "10794786",
      "publisher": "机械工业出版社",
      "isbn10": "7111380630",
      "isbn13": "9787111380634",
      "title": "Ext JS权威指南",
      "url": "http:\/\/api.douban.com\/v2\/book\/10794786",
      "alt_title": "",
      "author_intro": "黄灯桥（网名：上将军） 资深Web技术专家，拥有10余年工作经验，一直致力于Web开发框架的研究，近年来醉心于Ext JS框架的开发与推广，撰写了大量关于Ext JS开发相关的教程，是社区公认的先锋和布道者，与Sencha 和Ext JS的官方开发团队有十分紧密的联系。著有经典著作《JavaScript凌厉开发——Ext详解与实践》和《Ext JS高级程序设计》。\n他不仅精通VB、Delphi和C++等传统的面向对象技术，而且还擅长ASP.NET、PHP和Java等Web开发技术。目前重点关注Sencha Touch、JQuery UI、HTML 5、CSS 3以及NoSQL数据库等前沿技术。活跃于CSDN（博客专家）等各大技术社区，在社区内知名度极高，深受网友欢迎。\n作者博客：http:\/\/blog.csdn.net\/tianxiaode\n本书微群：http:\/\/q.weibo.com\/943166",
      "summary": "Web应用的开发正随着HTML 5与CSS 3标准的不断成熟而进入一个新的时代，JavaScript框架之间的竞争也随着移动应用的迅速普及而愈演愈烈。经过一段时间的洗礼后，JQuery UI和Ext JS因为其各自独特的优势而逐渐成为Web应用开发框架的领导者。JQue ry UI因其轻量级、灵活的特点而受到追捧，Ext JS则以面向对象的模式设计、组件丰富、集成度高等优点而备受企业青睐。\nExt JS 4在Ext JS 3的基础上进行了重大革新，是一个里程碑版本。Ext JS 4经过重新架构以后，更加符合面向对象的设计，更易于扩展，更能满足企业应用不断扩展的要求。尤其是加入了图形功能以后，不仅很好地解决了图表的问题，而且还使该框架可以拓展到图形领域。随着HTML 5画布功能实现，Ext JS框架会变得更强大。\n在项目中使用Ext JS不难，难的是如何用好它。要用好它，不仅要对它的架构要有一个整体的了解，例如数据如何处理、UI是如何与数据结合的等，如果不了解这些，就会闹在UI中找数据的笑话；而且还要熟悉调试工具的使用，不然就会对错误束手无策。本书的出发点就是教读者“如何用好Ext JS”，所以不仅详细而全面地讲解了Ext JS框架的使用，而且还通过源代码深入分析了其运行机制与原理。此外，本书还对Firebug使用方法和原理进行深入的讲解，目的是让读者在掌握Ext JS使用的基础上，能利用Firebug去深入研究Ext JS的原理并对开发中遇到的各种bug进行调试。\n本书有两大特点：第一，授人以鱼，根据ext js的构成体系全面系统地讲解了其开发方法与技巧，每个知识点都辅之以翔实的案例，同时包含大量最佳实践，适合系统学习和开发参考；第二，授人以渔，宏观上对ext js的整体架构进行了分析，微观上则通过源代码深刻揭示了ext js的工作机制与原理，对于想了解ext js工作原理和在开发中碰到疑难问题的读者尤为有帮助。\n全书一共22章：第1章简要介绍了学习ext js必备的基础知识、json、ext js 4的新特性，以及其开发工具的获取、安装与配置；第2章介绍了ext js 4的获取、ext js库的配置与使用、语法、本地化，以及一个经典的入门示例；第3章详细讲解了调试的工具及技巧，这是本书的重要内容，希望所有web开发者都能掌握；第4章全面介绍了ext js的基础架构；第5~9章分别讲解了ext js的事件及其应用、选择器与dom操作、数据交互、模板与组件、容器、面板、布局与视图；第10章和第11章分别详细介绍了重构后的gird和与gird同源的树；第12~16章分别讲解了表单、窗口、按钮、菜单、工具条、图形、图表，以及其他组件和实用功能；第17~19章分别介绍了ext.direct、动画功能和拖放功能；第20~22章则分别讲解了扩展与插件、主题开发、mvc应用的架构。\n【编辑推荐】\n相比之前的版本，Ext JS 4发生了革命性的变化，它在创建之初就以最全面现代化为目标，采用了改进的架构并加入了许多新的特性，从而使开发者能用更低的成本开发出更加可靠的下一代Web应用。Ext JS几乎对框架的每个部分都进行了升级和优化，力图充分利用现今各主流浏览器的能力，同时它与之前的版本还是兼容的。本书是目前最全面和最系统化地讲解Ext JS 4的著作，Ext JS 4的所用功能、模块，以及开发方法和技巧全部包含在其中，是一本实实在在的“权威指南”，适合系统学习和开发参考，强烈推荐。\n——51CTO 中国领先的IT技术网站\n上将军是Ext JS领域当之无愧的专家，他在Ext JS领域的造诣之深，令人兴叹。难能可贵的是，他这些年来一直专注于Ext JS的研究和推广，紧跟Ext JS官方团队的步伐，撰写了大量关于Ext JS的最新资讯和技术文章，深受社区欢迎。同时，他还撰写了2本Ext JS的专著，广获读者好评。本书是它的第三本Ext JS著作，也是国内第一本真正全面针对Ext JS 4的专著，它不仅从应用的角度全面讲解了Ext JS的使用，而且还从源代码的角度深入分析了Ext JS的工作原理，可谓广度和深度兼备。\n——Ext JS中国用户组",
      "price": "119.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 13,
        "average": "6.6",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "彭仁夔"
      ],
      "pubdate": "2010-1",
      "tags": [
        {
          "count": 12,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 8,
          "name": "EXTJS",
          "title": "EXTJS"
        },
        {
          "count": 5,
          "name": "web",
          "title": "web"
        },
        {
          "count": 4,
          "name": "js",
          "title": "js"
        },
        {
          "count": 4,
          "name": "技术",
          "title": "技术"
        },
        {
          "count": 2,
          "name": "ExtJs",
          "title": "ExtJs"
        },
        {
          "count": 1,
          "name": "ExtJS",
          "title": "ExtJS"
        },
        {
          "count": 1,
          "name": "javascript",
          "title": "javascript"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s6106734.jpg",
      "binding": "",
      "translator": [],
      "catalog": "",
      "pages": "577",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s6106734.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s6106734.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s6106734.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4233429\/",
      "id": "4233429",
      "publisher": "",
      "isbn10": "7121098733",
      "isbn13": "9787121098734",
      "title": "Ext JS源码分析与开发实例宝典",
      "url": "http:\/\/api.douban.com\/v2\/book\/4233429",
      "alt_title": "",
      "author_intro": "",
      "summary": "《Ext JS源码分析与开发实例宝典》从Ext JS实现的基本功能开始讲解，从两个方面对Ext JS进行整体上的概述，让读者从宏观上去把握ExtJS框架。接下来讲解Ext JS核心基础知识，包括事件机制、模板模型、数据模型以及对类、函数、字符串、日期、数组及定时任务这6个类进行扩展。然后讲解Ext JS基于元素的开发，包括动画特效和拖曳实现等。最后深入讲解组件的开发，对布局、模型及4大组件一一进行剖析。\n《Ext JS源码分析与开发实例宝典》语言通俗易懂、版式清晰，可以作为Web应用开发的参考手册，也可以作为Ext JS应用开发的培训教材。",
      "price": "78.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 9,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "特谢拉 (Pedro Teixeria)"
      ],
      "pubdate": "2013-12-1",
      "tags": [
        {
          "count": 8,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 7,
          "name": "Node.js",
          "title": "Node.js"
        },
        {
          "count": 6,
          "name": "前端",
          "title": "前端"
        },
        {
          "count": 4,
          "name": "node.js",
          "title": "node.js"
        },
        {
          "count": 2,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 2,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 1,
          "name": "Programming",
          "title": "Programming"
        },
        {
          "count": 1,
          "name": "a",
          "title": "a"
        }
      ],
      "origin_title": "Professional Node.js: Building JavaScript-Based Scalable Software",
      "image": "https://img1.doubanio.com\/mpic\/s28384647.jpg",
      "binding": "平装",
      "translator": [
        "胡训强",
        "张欣景"
      ],
      "catalog": "第Ⅰ部分 概述和安装\n第1章 安装Node 3\n1.1 在Windows上安装Node 4\n1.2 在MAC OS X上安装Node 6\n1.3 使用源代码安装Node 7\n1.3.1 选择Node的版本 7\n1.3.2 下载Node源代码 7\n1.3.3 编译Node 8\n1.3.4 安装Node 8\n1.3.5 运行Node 8\n1.4 安装和应用Node包管理器 9\n1.5 本章小结 14\n第2章 Node简介 15\n2.1 事件驱动编程风格介绍 16\n2.2 Node和JavaScript如何简化异步应用程序的编写 17\n2.2.1 什么是闭包 17\n2.2.2 闭包如何辅助异步编程 18\n2.3 本章小结 19\n第Ⅱ部分 Node核心API基础\n第3章 加载模块 23\n3.1 理解Node如何加载模块 24\n3.2 导出模块 24\n3.3 加载模块 25\n3.3.1 加载核心模块 25\n3.3.2 加载文件模块 26\n3.3.3 加载文件夹模块 26\n3.3.4 从node_modules文件夹加载 26\n3.3.5 缓存模块 27\n3.4 本章小结 28\n第4章 应用缓冲区处理、编码和解码二进制数据 29\n4.1 创建缓冲区 30\n4.2 在缓冲区中获取和设置数据 30\n4.3 切分缓冲区 31\n4.4 复制缓冲区 32\n4.5 缓冲区解码 32\n4.6 本章小结 33\n第5章 使用事件发射器模式简化事件绑定 35\n5.1 理解标准回调模式 35\n5.2 理解事件发射器模式 36\n5.3 理解事件类型 37\n5.4 应用事件发生器API 38\n5.4.1 使用.addListener( )或.on( )绑定回调函数 38\n5.4.2 绑定多个事件监听器 39\n5.4.3 使用.removeListener( )从事件发射器中删除一个事件监听器 40\n5.4.4 使用.once()使回调函数最多执行一次 40\n5.4.5 使用.removeAllListeners()从事件发射器删除所有事件监听器 41\n5.5 创建事件发射器 41\n5.5.1 从Node事件发射器继承 41\n5.5.2 发射事件 42\n5.6 本章小结 42\n第6章 使用定时器制定函数执行计划 45\n6.1 使用setTimeout推迟函数执行 46\n6.2 使用clearTimeout取消函数执行 46\n6.3 制定和取消函数的重复执行计划 47\n6.4 使用process.nextTick将函数执行推迟到下一轮事件循环 47\n6.5 阻塞事件循环 48\n6.6 退出事件循环 49\n6.7 使用setTimeout代替setInterval强制函数串行执行 49\n6.8 本章小结 50\n第Ⅲ部分 文件、进程、流和网络\n第7章 查询和读写文件 53\n7.1 处理文件路径 54\n7.1.1 规范化路径 54\n7.1.2 连接路径 54\n7.1.3 解析路径 55\n7.1.4 查找两个绝对路径之间的相对路径 55\n7.1.5 提取路径的组成部分 55\n7.1.6 确定路径是否存在 56\n7.2 fs模块简介 57\n7.3 打开文件 58\n7.4 读取文件 58\n7.4.1 写入文件 59\n7.4.2 关闭文件 60\n7.5 本章小结 62\n第8章 创建和控制外部进程 63\n8.1 执行外部命令 63\n8.2 生成子进程 68\n8.2.1 创建子进程 68\n8.2.2 监听子进程的输出数据 69\n8.2.3 向子进程发送数据 69\n8.2.4 当子进程退出时获得通知 71\n8.3 向进程发送信号并终止进程 72\n8.4 本章小结 73\n第9章 读写数据流 75\n9.1 使用可读流 76\n9.1.1 等待数据 76\n9.1.2 暂停与恢复流 76\n9.1.3 了解流何时终止 77\n9.2 使用可写流 77\n9.2.1 将数据写入流 77\n9.2.2 等待流被清空 78\n9.3 考虑几个流的例子 78\n9.3.1 创建文件系统流 78\n9.3.2 理解网络流 80\n9.4 避免慢客户端问题以及挽救服务器 80\n9.4.1 理解慢客户端问题 80\n9.4.2 避免慢客户端问题 81\n9.4.3 应用stream.pipe()避免慢客户端问题与使用pipe()集成可读流和可写流 81\n9.5 本章小结 82\n第10章 构建TCP服务器 83\n10.1 创建TCP服务器 83\n10.1.1 应用套接字对象 85\n10.1.2 理解空闲套接字 86\n10.1.3 设置保持运行 87\n10.1.4 应用延时或非延时 87\n10.1.5 监听连接 88\n10.1.6 关闭服务器 88\n10.1.7 处理错误 88\n10.2 构建一个简单的TCP聊天服务器 89\n10.2.1 接受连接 89\n10.2.2 从连接中读取数据 89\n10.2.3 聚合所有客户端 90\n10.2.4 广播数据 91\n10.2.5 删除被关闭的连接 91\n10.2.6 使用TCP聊天服务器 92\n10.3 本章小结 93\n第11章 构建HTTP服务器 95\n11.1 理解http.ServerRequest对象 96\n11.2 理解http.ServerResponse对象 98\n11.2.1 写入响应头 98\n11.2.2 修改或设置响应头 98\n11.2.3 删除响应头 99\n11.2.4 写入一块响应主体 99\n11.3 以流的形式传送HTTP分块响应 99\n11.3.1 传送文件 99\n11.3.2 传送其他进程的输出 100\n11.4 关闭服务器 100\n11.5 示例1：构建提交静态文件的服务器 101\n11.6 示例2：使用HTTP分块响应和定时器 102\n11.7 本章小结 102\n第12章 构建TCP客户端 103\n12.1 连接服务器 104\n12.2 发送和接收数据 104\n12.3 终止连接 105\n12.4 处理错误 106\n12.5 创建命令行TCP客户端的示例 106\n12.5.1 连接服务器 107\n12.5.2 向服务器发送命令行 107\n12.5.3 打印服务器消息 107\n12.5.4 在连接终止时重新连接 108\n12.5.5 关闭连接 110\n12.5.6 前述内容综合 111\n12.6 本章小结 112\n第13章 创建HTTP请求 113\n13.1 创建GET请求 113\n13.2 使用其他HTTP动词 114\n13.2.1 查看响应对象 115\n13.2.2 获取响应主体 116\n13.2.3 以流的方式传送响应主体 116\n13.3 使用HTTP.Agent维护套接字池 116\n13.4 应用第三方请求模块简化HTTP请求 118\n13.4.1 安装和应用request模块 118\n13.4.2 创建测试服务器 119\n13.4.3 跟随重定向 121\n13.4.4 设置请求选项 122\n13.4.5 对请求体进行编码 125\n13.4.6 流式传送 126\n13.4.7 使用Cookie Jar 127\n13.5 本章小结 127\n第14章 使用用户数据报 129\n14.1 理解用户数据报 129\n14.2 理解用户数据报的使用 130\n14.3 构建数据报服务器 130\n14.3.1 监听消息 130\n14.3.2 测试服务器 131\n14.3.3 查看附加的消息信息 132\n14.4 创建简单的数据报回送服务器 132\n14.4.1 等待消息 132\n14.4.2 向发送端发回消息 132\n14.4.3 前述内容综合 133\n14.5 构建数据报客户端 133\n14.5.1 创建客户端 134\n14.5.2 发送消息 134\n14.5.3 关闭套接字 134\n14.6 创建一个简单的数据报命令行客户端 134\n14.6.1 读取命令行 135\n14.6.2 向服务器发送数据 135\n14.6.3 从服务器接收数据 135\n14.6.4 前述内容综合 136\n14.7 理解和使用数据报多播 136\n14.7.1 接收多播消息 137\n14.7.2 发送多播消息 137\n14.7.3 理解数据报最大容量 138\n14.8 本章小结 138\n第15章 用TLS\/SSL保证服务器的安全性 139\n15.1 理解私钥和公钥 139\n15.1.1 产生私钥 140\n15.1.2 产生公钥 140\n15.2 构建TLS服务器 140\n15.2.1 初始化服务器 141\n15.2.2 监听连接 141\n15.2.3 从客户端读取数据 142\n15.2.4 向客户端发送数据 142\n15.2.5 终止连接 142\n15.3 构建TLS客户端 142\n15.3.1 初始化客户端 143\n15.3.2 连接服务器 143\n15.3.3 验证服务器证书 143\n15.3.4 向服务器发送数据 144\n15.3.5 从服务器读取数据 144\n15.3.6 终止连接 144\n15.4 创建几个示例 144\n15.4.1 创建TLS聊天服务器 145\n15.4.2 创建TLS命令行聊天客户端 146\n15.4.3 验证客户端证书 147\n15.5 本章小结 148\n第16章 用HTTPS保证HTTP服务器的安全性 149\n16.1 构建安全的HTTP服务器 149\n16.1.1 设置服务器选项 150\n16.1.2 监听连接 150\n16.1.3 验证HTTPS客户端证书 151\n16.2 创建HTTPS客户端 152\n16.2.1 初始化客户端 152\n16.2.2 创建请求 152\n16.2.3 验证HTTPS服务器证书 153\n16.3 本章小结 154\n第Ⅳ部分 构建与调试模块及应用程序\n第17章 测试模块及应用程序 157\n17.1 应用测试运行工具 157\n17.1.1 编写测试 158\n17.1.2 运行测试 159\n17.2 使用断言测试模块 159\n17.2.1 使用断言模块 159\n17.2.2 使用Node-Tap中的内置断言函数 161\n17.3 测试异步模块 163\n17.4 本章小结 166\n第18章 调试模块及应用程序 167\n18.1 使用console.log 167\n18.2 使用Node内置调试器 169\n18.3 使用Node检查器 173\n18.4 本章小结 175\n第19章 控制回调流程 177\n19.1 理解飞去来器效应 177\n19.2 通过声明函数避免飞去来器效应 179\n19.3 使用ASYNC流程控制库 183\n19.3.1 串行执行 184\n19.3.2 并行执行 185\n19.3.3 连续传递 186\n19.3.4 排队 187\n19.3.5 迭代 189\n19.3.6 映射 190\n19.3.7 规约 191\n19.3.8 过滤 192\n19.3.9 检测 193\n19.4 本章小结 194\n第Ⅴ部分 构建Web应用程序\n第20章 构建和使用HTTP中间件 197\n20.1 理解Connect HTTP中间件框架 198\n20.2 构建自定义HTTP中间件 198\n20.2.1 创建异步中间件 199\n20.2.2 在中间件内部注册回调函数 201\n20.2.3 在中间件内处理错误 202\n20.3 使用捆绑在Connect中的HTTP中间件 206\n20.3.1 记录请求 206\n20.3.2 处理错误 208\n20.3.3 提交静态文件 209\n20.3.4 解析查询字符串 210\n20.3.5 解析请求主体 211\n20.3.6 解析Cookies 212\n20.3.7 使用会话 213\n20.3.8 其他可用的中间件 216\n20.4 本章小结 216\n第21章 用Express.js创建Web应用程序 217\n21.1 初始化Express.js应用程序 218\n21.2 在应用程序中设置中间件 220\n21.3 路由请求 222\n21.3.1 处理路由 222\n21.3.2 使用会话 229\n21.3.3 使用路由中间件 234\n21.4 本章小结 238\n第22章 使用Socket.IO创建通用的实时Web应用程序 241\n22.1 理解WebSockets如何工作 242\n22.2 使用Socket.IO创建WebSocket应用程序 243\n22.2.1 在服务器上安装和运行Socket.IO 243\n22.2.2 使用Socket.IO创建实时网络聊天应用程序 245\n22.2.3 扩展聊天应用程序 250\n22.2.4 检测连接断开 253\n22.2.5 将用户分隔到聊天室中 255\n22.2.6 使用名称空间 259\n22.2.7 使用Redis分布运行服务器端应用程序 260\n22.3 本章小结 263\n第Ⅵ部分 连接数据库\n第23章 使用node-mysql连接MySQL数据库 267\n23.1 应用库与MySQL数据库进行连接和通信 267\n23.2 向数据库添加数据时请记住安全性 269\n23.3 高效读取数据 272\n23.4 本章小结 276\n第24章 使用Nano连接CouchDB数据库 277\n24.1 安装Nano 278\n24.2 连接和创建数据库 281\n24.3 存储文档 285\n24.4 创建和使用CouchDB视图 286\n24.5 将文件附加到CouchDB文档上 299\n24.6 本章小结 312\n第25章 使用Mongoose连接MongoDB 数据库 313\n25.1 安装Mongoose 315\n25.2 理解Mongoose如何使用模型封装对数据库的访问 315\n25.3 连接MongoDB数据库 316\n25.4 定义模式 316\n25.5 定义模型 316\n25.5.1 使用验证器 326\n25.5.2 使用修改器 332\n25.5.3 使用取值器 333\n25.5.4 使用虚拟属性 334\n25.5.5 使用默认值 340\n25.5.6 定义索引 341\n25.5.7 使用DB Refs引用其他文档 343\n25.5.8 定义实例方法 349\n25.5.9 定义静态方法 350\n25.6 本章小结 351",
      "pages": "351",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s28384647.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s28384647.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s28384647.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/25799431\/",
      "id": "25799431",
      "publisher": "清华大学出版社",
      "isbn10": "7302344418",
      "isbn13": "9787302344414",
      "title": "Node.js高级编程",
      "url": "http:\/\/api.douban.com\/v2\/book\/25799431",
      "alt_title": "Professional Node.js: Building JavaScript-Based Scalable Software",
      "author_intro": "Pedro Teixeria是一位高产的开源项目程序员，同时也是众多Node.js模块的构建者。他是Node公司的创始人之一，同时也是Nodejitsu公司的高级程序员，Nodejitsu公司是以Node.js平台作为服务的领头羊。\n自从在14年前获得软件工程学位后，他从事过的职业包括咨询师和程序员，并且他还是世界知名的Node.js社区活跃成员。此外，他还是广受欢迎的Node Tuts视频的制作者。",
      "summary": "Node.js是一种主流框架，它允许你使用JavaScript快速构建具有高度可伸缩性的网络程序。可是，它有自己的学习曲线，这本较为深入的指南性图书首先介绍了Node.js平台的安装，然后重点关注：创建和加载模块；使用缓冲区对二进制数据进行处理、编码和编码；用事件发射器模式简化事件绑定等。本书还涵盖了从使用定时器制定函数执行计划到创建和控制外部进程等内容，可以让你为运行、构建和测试自定义模块做好准备。\n主要内容\n介绍了查询和读写文件\n研究了流、文件系统、网络和自动化单元测试\n详细描述了如何读写数据流\n从零开始构建TCP和HTTP服务器与客户端\n介绍使用数据报、测试和调试模块以及控制回调流程\n展示了如何用Connect、Express和Socke.IO开发实时Web应用程序\n引导你连接到MySQL、CouchDB和MongoDB数据库\n主要内容\n介绍了实现位置跟踪和接近警报的多种方法\n揭秘SensorManager API中物理传感器背后的物理原理，从而让你了解正确的应用方式\n展示了算法代码来解释带噪声的传感器数据并检测其变化\n演示了如何测量设备属性，例如方向和移动，以及类似相对高度这样的环境属性\n探究如何使用Android开放附件(Android Open Accessory，AOA)来访问外部传感器\n介绍近场通信(NFC)技术及其API\n提供图像和信号处理代码来检测摄像头和麦克风所捕获到的内容\n给出使用Android语音识别和文本转语音API来创建可靠、用户友好、带语音功能的应用所需的所有组件",
      "price": "CNY 58.00"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 10,
        "average": "7.3",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "[加]Nick Qi Zhu"
      ],
      "pubdate": "2014-9",
      "tags": [
        {
          "count": 18,
          "name": "数据可视化",
          "title": "数据可视化"
        },
        {
          "count": 10,
          "name": "D3",
          "title": "D3"
        },
        {
          "count": 5,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 3,
          "name": "前端技术",
          "title": "前端技术"
        },
        {
          "count": 3,
          "name": "visualization",
          "title": "visualization"
        },
        {
          "count": 2,
          "name": "专业书",
          "title": "专业书"
        },
        {
          "count": 2,
          "name": "学习",
          "title": "学习"
        },
        {
          "count": 2,
          "name": "前端",
          "title": "前端"
        }
      ],
      "origin_title": "Data Visualization with D3.js Cookbook",
      "image": "https://img1.doubanio.com\/mpic\/s27978963.jpg",
      "binding": "平装",
      "translator": [
        "杨锐",
        "刘夏",
        "王超",
        "张沙沙"
      ],
      "catalog": "",
      "ebook_url": "http:\/\/read.douban.com\/ebook\/18924737\/",
      "pages": "294",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s27978963.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s27978963.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s27978963.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/26256865\/",
      "id": "26256865",
      "publisher": "人民邮电出版社",
      "isbn10": "7115360960",
      "isbn13": "9787115360960",
      "title": "D3.js数据可视化实战手册",
      "url": "http:\/\/api.douban.com\/v2\/book\/26256865",
      "alt_title": "Data Visualization with D3.js Cookbook",
      "author_intro": "",
      "summary": "如今这个互联网时代，人们每天都产生海量的数据，如果直接面对这些数据，可能让人无从下手。将数据可视化，用形象立体的形式将其展现，有利于分析其中的关联，攫取可能存在的商业机会。本书意图通过大量的示例和代码，向读者讲述如何利用D3.js来实现数据可视化。只要读者了解JavaScript，就能完全掌握本书的内容。",
      "ebook_price": "35.40",
      "price": "59.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 21,
        "average": "8.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Shea Frederick",
        "Colin Ramsay",
        "Steve 'Cutter' Blades"
      ],
      "pubdate": "2008-11-28",
      "tags": [
        {
          "count": 10,
          "name": "Ext",
          "title": "Ext"
        },
        {
          "count": 4,
          "name": "Ajax",
          "title": "Ajax"
        },
        {
          "count": 3,
          "name": "javascript",
          "title": "javascript"
        },
        {
          "count": 3,
          "name": "Web",
          "title": "Web"
        },
        {
          "count": 3,
          "name": "电子版",
          "title": "电子版"
        },
        {
          "count": 1,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 1,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 1,
          "name": "祁杰",
          "title": "祁杰"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s4319630.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "299",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s4319630.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s4319630.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s4319630.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/3348792\/",
      "id": "3348792",
      "publisher": "Packt Publishing",
      "isbn10": "1847195148",
      "isbn13": "9781847195142",
      "title": "Learning Ext JS",
      "url": "http:\/\/api.douban.com\/v2\/book\/3348792",
      "alt_title": "",
      "author_intro": "",
      "summary": "",
      "price": "USD 39.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 17,
        "average": "7.6",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Jesus Garcia"
      ],
      "pubdate": "2010-07-28",
      "tags": [
        {
          "count": 9,
          "name": "javascript",
          "title": "javascript"
        },
        {
          "count": 6,
          "name": "ExtJs",
          "title": "ExtJs"
        },
        {
          "count": 3,
          "name": "Web前端",
          "title": "Web前端"
        },
        {
          "count": 1,
          "name": "AJAX新时代",
          "title": "AJAX新时代"
        },
        {
          "count": 1,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 1,
          "name": "已有电子版",
          "title": "已有电子版"
        },
        {
          "count": 1,
          "name": "extjs",
          "title": "extjs"
        },
        {
          "count": 1,
          "name": "ext",
          "title": "ext"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s4009048.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "474",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4009048.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4009048.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4009048.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4073348\/",
      "id": "4073348",
      "publisher": "Manning Publications",
      "isbn10": "1935182110",
      "isbn13": "9781935182115",
      "title": "Ext JS in Action",
      "url": "http:\/\/api.douban.com\/v2\/book\/4073348",
      "alt_title": "",
      "author_intro": "",
      "summary": "Ext JS, a cross-browser JavaScript library for building Rich Internet Applications (RIA), has emerged from the mix of JavaScript frameworks, libraries and object-oriented development techniques as a one of the clear leaders. Ext JS combines an extensive library of super-high-quality widgets, an intuitive, extensible component model, and an easy-to-use API to create a full, rock-solid platform for JavaScript-based web apps. Ext JS has been adopted by such household names as Adobe, Aetna, Amazon.com, Best Buy Hallmark, Panasonic, Pixar Animation Studios, Siemens, Sony, and Visa.  \"Ext JS in Action\" teaches the reader about Ext from the ground up. By following the common design patterns demonstrated in the Ext source and in many commercial applications, the book teaches you to achieve the same results you see in world-class commercial JavaScript applications. This book will guide you through the Ext component model and layouts. You'll learn how core components, such as the Container class, serve as building blocks for building complex user interfaces. The book fully covers Ext utility classes, AJAX, Observable (the Ext events model), DOM helpers and Function Helpers and illustrates how use of JavaScript Object Notation (JSON), a powerful and lightweight data format, can allow your application to efficiently communicate over the network to the web server. Finally, you'll build on this foundation to customize or extend Ext widgets.  \"Ext JS in Action\" assumes that you have a solid foundation in JavaScript, but requires no previous exposure to Ext JS.",
      "price": "USD 44.99"
    }
  ]
}