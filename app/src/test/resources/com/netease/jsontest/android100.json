{
  "count": 100,
  "start": 0,
  "total": 932,
  "books": [
    {
      "rating": {
        "max": 10,
        "numRaters": 20,
        "average": "5.1",
        "min": 0
      },
      "subtitle": "A Programmer's Guide",
      "author": [
        "J.F. DiMarzio"
      ],
      "pubdate": "2008-7-30",
      "tags": [
        {
          "count": 16,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 6,
          "name": "Mobile",
          "title": "Mobile"
        },
        {
          "count": 4,
          "name": "Google",
          "title": "Google"
        },
        {
          "count": 3,
          "name": "Phone",
          "title": "Phone"
        },
        {
          "count": 2,
          "name": "技术",
          "title": "技术"
        },
        {
          "count": 1,
          "name": "Android.A.Programmers.Guide",
          "title": "Android.A.Programmers.Guide"
        },
        {
          "count": 1,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 1,
          "name": "力的来源!",
          "title": "力的来源!"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s4259006.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "400",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s4259006.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s4259006.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s4259006.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/3134548\/",
      "id": "3134548",
      "publisher": "McGraw-Hill Osborne Media",
      "isbn10": "0071599886",
      "isbn13": "9780071599887",
      "title": "Android",
      "url": "http:\/\/api.douban.com\/v2\/book\/3134548",
      "alt_title": "",
      "author_intro": "",
      "summary": "Master the Android mobile development platform  Build compelling Java-based mobile applications using the Android SDK and the Eclipse open-source software development platform. Android: A Programmer's Guide shows you, step-by-step, how to download and set up all of the necessary tools, build and tune dynamic Android programs, and debug your results. Discover how to provide web and chat functions, interact with the phone dialer and GPS devices, and access the latest Google services. You'll also learn how to create custom Content Providers and database-enable your applications using SQLite.  Install and configure Java, Eclipse, and Android plugin  Create Android projects from the Eclipse UI or command line  Integrate web content, images, galleries, and sounds  Deploy menus, progress bars, and auto-complete functions  Trigger actions using Android Intents, Filters, and Receivers  Implement GPS, Google Maps, Google Earth, and GTalk Build interactive SQLite databases, calendars, and notepads  Test applications using the Android Emulator and Debug Bridge",
      "price": "USD 39.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 154,
        "average": "8.2",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "范怀宇"
      ],
      "pubdate": "2012-8",
      "tags": [
        {
          "count": 340,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 105,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 53,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 41,
          "name": "android",
          "title": "android"
        },
        {
          "count": 32,
          "name": "互联网",
          "title": "互联网"
        },
        {
          "count": 24,
          "name": "范老师",
          "title": "范老师"
        },
        {
          "count": 21,
          "name": "大牛之作",
          "title": "大牛之作"
        },
        {
          "count": 20,
          "name": "计算机技术",
          "title": "计算机技术"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s11184539.jpg",
      "binding": "",
      "translator": [],
      "catalog": "前言\n致谢\n第1章　Android的系统架构\/1\n1.1　Android系统架构概况\/2\n1.1.1　应用层\/4\n1.1.2　框架层\/5\n1.1.3　运行时\/5\n1.1.4　核心类库\/7\n1.1.5　硬件抽象层和Linux内核\/7\n1.2　Android的核心功能模块\/8\n1.2.1　界面框架\/8\n1.2.2　数据存储\/9\n1.2.3　网络通信\/10\n1.2.4　地理信息\/11\n1.2.5　图形和多媒体处理\/11\n1.2.6　外部设备\/12\n1.2.7　特色功能模块\/13\n1.3　Android的架构特征和设计思想\/13\n1.3.1　平台开放性\/14\n1.3.2　基于组件的应用设计\/14\n1.3.3　基于网络服务的平台\/15\n1.4　小结\/15\n第2章　Android源代码的下载和编译\/16\n2.1　Android源代码的获取和编译\/17\n2.1.1　环境搭建\/18\n2.1.2　源代码获取\/18\n2.1.3　源代码的编译\/21\n2.2　Android源代码结构\/22\n2.2.1　框架层源代码目录frameworks\/22\n2.2.2　应用层源代码目录packages\/24\n2.2.3　其他源代码目录\/24\n2.3　Android源代码的阅读和编辑\/25\n2.3.1　用Eclipse阅读源代码\/25\n2.3.2　反馈Bug\/26\n2.3.3　提交修改\/27\n2.4　小结\/27\n第3章　Android组件模型解析\/28\n3.1　基于Mashup的应用设计\/29\n3.1.1　Android中的Mashup\/29\n3.1.2　基于Mashup的Android应用模型\/30\n3.1.3　基于Mashup的应用架构特征\/32\n3.2　界面组件Activity解析\/34\n3.2.1　界面组件的功能和特征\/34\n3.2.2　界面组件的开发\/35\n3.2.3　界面组件的数据结构\/39\n3.3　服务组件Service解析\/40\n3.3.1　服务组件的功能和特征\/41\n3.3.2　服务组件的开发和使用\/43\n3.3.3　服务组件的进程间通信模型\/45\n3.4　触发器组件Broadcast Receiver解析\/49\n3.4.1　触发器组件的功能和特征\/49\n3.4.2　触发器组件的使用\/50\n3.4.3　广播事件的发送\/52\n3.5　数据源组件Content Provider解析\/52\n3.5.1　数据源组件的定位和操作\/53\n3.5.2　数据源组件的开发\/55\n3.5.3　数据源组件的实现细节\/57\n3.6　应用配置文件解析\/59\n3.6.1　权限配置\/61\n3.6.2　环境配置\/63\n3.6.3　应用和组件配置\/65\n3.7　小结\/66\n第4章　Android的Intent机制\/67\n4.1　Intent对象的作用和构成\/68\n4.1.1　Intent对象的作用\/69\n4.1.2　Intent对象的构成\/70\n4.1.3　Intent对象解析\/75\n4.1.4　Intent Filter对象\/76\n4.2　意图匹配\/78\n4.2.1　意图匹配的算法流程\/79\n4.2.2　匹配组件的选择\/84\n4.2.3　意图匹配的优化\/85\n4.3　意图机制的应用\/86\n4.3.1　意图机制在界面组件中的应用\/86\n4.3.2　意图机制在服务组件中的应用\/88\n4.3.3　意图机制在触发器组件中的应用\/89\n4.4　小结\/90\n第5章　组件生命周期解析\/91\n5.1　应用进程模型\/92\n5.1.1　应用、组件和进程\/92\n5.1.2　组件的应用进程配置\/94\n5.2　应用进程托管\/96\n5.2.1　为什么需要进程托管\/97\n5.2.2　进程优先级\/97\n5.2.3　进程回收算法\/100\n5.2.4　进程的强行终止\/103\n5.2.5　掌控进程的优先级\/105\n5.3　组件的生命周期模型\/106\n5.3.1　界面组件的生命周期\/107\n5.3.2　服务组件的生命周期\/115\n5.3.3　触发器组件的生命周期\/119\n5.3.4　数据源组件的生命周期\/120\n5.3.5　应用环境的生命周期\/120\n5.4　任务和界面组件栈\/120\n5.4.1　界面组件的运行模式\/122\n5.4.2　组件的任务黏度\/126\n5.4.3　实际应用中的任务控制\/127\n5.5　小结\/128\n第6章　组件间的数据传输\/129\n6.1　利用Intent对象进行数据传输\/130\n6.1.1　利用Intent对象回传数据\/131\n6.1.2　利用Intent对象传递数据的优缺点\/133\n6.2　利用文件进行数据共享\/134\n6.2.1　利用文件进行数据共享的实现\/134\n6.2.2　利用文件进行数据共享的优缺点\/135\n6.3　利用应用环境的全局数据共享\/136\n6.3.1　利用应用环境对象共享数据的实现\/137\n6.3.2　利用应用环境对象共享数据的优缺点\/138\n6.4　利用组件共享数据\/139\n6.4.1　利用数据源组件共享数据\/139\n6.4.2　利用服务组件共享数据\/140\n6.5　小结\/140\n第7章　Android控件解析\/141\n7.1　Android的控件框架\/142\n7.1.1　Android控件构成\/142\n7.1.2　Android交互事件传输\/143\n7.1.3　Android控件属性\/145\n7.1.4　控件的丈量和绘制\/150\n7.2　Android的窗口机制\/150\n7.2.1　窗口机制的基本原理\/151\n7.2.2　界面组件和窗口\/152\n7.2.3　对话框\/154\n7.2.4　弹出窗口\/156\n7.3　Android的基本控件介绍\/158\n7.3.1　文本控件\/159\n7.3.2　图像控件\/163\n7.3.3　Surface控件\/164\n7.3.4　Layout控件\/164\n7.3.5　适配器控件\/167\n7.3.6　选项卡控件\/172\n7.3.7　浏览器控件\/173\n7.4　自定义控件\/175\n7.4.1　控件的定制\/175\n7.4.2 　复合控件\/180\n7.4.3　自绘控件\/183\n7.5　Android界面新发展\/188\n7.5.1　动作栏\/188\n7.5.2　界面片段\/191\n7.5.3　重新定制选项卡\/197\n7.5.4　交互界面的适配\/200\n7.6　小结\/204\n第8章　应用资源\/205\n8.1　Android应用资源体系\/206\n8.1.1　Android的应用资源构成\/206\n8.1.2　应用资源的适配\/208\n8.1.3　应用资源的动态匹配\/209\n8.2　应用资源的调用\/213\n8.2.1　应用资源的编译和R类\/213\n8.2.2　应用资源的管理\/215\n8.2.3　使用应用资源\/216\n8.3　应用资源的类型\/217\n8.3.1　界面和样式\/217\n8.3.2　字符串和常量\/221\n8.3.3　图像、图形和动画\/223\n8.3.4　其他资源文件\/225\n8.4　小结\/225\n第9章　数据存储\/226\n9.1　Android的文件系统\/227\n9.1.1　Android的目录结构\/229\n9.1.2　Android的应用数据存储\/229\n9.1.3　Android的文件操作\/231\n9.2　使用设置文件\/233\n9.2.1　设置文件的存储和使用\/234\n9.2.2　设置界面组件\/235\n9.3　使用数据库\/238\n9.3.1　Android数据库实现\/238\n9.3.2　Android数据库的使用\/240\n9.4　存储在云端\/243\n9.4.1　云端存储的架构\/244\n9.4.2　云端存储的使用\/245\n9.5　小结\/247\n第10章　网络通信\/248\n10.1　Web通信\/249\n10.1.1　基于HTTP的网络连接\/249\n10.1.2　联网方式的选择\/252\n10.1.3　WiFi的管理\/254\n10.2　蓝牙\/256\n10.2.1　Android的蓝牙实现\/256\n10.2.2　基于蓝牙的通信\/257\n10.3　近场通信\/259\n10.3.1　基于NFC的识别和通信\/259\n10.3.2　基于NFC的点对点通信\/263\n10.4　基于WiFi连接的P2P通信\/263\n10.4.1　Android 4.0的P2P连接实现\/264\n10.4.2　使用Socket进行数据传输\/266\n10.5　小结\/268\n第11章　地理信息服务\/269\n11.1　Android的定位服务\/270\n11.1.1　定位服务框架\/270\n11.1.2　位置信息源\/272\n11.1.3　定位选择\/273\n11.1.4　定位实例\/274\n11.2　Android的地址服务\/277\n11.2.1　地址服务的框架\/277\n11.2.2　使用地址服务\/278\n11.3　Android的地图服务\/279\n11.3.1　使用地图\/279\n11.3.2　其他使用地图服务的方式\/282\n11.4　小结\/283\n第12章　多媒体处理\/284\n12.1　Android的图像处理\/285\n12.1.1　图像的表示\/285\n12.1.2　图像的读取和输出\/286\n12.1.3　图像的呈现\/288\n12.1.4　图像的管理\/290\n12.2　Android的音视频处理\/291\n12.2.1　Android音视频的支持框架\/291\n12.2.2　Android音视频的播放\/292\n12.2.3　Android音视频的录制\/294\n12.3　Android中相机的使用\/296\n12.4　小结\/300\n第13章　其他重要模块\/301\n13.1　通话和短信\/302\n13.1.1　Android的通话和短信框架\/302\n13.1.2　通话的处理\/303\n13.1.3　短信的发送和接收\/305\n13.2　App Widget的使用和实现\/308\n13.2.1　Android的App Widget框架\/309\n13.2.2　App Widget的界面构造和Remote Views \/311\n13.2.3　App Widget的事件处理和Pending Intent \/313\n13.3　Android的应用内搜索\/317\n13.3.1　Android应用内搜索实现框架\/317\n13.3.2　为应用定制搜索功能\/318\n13.3.3　全局搜索功能\/322\n13.4　Android的全局通知机制\/323\n13.4.1　全局通知的类型和实现\/324\n13.4.2　Toast的使用\/325\n13.4.3　状态栏通知\/327\n13.5　Android联系人处理\/331\n13.5.1　Android联系人数据存储框架\/331\n13.5.2　Android联系人操作\/332\n13.6　小结\/334",
      "ebook_url": "http:\/\/read.douban.com\/ebook\/15171473\/",
      "pages": "356",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s11184539.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s11184539.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s11184539.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/11530748\/",
      "id": "11530748",
      "publisher": "机械工业出版社",
      "isbn10": "711139058X",
      "isbn13": "9787111390589",
      "title": "Android开发精要",
      "url": "http:\/\/api.douban.com\/v2\/book\/11530748",
      "alt_title": "",
      "author_intro": "范怀宇，资深Android开发工程师，毕业于清华大学，从事移动开发多年，对Android系统有颇为深入的研究，开发经验十分丰富。曾就职于网易有道，负责完成了有道词典Android版、网易掌上邮Android版、网易八方Android版等项目的开发工作，现就职于豌豆实验室 ，负责豌豆荚2.0版本的设计和开发。\n作者微博：@duguguiyu（http:\/\/weibo.com\/duguguiyu）\n个人站点：http:\/\/flyvenus.net",
      "summary": "《Android开发精要》如何才能写出贴近Android设计理念、能够更加高效和可靠运行的Android应用？通过Android的源代码去了解其底层实现细节是最重要的方法之一！然而，Android系统太过于庞大，源代码实现复杂，学习的技术门槛和时间成本都很高。有没有一种方法既能帮助开发者深入理解Android应用开发，又能不被底层大量的实现细节所羁绊，迅速掌握编写高质量Android应用所需的知识？《Android开发精要》针对这个问题给出了完美的答案！它从Android繁杂的源代码中抽取出了Android开发的“精华”和“要点”，剥离了大量琐碎的底层实现细节，进行了高度概括和总结，不仅能帮助开发者迅速从宏观上理解整个Android系统的设计理念，而且能帮助开发者迅速从微观上掌握核心知识点的原理，从而编写出高质量的Android应用。\n《Android开发精要》共13章，在逻辑上分为4个部分。第一部分（1-2章）：第1章系统介绍了Android的系统架构、核心模块和设计思想，旨在让读者真正理解它的设计理念；第2章讲解了Android源代码的获取、编译、阅读和编辑的方法。第二部分（3-6章）：第3章深入阐述了Android组件机制的设计理念和重要特征，并详细介绍了4大组件的方法和原理；第4章讲解了Intent对象和Android的意图机制，阐明了Android是如何将来自不同应用、不同进程的组件整合在一起的；第5章解析了Android中各个组件的生命周期，包括组件的进程模型和线程模型；第6章从开发的角度详细阐述了组件间数据传递的解决方案，以及它们的优缺点和适用场景。第三部分（7-8章）：第7章深入讲解了Android的控件框架，结合实际项目对重要控件的实现和使用逐一进行了分析，还包含Android 4.0界面开发的实践“精华”；第8章分析了Android的资源体系，剖析了Android底层对资源的处理。第4部分（9-13章）：第9章讲解了Android的数据存储结构，以及不同数据存储模式的使用要点；第10章分析了Android的各种网络连接方式，涵盖NFC和基于Wifi的P2P连接等内容；第11章讲解了Android的定位服务、地址解析服务、地图服务的框架实现；第12章仔细分析了Android各种多媒体功能的实现机制；第13章对Android中比较有特色的一些模块的实现细节进行了分析。\n海报：",
      "ebook_price": "30.00",
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 241,
        "average": "6.4",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "姚尚朗",
        "靳岩"
      ],
      "pubdate": "2009 年6月",
      "tags": [
        {
          "count": 235,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 55,
          "name": "Google",
          "title": "Google"
        },
        {
          "count": 50,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 39,
          "name": "应用开发",
          "title": "应用开发"
        },
        {
          "count": 33,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 23,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 21,
          "name": "java",
          "title": "java"
        },
        {
          "count": 21,
          "name": "programming",
          "title": "programming"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s3817805.jpg",
      "binding": "16开",
      "translator": [],
      "catalog": "第1章　掀起你的盖头来——初识android　1\n1.1　认识android　1\n1.2　android的背景　2\n1.2.1　android的历史　2\n1.2.2　android的发展　2\n1.3　我的android我做主　2\n1.3.1　开发基于android平台的应用　3\n1.3.2　参加android开发者大赛　3\n1.3.3　个人英雄主义再现——得到更多人的认可和尊重　3\n1.3.4　获得应有的收益——android market　3\n1.4　真实体验——android模拟器　4\n1.4.1　模拟器概述　4\n1.4.2　模拟器和真机的区别　4\n1.4.3　模拟器使用注意事项　4\n1.5　更上一层楼——加入android开发社区　5\n1.6　本章小结　6\n第2章　工欲善其事　必先利其器——搭建android开发环境　7\n2.1　开发android应用前的准备　7\n2.1.1　android开发系统要求　7\n2.1.2　android软件开发包　7\n2.1.3　其他注意事项　8\n2.2　windows开发环境搭建　8\n2.2.1　jdk、eclipse、android sdk软件安装　8\n2.2.2　sdk的家在哪里——设定android sdk home　14\n2.2.3　真的准备好了吗——开发环境验证　14\n2.2.4　创建android 虚拟设备(avd)　15\n2.3　linux一族——ubuntu开发环境搭建　17\n2.3.1　java、eclipse和adt插件安装　17\n2.3.2　设定android sdk home　23\n2.4　mac os一族——苹果开发环境搭建　24\n2.5　本章小结　24\n第3章　清点可用资本——android sdk介绍　25\n3.1　android sdk 基础　25\n3.2　深入探寻android sdk的密码　25\n3.2.1　android sdk目录结构　25\n3.2.2　android.jar及内部结构　27\n3.2.3　sdk文档及阅读技巧　27\n3.2.4　先来热热身——android sdk例子解析　28\n3.2.5　sdk提供的工具介绍　31\n3.3　android典型包分析　33\n3.3.1　开发的基石——android api核心开发包介绍　33\n3.3.2　拓展开发外延——android可选api介绍　34\n3.4　本章小结　34\n第4章　赚钱的市场——android market及应用发布　35\n4.1　google market产生背景与目的　35\n4.2　体验“选货”的乐趣——在g1上体验market的使用　35\n4.3　android开发活动及特色应用　37\n4.3.1　开发应用的领域　37\n4.3.2　android market特色应用一览　38\n4.4　你也可以做东家——申请market账号　43\n4.4.1　卖东西要先入伙——准备工作　43\n4.4.2　入伙过程——申请　44\n4.5　开张了——在market上发布应用　45\n4.5.1　发布时可能遇到的错误　45\n4.5.2　卖东西也要签名——生成签名文件　46\n4.5.3　打包、签名、发布应用　48\n4.6　本章小结　51\n第5章　千里之行 始于足下——第一个应用helloworld　52\n5.1　helloworld应用分析　52\n5.1.1　新建一个android工程　52\n5.1.2　填写工程的信息　52\n5.1.3　编程实现　53\n5.1.4　运行项目　54\n5.2　调试项目　54\n5.2.1　设置断点　54\n5.2.2　debug 项目　55\n5.2.3　断点调试　55\n5.3　本章小结　56\n第6章　磨刀不误砍柴工——android应用程序结构介绍　57\n6.1　android体系结构介绍　57\n6.1.1　应用程序(application)　57\n6.1.2　应用程序框架(application framework)　58\n6.1.3　库(libraries)和运行环境(runtime)　58\n6.2　android 应用程序组成　59\n6.2.1　activity介绍　59\n6.2.2　broadcast intent receiver介绍　60\n6.2.3　service介绍　61\n6.2.4　content provider介绍　61\n6.3　android应用工程文件组成　61\n6.4　本章小结　62\n第7章　良好的学习开端——android基本组件介绍　63\n7.1　第一印象很重要——界面ui元素介绍　63\n7.1.1　视图组件(view)　63\n7.1.2　视图容器组件(viewgroup)　63\n7.1.3　布局组件(layout)　64\n7.1.4　布局参数(layoutparams)　64\n7.2　我的美丽我做主——android中应用界面布局　64\n7.2.1　实例操作演示　65\n7.2.2　实例编程实现　66\n7.3　不积跬步 无以至千里——常用widget组件介绍　75\n7.3.1　创建widget组件实例　75\n7.3.2　按钮(button)介绍与应用　76\n7.3.3　文本框(textview)介绍与应用　77\n7.3.4　编辑框(edittext)介绍与应用　79\n7.3.5　多项选择(checkbox)介绍与应用　81\n7.3.6　单项选择(radiogroup )介绍与应用　83\n7.3.7　下拉列表(spinner )介绍与应用　85\n7.3.8　自动完成文本(autocompletetextview )　87\n7.3.9　日期选择器(datepicker)介绍与应用　89\n7.3.10　时间选择器(timepicker)介绍与应用　90\n7.3.11　滚动视图(scrollview)介绍与应用　91\n7.3.12　进度条(progressbar)介绍与应用　92\n7.3.13　拖动条(seekbar)介绍与应用　93\n7.3.14　评分组件(ratingbar)介绍与应用　94\n7.3.15　图片视图(imageview)介绍与应用　95\n7.3.16　图片按钮(imagebutton)介绍与应用　96\n7.3.17　切换图片(imageswitcher&gallery)　96\n7.3.18　网格视图(gridview)介绍与应用　99\n7.3.19　标签(tab)介绍与应用　101\n7.4　友好的菜单——menu介绍与实例　102\n7.4.1　实例操作演示..　103\n7.4.2　实例编程实现　103\n7.5　android应用的灵魂——intent和activity介绍与实例　106\n7.5.1　实例操作演示　106\n7.5.2　实例编程实现　106\n7.6　用好列表，做好程序——列表(listview)介绍与实例　111\n7.6.1　实例程序演示　111\n7.6.2　实例编程实现　112\n7.7　友好地互动交流——对话框(dialog)介绍与实例　119\n7.8　温馨的提醒——toast和notification应用　127\n7.8.1　实例操作演示　128\n7.8.2　实例编程实现　129\n7.9　本章小结　135\n第8章　移动信息仓库——android的数据存储操作　136\n8.1　android数据存储概述　136\n8.2　轻轻地我保护——sharedpreferences存储　136\n8.3　谁的文件，谁主宰——文件存储　140\n8.4　打造自己的数据库存储——sqlite存储方式　141\n8.4.1　android中对数据库操作　141\n8.4.2　完整地操作数据库——日记本实例　147\n8.5　我的数据你来用——contentprovider介绍　155\n8.5.1　初识contentprovider　155\n8.5.2　使用contentprovider读取系统数据　156\n8.5.3　使用contentprovider操作数据日记本实例　159\n8.6　再学一招——网络存储　171\n8.7　本章小结　173\n第9章　我来“广播”你的“意图”——intent和broadcast面对面　174\n9.1　android应用程序的核心——intent　174\n9.1.1　intent基础　174\n9.1.2　用intent启动一个新的activity　174\n9.1.3　intent 详细讲解　177\n9.1.4　android解析intent实现　179\n9.2　用广播告诉你——利用intent来广播(broadcast)事件　180\n9.2.1　实现android中的广播事件　180\n9.2.2　broadcast receiver介绍　181\n9.3　应用实例详解　181\n9.3.1　程序操作演示　182\n9.3.2　实例编程实现　182\n9.4　本章小结　186\n第10章　一切为用户服务——service应用实例　187\n10.1　认识service　187\n10.2　使用service　188\n10.3　service的生命周期　194\n10.4　实例学习service　194\n10.4.1　精彩实例一——定时提醒　194\n10.4.2　精彩实例二——音乐播放器　198\n10.5　本章小结　201\n第11章　循序渐进——开发android应用的基本步骤　202\n11.1　兵马未动 粮草先行——应用规划及架构设计　202\n11.2　应用开发步骤　202\n11.2.1　界面设计始终是第一位——实现ui　203\n11.2.2　必备的动力源泉——数据操作和存储　203\n11.2.3　华丽转身——实现多页面跳转　203\n11.2.4　始终为用户做好服务——增加service　203\n11.2.5　细节决定成败——完善应用细节　203\n11.3　成功就在眼前——应用测试和发布　204\n11.3.1 只欠东风——应用测试　204\n11.3.2　可以赚钱了——发布到android market　204\n11.4　本章小结　204\n第12章　android综合案例一——rss阅读器实例　205\n12.1　rss介绍　205\n12.1.1　rss基础　205\n12.1.2　rss的历史　205\n12.1.3　rss语法介绍　206\n12.2　sax介绍　207\n12.2.1　sax基础　207\n12.2.2　使用sax的作用　207\n12.2.3　怎样使用sax　207\n12.3　rss阅读器设计　209\n12.3.1　rss阅读器功能设计　209\n12.3.2　rss阅读器ui和交互流程设计　209\n12.4　rss阅读器的实现　210\n12.4.1　程序实体解析　210\n12.4.2　实现一个自己的contenthandler　214\n12.4.3　activity的实现　217\n12.5　本章小结　220\n第13章　android综合案例二——基于google map开发个人移动地图　221\n13.1　项目ui规划　221\n13.2　数据存储实现　222\n13.2.1　设计数据库及表结构　222\n13.2.2　设计sharepreference 存储　223\n13.3　项目实现流程　223\n13.3.1　创建项目工程　223\n13.3.2　项目各功能及界面实现　224\n13.3.3　实现数据存取　247\n13.3.4　实现service　252\n13.3.5　应用流程整体实现　254\n13.3.6　后续开发完善　255\n13.4　项目程序演示　255\n13.5　项目程序签名、打包和发布　257\n13.6　本章小结　259\n第14章　android综合案例三——基于android的豆瓣网(web 2.0)移动客户端开发　260\n14.1　关于豆瓣网和豆瓣网api　260\n14.1.1　豆瓣网介绍　260\n14.1.2　豆瓣网api介绍　261\n14.1.3　豆瓣网api认证　261\n14.1.4　豆瓣网api快速入门　264\n14.1.5　豆瓣网api java库介绍　265\n14.2　豆瓣网(web 2.0)客户端设计　268\n14.2.1　客户端功能规划设计　268\n14.2.2　ui和交互流程设计　268\n14.2.3　数据存储设计　270\n14.3　豆瓣网(web 2.0)客户端实现　270\n14.3.1　申请api key　270\n14.3.2　activity实现　271\n14.4　本章小结　282\n第15章　android综合案例四——在线音乐播放器　283\n15.1　关于yobo和yobo api　283\n15.1.1　yobo简介　284\n15.1.2　yobo功能特点　284\n15.1.3　yobo api介绍　284\n15.2　在线播放器架构设计　285\n15.2.1　在线播放器功能规划设计　285\n15.2.2　在线播放器ui设计　285\n15.2.3　在线播放器数据存储设计　286\n15.3　在线播放器的编程实现　286\n15.3.1　申请api key　286\n15.3.2　基础功能实现　287\n15.3.3　实现activity　290\n15.3.4　实现service　306\n15.3.5　后续开发展望　310\n15.4　在线音乐播放器应用演示　310\n15.5　在线音乐播放器应用打包、签名和发布　311\n15.6　本章小结　311\n第16章　android综合案例五——手机信息查看助手　312\n16.1　手机信息查看助手功能规划和可行性分析　312\n16.1.1　手机信息查看助手功能规划　312\n16.1.2　手机信息查看助手可行性分析　312\n16.2　手机信息查看助手功能实现　313\n16.2.1　手机信息查看助手主界面　313\n16.2.2　查看系统信息实现　316\n16.2.3　查看硬件信息　320\n16.2.4　查看软件信息　324\n16.2.5　获取运行时信息　326\n16.2.6　文件浏览器　328\n16.2.7　项目的细节完善　331\n16.3　手机信息查看助手功能展望　332\n16.4　项目的打包、签名和发布　332\n16.5　本章小结　333\n第17章　芝麻开门——android底层开发和移植概述　334\n17.1　android原始码下载　334\n17.2　实机测试　335\n17.2.1　neo freerunner 介绍　335\n17.2.2　烧录androidfs.jffs2　336\n17.3　android移植技术概论　337\n17.3.1　android底层技术的重要性　337\n17.3.2　android移植项目介绍　338\n17.3.3　android的技术优点　340",
      "pages": "400",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s3817805.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s3817805.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s3817805.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/3770255\/",
      "id": "3770255",
      "publisher": "人民邮电出版社",
      "isbn10": "7115209308",
      "isbn13": "9787115209306",
      "title": "Google Android开发入门与实战",
      "url": "http:\/\/api.douban.com\/v2\/book\/3770255",
      "alt_title": "",
      "author_intro": "本书由国内Android知名专业开发团队eoeMobile团队倾心撰写。eoeMoblie团队国内最早一批专注于Android开发的专业团队，目前团队已经在Google Market上有超过5款的作品，而且取得了可喜的下载量。国内著名网站豆瓣网的Android客户端(eoeDouban)也是由此团队制作。关于此团队的更多信息请访问:http:\/\/www.eoemobile.com.关于图书的进展，可以访问http:\/\/www.eoeandroid.com 社区\n作者简介：\n靳岩:\n网名：海阳|haiyangjy\nblog: http:\/\/www.haiyangjy.com\n姚尚朗:\n网名:iceskysl\nblog: http:\/\/iceskysl.1sters.com\n欢迎大家就书或者Android的问题和我们进行直接的交流。\n社区支持:http:\/\/www.eoeandroid.com\/",
      "summary": "本书内容上覆盖了用Android开发的大部分场景，从Android基础介绍、环境搭建、SDK介绍、Market使用，到应用剖析、组件介绍、实例演示等方面。从技术实现上，讲解了5个Android平台下的完整综合实例及源代码分析，分别是RSS阅读器、基于Google Map的个人GPS、豆瓣网（Web 2.0）客户端、在线音乐播放器、手机信息助手。\n本书注重对实际动手能力的指导，在遵循技术研发知识体系的严密性同时，在容易产生错误、不易理解的环节配以了详实的开发情景截图，并将重要的知识点和经验技巧以“小实验”、“小知识”的活泼形式呈现给读者。在程序实例的讲解方面，将实例安插在Android开发的精髓知识章节，这为初学者学习与实践结合提供了很好的指导。.\n本书配套有300多分钟的全程开发视频光盘，指导读者快速、无障碍地学通Android实战开发技术。..\n本书适合具备一定软件开发经验，想快速进入Android开发领域的程序员；具备一些手机开发经验的开发者和Android开发爱好者学习用书；也适合作为相关培训学校的Android培训教材。\n特点：\n* 第一本国内开发团队原创的Android图书\n* 完全基于Android最新的SDK1.5\n* 著名台湾技术专家高焕堂、Google Android工程师何峰、InfoQ站长霍泰稳鼎力推荐！\n* 全书除了大量小型案例之外还包含了5个Android平台下的完整商业实例及源码分析，分别是RSS阅读器、基于GoogleMap的个人GPS、豆瓣客户端、在线音乐播放器、手机信息助手\n* 随书附赠的光盘中包含389分钟的详细教学视频以及Android开发必备开发资源，部分教学视频免费下载地址：http:\/\/www.eoeandroid.com\/viewthread.php?tid=328\n* 读者对于此书内容的疑问可以访问http:\/\/www.eoeandroid.com社区，作者团队将会及时解答",
      "price": "55.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 93,
        "average": "8.0",
        "min": 0
      },
      "subtitle": "卷I",
      "author": [
        "邓凡平"
      ],
      "pubdate": "2011-9-5",
      "tags": [
        {
          "count": 275,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 90,
          "name": "Andriod源码分析",
          "title": "Andriod源码分析"
        },
        {
          "count": 34,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 32,
          "name": "android",
          "title": "android"
        },
        {
          "count": 30,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 20,
          "name": "计算机科学",
          "title": "计算机科学"
        },
        {
          "count": 17,
          "name": "移动互联网",
          "title": "移动互联网"
        },
        {
          "count": 10,
          "name": "程序设计",
          "title": "程序设计"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s11171603.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "第1章　阅读前的准备工作 \/ 1\n1.1　系统架构 \/ 2\n1.1.1　Android系统架构 \/ 2\n1.1.2　本书的架构 \/ 3\n1.2　搭建开发环境 \/ 4\n1.2.1　下载源码 \/ 4\n1.2.2　编译源码 \/ 6\n1.3　工具介绍 \/ 8\n1.3.1　Source Insight介绍 \/ 8\n1.3.3　Busybox的使用 \/ 11\n1.4　本章小结 \/ 12\n第2章　深入理解JNI \/ 13\n2.1　JNI概述 \/ 14\n2.2　学习JNI的实例：MediaScanner \/ 15\n2.3　Java层的MediaScanner分析 \/ 16\n2.3.1　加载JNI库 \/ 16\n2.3.2　Java的native函数和总结 \/ 17\n2.4　JNI层MediaScanner的分析 \/ 17\n2.4.1　注册JNI函数 \/ 18\n2.4.2　数据类型转换 \/ 22\n2.4.3　JNIEnv介绍 \/ 24\n2.4.4　通过JNIEnv操作jobject \/ 25\n2.4.5　jstring介绍 \/ 27\n2.4.6　JNI类型签名介绍 \/ 28\n2.4.7　垃圾回收 \/ 29\n2.4.8　JNI中的异常处理 \/ 32\n2.5　本章小结 \/ 32\n第3章　深入理解init \/ 33\n3.1　概述 \/ 34\n3.2　init分析 \/ 34\n3.2.1　解析配置文件 \/ 38\n3.2.2　解析service \/ 42\n3.2.3　init控制service \/ 48\n3.2.4　属性服务 \/ 52\n3.3　本章小结 \/ 60\n第4章　深入理解zygote \/ 61\n4.1　概述 \/ 62\n4.2　zygote分析 \/ 62\n4.2.1　AppRuntime分析 \/ 63\n4.2.2　Welcome to Java World \/ 68\n4.2.3　关于zygote的总结 \/ 74\n4.3　SystemServer分析 \/ 74\n4.3.1　SystemServer的诞生 \/ 74\n4.3.2　SystemServer的重要使命 \/ 77\n4.3.3　关于 SystemServer的总结 \/ 83\n4.4　zygote的分裂  \/ 84\n4.4.1　ActivityManagerService发送请求 \/ 84\n4.4.2　有求必应之响应请求 \/ 86\n4.4.3　 关于zygote分裂的总结 \/ 88\n4.5　拓展思考 \/ 88\n4.5.1　虚拟机heapsize的限制 \/ 88\n4.5.2　开机速度优化 \/ 89\n4.5.3　Watchdog分析 \/ 90\n4.6　本章小结 \/ 93\n第5章　深入理解常见类 \/ 95\n5.1　概述 \/ 96\n5.2　以“三板斧”揭秘RefBase、sp和wp \/ 96\n5.2.1　第一板斧——初识影子对象 \/ 96\n5.2.2　第二板斧——由弱生强 \/ 103\n5.2.3　第三板斧——破解生死魔咒 \/ 106\n5.2.4　轻量级的引用计数控制类LightRefBase \/ 108\n5.2.5　题外话—三板斧的来历 \/ 109\n5.3　Thread类及常用同步类分析 \/ 109\n5.3.1　一个变量引发的思考 \/ 109\n5.3.2　常用同步类 \/ 114\n5.4　Looper和Handler类分析 \/ 121\n5.4.1　Looper类分析 \/ 122\n5.4.2　Handler分析 \/ 124\n5.4.3　Looper和Handler的同步关系 \/ 127\n5.4.4　HandlerThread介绍 \/ 129\n5.5　本章小结 \/ 129\n第6章　深入理解Binder \/ 130\n6.1　概述 \/ 131\n6.2　庖丁解MediaServer \/ 132\n6.2.1　MediaServer的入口函数 \/ 132\n6.2.2　独一无二的ProcessState \/ 133\n6.2.3　时空穿越魔术—defaultServiceManager \/ 134\n6.2.4　注册MediaPlayerService \/ 142\n6.2.5　秋风扫落叶—StartThread Pool和join Thread Pool分析 \/ 149\n6.2.6　你彻底明白了吗 \/ 152\n6.3　服务总管ServiceManager \/ 152\n6.3.1　ServiceManager的原理 \/ 152\n6.3.2　服务的注册 \/ 155\n6.3.3　ServiceManager存在的意义 \/ 158\n6.4　MediaPlayerService和它的Client \/ 158\n6.4.1　查询ServiceManager \/ 158\n6.4.2　子承父业 \/ 159\n6.5　拓展思考 \/ 162\n6.5.1　Binder和线程的关系 \/ 162\n6.5.2　有人情味的讣告 \/ 163\n6.5.3　匿名Service \/ 165\n6.6　学以致用 \/ 166\n6.6.1　纯Native的Service \/ 166\n6.6.2　扶得起的“阿斗”（aidl） \/ 169\n6.7　本章小结 \/ 172\n第7章　深入理解Audio系统 \/ 173\n7.1　概述 \/ 174\n7.2　AudioTrack的破解 \/ 174\n7.2.1　用例介绍 \/ 174\n7.2.2　AudioTrack（Java空间）分析 \/ 179\n7.2.3　AudioTrack（Native空间）分析 \/ 188\n7.2.4　关于AudioTrack的总结 \/ 200\n7.3　AudioFlinger的破解 \/ 200\n7.3.1　AudioFlinger的诞生 \/ 200\n7.3.2　通过流程分析AudioFlinger \/ 204\n7.3.3　audio_track_cblk_t分析 \/ 230\n7.3.4　关于AudioFlinger的总结 \/ 234\n7.4　AudioPolicyService的破解 \/ 234\n7.4.1　AudioPolicyService的创建 \/ 235\n7.4.2　重回AudioTrack \/ 245\n7.4.3　声音路由切换实例分析 \/ 251\n7.4.4　关于AudioPolicy的总结 \/ 262\n7.5　拓展思考 \/ 262\n7.5.1　DuplicatingThread破解 \/ 262\n7.5.2　题外话 \/ 270\n7.6　本章小结 \/ 272\n第8章　深入理解Surface系统 \/ 273\n8.1　概述 \/ 275\n8.2　一个Activity的显示 \/ 275\n8.2.1　Activity的创建 \/ 275\n8.2.2　Activity的UI绘制 \/ 294\n8.2.3　关于Activity的总结 \/ 296\n8.3　初识Surface \/ 297\n8.3.1　和Surface有关的流程总结 \/ 297\n8.3.2　Surface之乾坤大挪移 \/ 298\n8.3.3　乾坤大挪移的JNI层分析 \/ 303\n8.3.4　Surface和画图 \/ 307\n8.3.5　初识Surface小结 \/ 309\n8.4　深入分析Surface \/ 310\n8.4.1　与Surface相关的基础知识介绍 \/ 310\n8.4.2　SurfaceComposerClient分析 \/ 315\n8.4.3　SurfaceControl分析 \/ 320\n8.4.4　writeToParcel和Surface对象的创建 \/ 331\n8.4.5　lockCanvas和unlockCanvasAndPost分析 \/ 335\n8.4.6　GraphicBuffer介绍 \/ 344\n8.4.7　深入分析Surface的总结 \/ 353\n8.5　SurfaceFlinger分析 \/ 353\n8.5.1　SurfaceFlinger的诞生 \/ 354\n8.5.2　SF工作线程分析 \/ 359\n8.5.3　Transaction分析 \/ 368\n8.5.4　关于SurfaceFlinger的总结 \/ 376\n8.6　拓展思考 \/ 377\n8.6.1　Surface系统的CB对象分析 \/ 377\n8.6.2　ViewRoot的你问我答 \/ 384\n8.6.3　LayerBuffer分析 \/ 385\n8.7　本章小结 \/ 394\n第9章　深入理解Vold和Rild \/ 395\n9.1　概述 \/ 396\n9.2　Vold的原理与机制分析 \/ 396\n9.2.1　Netlink和Uevent介绍 \/ 397\n9.2.2　初识Vold \/ 399\n9.2.3　NetlinkManager模块分析 \/ 400\n9.2.4　VolumeManager模块分析 \/ 408\n9.2.5　CommandListener模块分析 \/ 414\n9.2.6　Vold实例分析 \/ 417\n9.2.7　关于Vold的总结 \/ 428\n9.3　Rild的原理与机制分析 \/ 428\n9.3.1　初识Rild \/ 430\n9.3.2　RIL_startEventLoop分析 \/ 432\n9.3.3　RIL_Init分析 \/ 437\n9.3.4　RIL_register分析 \/ 444\n9.3.5　关于Rild main函数的总结 \/ 447\n9.3.6　Rild实例分析 \/ 447\n9.3.7　关于Rild的总结 \/ 459\n9.4　拓展思考 \/ 459\n9.4.1　嵌入式系统的存储知识介绍 \/ 459\n9.4.2　Rild和Phone的改进探讨 \/ 462\n9.5　本章小结 \/ 463\n第10章　深入理解MediaScanner \/ 464\n10.1　概述 \/ 465\n10.2　android.process.media分析 \/ 465\n10.2.1　MSR模块分析 \/ 466\n10.2.2　MSS模块分析 \/ 467\n10.2.3　android.process.media媒体扫描工作的流程总结 \/ 471\n10.3　MediaScanner分析 \/ 472\n10.3.1　Java层分析 \/ 472\n10.3.2　JNI层分析 \/ 476\n10.3.3　PVMediaScanner分析 \/ 479\n10.3.4　关于MediaScanner的总结 \/ 485\n10.4　拓展思考 \/ 486\n10.4.1　MediaScannerConnection介绍 \/ 486\n10.4.2　我问你答 \/ 487\n10.5　本章小结 \/ 488",
      "pages": "488",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s11171603.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s11171603.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s11171603.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6802440\/",
      "id": "6802440",
      "publisher": "机械工业出版社",
      "isbn10": "7111357620",
      "isbn13": "9787111357629",
      "title": "深入理解Android",
      "url": "http:\/\/api.douban.com\/v2\/book\/6802440",
      "alt_title": "",
      "author_intro": "邓凡平，资深Android开发工程师，热衷于Android源代码的研究，对Android的架构设计和实现原理有非常深刻的认识和理解，应用开发经验也十分丰富。目前就职于国内一家领先的Android企业，负责Framework的开发和维护。乐于分享，活跃于CSDN等专业社区，撰写的Android Framework源码的系列文章深受读者欢迎。此外，他对Linux内核、C\/C++\/Python相关的技术，以及高性能网络服务器和多核并行开发等也有一定的研究。",
      "summary": "《深入理解Android：卷I》是一本以情景方式对Android的源代码进行深入分析的书。内容广泛，以对Framework层的分析为主，兼顾Native层和Application层；分析深入，每一部分源代码的分析都力求透彻；针对性强，注重实际应用开发需求，书中所涵盖的知识点都是Android应用开发者和系统开发者需要重点掌握的。\n全书共10章，第1章介绍了阅读本书所需要做的准备工作，主要包括对Android系统架构和源码阅读方法的介绍；第2章通过对Android系统中的MediaScanner进行分析，详细讲解了Android中十分重要的JNI技术；第3章分析了init进程，揭示了通过解析init.rc来启动Zygote以及属性服务的工作原理；第4章分析了Zygote、SystemServer等进程的工作机制，同时还讨论了Android的启动速度、虚拟机HeapSize的大小调整、Watchdog工作原理等问题；第5章讲解了Android系统中常用的类，包括sp、wp、RefBase、Thread等类，同步类，以及Java中的Handler类和Looper类，掌握这些类的知识后方能在后续的代码分析中做到游刃有余；第6章以MediaServer为切入点，对Android中极为重要的Binder进行了较为全面的分析，深刻揭示了其本质。第7章对Audio系统进行了深入的分析，尤其是AudioTrack、AudioFlinger和AudioPolicyService等的工作原理。第8章深入讲解了Surface系统的实现原理，分析了Surface与Activity之间以及Surface与SurfaceFlinger之间的关系、SurfaceFlinger的工作原理、Surface系统中的帧数据传输以及LayerBuffer的工作流程。第9章对Vold和Rild的原理和机制进行了深入的分析，同时还探讨了Phone设计优化的问题；第10章分析了多媒体系统中MediaScanner的工作原理。\n本书适合有一定基础的Android应用开发工程师和系统工程师阅读。通过对本书的学习，大家将能更深刻地理解Android系统，从而自如应对实际开发中遇到的难题。",
      "series": {
        "id": "28292",
        "title": "深入理解Android"
      },
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 231,
        "average": "6.6",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "杨丰盛"
      ],
      "pubdate": "2010-1",
      "tags": [
        {
          "count": 173,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 60,
          "name": "Android开发",
          "title": "Android开发"
        },
        {
          "count": 32,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 27,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 26,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 26,
          "name": "Android应用开发揭秘",
          "title": "Android应用开发揭秘"
        },
        {
          "count": 11,
          "name": "移动开发",
          "title": "移动开发"
        },
        {
          "count": 10,
          "name": "Google",
          "title": "Google"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s4143787.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "前言\n第一部分 准备篇\n第1章 android开发简介\n1.1 android基本概念\n1.1.1 android简介\n1.1.2 android的系统构架\n1.1.3 android应用程序框架\n1.2 oms介绍\n1.2.1 ophone介绍\n1.2.2 widget介绍\n1.3 小结\n第2章 android开发环境搭建\n2.1 android开发准备工作\n2.2 开发包及其工具的安装和\n配置\n2.2.1 安装jdk和配置java开发\n环境\n2.2.2 eclipse的安装与汉化\n2.2.3 sdk和adt的安装和\n.配置\n2.3 创建第一个android项目——heuoandroid\n2.3.1 创建helloandroid项目\n2.3.2 运行helloandroid及模拟器的使用\n2.3.3 调试helloandroid\n2.4 小结\n第二部分 基础篇\n第3章 android程序设计基础\n3.1 android程序框架\n3.1.1 android项目目录结构\n3.1.2 android应用解析\n3.2 android的生命周期\n3.3 android程序u设计\n3.4 小结\n第4章 用户界面开发\n4.1 用户界面开发详解\n4.1.1 用户界面简介\n4.1.2 事件处理\n4.2 常用控件应用\n4.2.1 文本框(textiew)\n4.2.2 列表(listview)\n4.2.3 提示(t0ast)\n4.2.4 编辑框(edittext)\n4.2.5 单项选择(radiogroup、radiobutton\n4.2.6 多项选择(checkbox)\n4.2.7 下拉列表(spinner)\n4.2.8 自动提示(autocomplete.textⅵew)\n4.2.9 日期和时间(datepicker、timepicker)\n4.2.10 按钮(button)\n4.2.1l 菜单(menu)\n4.2.12 对话框(dialog)\n4.2.13 图片视图(imageview)\n4.2.14 带图标的按钮(imagebutton)\n4.2.15 拖动效果(gallery)\n4.2.16 切换图片(hmgeswilcher)\n4.2.17 网格视图(gridview)\n4.2.18 卷轴视图(scrollview)\n4.2.19 进度条(progressbar)\n4.2.20 拖动条(seekbar)\n4.2.21 状态栏提示(notification、notificationmanager)\n4.2.22 对话框中的进度条(progressdialog)\n4.3 界面布局\n4.3.1 垂直线性布局\n4.3.2 水平线性布局\n4.3.3.相对布局(relativelayout)\n4.3.4 表单布局(tablelayout)\n4.3.5 切换卡(tabwidget)\n4,4 小结\n第5章 android游戏开发\n5.1 android游戏开发框架\n5.1.1 view类开发框架\n5.1.2 surfaceview类开发框架\n5.2 graphics类开发\n5.5.1 paint和color类介绍\n5.2.2 canvas类介绍\n5.2.3 几何图形绘制\n5.2.4 字符串绘制\n5.2.5 图像绘制\n5.2.6 图像旋转\n5.2.7 图像缩放\n5.2.8 图像像素操作\n5.2.9 shader类介绍\n5.2.10 双缓冲技术\n5.2.11 全屏显示\n5.2.12 获得屏幕属性\n5.3 动画实现\n5.3.1 tween动画\n5.3.2 frame动画\n5.3.3 gif动画播放\n5.4 小结\n第6章 android数据存储\n6.1 android数据存储初探\n6.2 数据存储之shared preferences\n6.3 数据存储之files\n6.4 数据存储之network\n6.5 android数据库编程\n6.5.1 sqlite简介\n6.5.2 sqlite编程详解\n6.5.3 sqliteopenhelper应用\n6.6 数据共享(contentproviders)\n6.7 小结\n第7 章多媒体开发\n7.1 多媒体开发详解\n7.1.1 open core\n7.1.2 mediaplayer\n7.1.3 mediarecorder\n7.2 播放音乐\n7.3 播放视频\n7.4 录制歌曲\n7.5 相机设置\n7.6 闹钟设置\n7.7 铃声设置\n7.8 小结\n第8章 网络与通信\n8.1 网络通信基础\n8.1.1 无线网络技术\n8.1.2 android网络基础\n8.2 http通信\n8.2.1 httpurlconnection接口\n8.2.2 httpclient接口\n8.2.3 实时更新\n8.3 socket通信\n8.3.1 socket基础\n8.3.2 socket应用(简易聊天室)\n8.4 网络通信的中文乱码问题\n8.5 webkit应用\n8.5.1 webkjt概述\n8.5.2 webview浏览网页\n8.5.3 webview与javascript\n8.6 wtfi介绍\n8.7 蓝牙\n8.8 小结\n第9章 android特色开发\n9.1 传感器\n9.2 语音识别\n9.3 googlemap\n9.3.1 googlemap概述\n9.3.2 准备工作\n9.3.3 googlemapapi的使用\n9.3.4 定位系统\n9.4 桌面组件\n9.4.1 快捷方式\n9.4.2 实时文件夹\n9.4.3 widget开发\n9.5 账户管理\n9.6 小结\n第三部分 实例篇\n第10章 android应用开发\n实例\n10.1 情境模式\n10.2 文件管理器\n10.3 通讯录\n10.4 音乐播放器\n10.5 天气预报\n10.6 个人地图\n10.7 widget日历\n10.8 小结\n第11 章android游戏开发实例\n11.1 手机游戏开发简介\n11.2 游戏框架设计\n11.3 地图设计\n11.4 主角设计\n11.5 图层管理器\n11.6 游戏音效\n11.7 游戏存档\n11.8 小结\n第四部分 高级篇\n第12章 androidopengl开发\n基础\n12.1 opengl简介\n12.2 多边形\n12.3 颜色\n12.4 旋转\n12.5 3d 空间\n12.6 纹理映射\n12.7 光照和事件\n12.8 混合\n12.9 小结\n第13章 androidopengl综合\n应用\n13.1 移动图像\n13.2.3d 世界\n13.3 飘动的旗帜\n13.4 显示列表\n13.5 雾\n13.6 粒子系统\n13.7 蒙版\n13.8 变形\n13.9 小结\n第14章 游戏引擎实现\n14.1 游戏引擎介绍\n14.1.1 什么是引擎\n14.1.2 引擎的进化\n14.1.3 常见的游戏引擎\n14.1.4 android游戏引擎\n14.2 游戏引擎结构\n14.2.1 游戏引擎原理\n14.2.2 游戏引擎定位\n14.2.3 游戏引擎框架\n14.3 游戏引擎设计\n14.3.1 游戏引擎结构和功能\n设计\n14.3.2 游戏引擎设计注意事项\n14.4 游戏引擎实现\n14.4.1 activity类实现\n14.4.2 流程控制和线程\n14.4.3 游戏对象与对象管理\n14.4.4 图形引擎\n14.4.5 物理引擎\n14.4.6 事件模块\n14.4.7 工具模块\n14.4.8 脚本引擎、音效模块、网络\n模块\n14.5 小结\n第15章 优化技术\n15.1 优化的基本知识\n15.1.1 如何书写出优秀代码\n15.1.2 编程规范\n15.2 程序性能测试\n15.2.1 计算性能测试\n15.2.2 内存消耗测试\n15.3 初级优化\n15.4 高级优化\n15.5 android高效开发\n15.6 androidui优化\n15.7 其他优化\n15.7.1 zipalign\n15.7.2 图片优化\n15.8 小结\n第五部分 扩展篇\n第16章 android ndk开发\n16.1 androidndk简介\n16.2 安装和配置ndk开发环境\n16.2.1 系统和软件需求\n16.2.2 ndk开发环境搭建\n16.2.3 编译第一个ndk程序\n16.3 androidndk开发\n16.3.1 jni接口设计\n16.3.2 使用c\\c++实现本地\n方法\n16.3.3 android.mk实现\n16.3.4 application.mk实现\n16.3.5 编译c\\c++代码\n16.4 androidndk中使用0pengl\n16.5小结\n第17章 android脚本环境\n17.1 android脚本环境简介\n17.2 android脚本环境安装\n17.3如何编写android脚本程序\n17.4小结",
      "ebook_url": "http:\/\/read.douban.com\/ebook\/15091353\/",
      "pages": "515",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4143787.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4143787.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4143787.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4200822\/",
      "id": "4200822",
      "publisher": "机械工业出版社",
      "isbn10": "7111291956",
      "isbn13": "9787111291954",
      "title": "Android应用开发揭秘",
      "url": "http:\/\/api.douban.com\/v2\/book\/4200822",
      "alt_title": "",
      "author_intro": "Android应用开发先驱，对Android有深入研究，实战经验极其丰富。精通Java、C、C++等语言，专注于移动通信软件开发，在机顶盒软件开发和MTK平台软件开发方面有非常深厚的积累。2007年获得中国软件行业协会游戏软件分会(CGIA)认证及国际游戏开发教育联合会国际认证。曾经领导和参与《三国群英传说》、《大航海传奇》、《美少女养成计划》等经典游戏的开发。",
      "summary": "内容简介：\n阿国内第一本基于Android 2.0的经典著作，5大专业社区联袂推荐，权威性毋庸置疑！\n本书内容全面，不仅详细讲解了Android框架、Android组件、用户界面开发、游戏开发、数据存储、多媒体开发和网络开发等基础知识，而且还深入阐述了传感器、语音识别、桌面组件开发、Android游戏引擎设计、Android应用优化、OpenGL等高级知识，最重要的是还全面介绍了如何利用原生的C\/C++（NDK）和Python、Lua等脚本语言（Android Scripting Environment）来开发Android应用；本书实战性强，书中的每个知识点都有配精心设计的示例，尤为值得一提的是，它还以迭代的方式重现了各种常用的Android应用和经典Android游戏的开发全过程，既可以以它们为范例进行实战演练，又可以将它们直接应用到实际开发中去。\nWindows操作系统的诞生成就了微软的霸主地位，也造就了PC时代的繁荣。然而，以Android和iPhone手机为代表的智能移动设备的发明却敲响了PC时代的丧钟！移动互联网时代（3G时代）已经来临，谁会成为这些移动设备上的主宰？毫无疑问，它就是Android——PC时代的Windows！\n移动互联网还是一个新生的婴儿，各种移动设备上的操作系统群雄争霸！与Symbian、iPhone OS、Windows Mobile相比，Android有着天生的优势——完全开放和免费，对广大开发者和手机厂商而言，这是何等的诱人！此外，在Google和以其为首的Android手机联盟的大力支持和推广下，Android不仅得到了全球开发者社区的关注，而且一大批世界一流的手机厂商都已经或准备采用Android。\n拥抱Android开发，拥抱移动开发的未来！\n如果你在思考下面的问题，也许本书就是你想要的：\n·Android开发与传统的J2ME开发有何相似与不同？\n·如何通过Shared Preferences、Files、Network和SQLite等方式高效实现Android数据的存储？又如何通过Content Providers轻松地实现Android数据的共享？\n·如何使用Open Core、MediaPlayer、MediaRecorder方便快速地开发出包含音频和视频等流媒体的丰富多媒体应用？\n·如何利用Android 2.0中新增的蓝牙特性开发包含蓝牙功能的应用？又如何使用蓝牙API来完善应用的网络功能？\n·如何解决Android网络通信中的乱码问题？\n·在Android中如何使用语音服务和 Google Map API？Android如何访问摄像头、传感器等硬件的API？\n·如何进行Widget开发？如何用各种Android组件来打造漂亮的UI界面？\n·Android如何解析XML数据？又如何提高解析速度和减少对内存、CPU资源的消耗？\n·如何使用OpenGL ES在Android平台上开发出绚丽的3D应用？在Android平台上如何更好地设计和实现游戏引擎？\n·如何对Android应用进行优化？如何进行程序性能测试？如何实现UI、zipalign和图片优化？\n·如何通过NDK利用C、C++以及通过ASE利用Python等脚本语言开发Android应用？",
      "ebook_price": "44.16",
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 122,
        "average": "7.8",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "王世江"
      ],
      "pubdate": "2009-11",
      "tags": [
        {
          "count": 191,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 50,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 41,
          "name": "入门",
          "title": "入门"
        },
        {
          "count": 24,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 24,
          "name": "Google",
          "title": "Google"
        },
        {
          "count": 17,
          "name": "开发入门指南",
          "title": "开发入门指南"
        },
        {
          "count": 11,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 8,
          "name": "计算机科学",
          "title": "计算机科学"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s6089507.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第1篇　入门篇\n第1章　初探Android\n1.1　Android是什么\n1.2　Android简史\n1.3　从创意开始\n1.4　参考资料\n第2章　安装Android开发工具\n2.1　系统需求\n2.1.1　操作系统\n2.1.2　必要开发工具\n2.1.3　其他开发环境工具（非必要安装）\n2.2　安装流程\n2.3　参考资料\n第3章　打开现有项目\n3.1　打开项目\n3.2　删除项目\n3.3　导入项目\n3.4　修复项目\n3.5　修改对应的目标版本\n3.6　参考资料\n第4章　操作Android模拟器（Emulator）\n4.1　设置环境参数\n4.2　设置Android模拟器\n4.3　使用命令行工具管理模拟器\n4.3.1　列出模拟器类型\n4.3.2　创建模拟器\n4.3.3　列出已创建的模拟器\n4.4　使用运行（Run）模式运行\n4.5　操作Android模拟器\n4.5.1　切换模拟器布局\n4.5.2　切换屏幕\n4.5.3　添加模拟器外观设置\n4.5.4　删除模拟器外观设置\n4.5.5　移除程序\n4.5.6　移除模拟器\n4.6　参考资料\n第5章　创建一个Android应用程序\n5.1　创建新项目\n5.2　程序项目架构\n5.2.1　src\/：源代码（source）目录\n5.2.2　gen\/：自动生成（Generate）目录\n5.2.3　res\/：资源（Resource）目录\n5.2.4　Android功能列表\n5.2.5　“Android版本号\/”参考函数目录\n5.3　参考资料\n第2篇　基础篇\n第6章　描述用户界面\n6.1　身高体重指数（BMI）计算\n6.2　表达用户界面\n6.3　参考资源\n第7章　设计用户界面\n7.1　视图（View）\n7.2　查阅文件\n7.2.1　线上文件\n7.2.2　脱机文件\n7.3　开始设计\n7.4　整合\n7.5　指定输入类型（InputType）\n7.6　视觉化的界面开发工具\n7.7　参考资料\n第8章　访问标识符号\n8.1　android:id属性\n8.2　XML说明文件与R.java资源文件\n8.3　将字符串抽离XML\n8.4　新增XML文件\n8.5　参考资料\n第9章　解读程序流程\n9.1　基础程序逻辑结构\n9.2　参考函数库\n9.3　参考资料\n第10章　完成BMI程序\n10.1　完整的程序\n10.2　程序解读\n第3篇　提高篇\n第11章　重构程序\n11.1　什么是重构\n11.2　重新查看BMI应用程序\n11.3　MVC模式\n11.4　重构BMI应用程序\n11.5　完整的Bmi.java程序 代码\n11.6　参考资料\n第12章　添加对话框（Dialog）\n12.1　设计对话框\n12.2　定义调用点\n12.3　实体对话框\n12.4　重构\n12.5　添加按钮\n12.6　Toast界面组件\n12.7　错误处理\n12.7.1　讲解\n12.7.2　提取字符串\n12.8　参考资料\n第13章　查看线上内容（Uri）\n13.1　打开网页\n13.1.1　讲解\n13.1.2　使用Uri查看Google地图\n13.2　再做好一点（重构）\n13.2.1　提取字符串\n13.2.2　避免出错\n13.3　参考资料\n第14章　添加菜单（Menu）\n14.1　菜单功能\n14.2　创建菜单\n14.2.1　装饰选项\n14.2.2　使用内置的菜单图标\n14.3　处理选项动作\n14.4　参考资料\n第15章　定义Android列表（Manifest）\n15.1　Android框架\n15.2　预设的Activity列表\n15.3　参考资料\n第16章　添加新活动（Activity）\n16.1　Activity的分类\n16.2　独立的Activity\n16.3　程序中创建新的Activity类文件\n16.4　在列表中添加Activity代码\n16.5　手动添加Activity标签\n16.6　修改页面标题文字\n16.7　原Activity类中添加startActivity函数\n第17章　传送数据到新意图（Intent）\n17.1　使用Intent传递数据\n17.2　使用Intent接收信息\n17.2.1　相关工作\n17.2.2　在Activity中解开信息\n17.2.3　讲解\n17.3　不通过Bundle交换信息\n第18章　信息提醒（Notification）\n18.1　状态栏提醒\n18.2　使用状态栏（Notification Bar）传递信息\n18.3　使用内置的状态图标\n18.4　参考资料\n第19章　日志与调试（Log）\n19.1　在程序中加上调试信息\n19.2　导入Log函数\n19.3　实际应用\n19.3.1　讲解\n19.3.2　其他的记录标记方式\n19.3.3　延伸使用\n19.4　在调试环境中查看除错信息\n19.4.1　启动模拟器\n19.4.2　切换到查错环境配置\n19.4.3　添加信息日志过滤器（Log Filter）\n19.5　模拟器上的调试设置\n19.6　管理日志\n19.7　在实机上调试\n19.8　参考资料\n第20章　活动的生命周期LifeCycle\n20.1　生命周期\n20.2　进程\n20.3　为什么要了解生命周期?\n20.4　Activity的状态\n20.4.1　Active（活动）\n20.4.2　Paused（暂停）\n20.4.3　Stopped（停止）\n20.4.4　Dead（已回收或未启动）\n20.5　系统内存不足时的行为\n20.6　观察Activity运行流程\n20.7　Activity运行流程\n20.7.1　一般启动\n20.7.2　调用另一个Activity\n20.7.3　返回原Activity\n20.7.4　退出结束\n20.7.5　回收后再启动\n20.8　参考资料\n第21章　优先级（Preference）\n21.1　使用优先级设置\n21.2　保存优先级设置\n21.3　参考资料\n第22章　开发不息\n22.1　回顾BMI应用程序\n22.2　BMI应用程序设计的缺陷\n22.3　展望未来\n第4篇　融会贯通篇\n第23章　显性设计\n23.1　做出容易使用的应用程序\n23.2　设计的减法\n23.3　规划应用程序的目标\n23.4　创建新项目\n23.4.1　XML说明文件\n23.4.2　文字字符串文件\n23.4.3　程序代码\n第24章　支持多国语言\n24.1　抽取文本文件\n24.2　让中文、英文多个语言界面并存\n24.3　切换语言\n24.3.1　设置中切换语系\n24.3.2　程序中切换语言\n24.4　参考资料\n第25章　针对特性配置（Orientation）\n25.1　配置资料夹的命名规则\n25.1.1　屏幕方向\n25.1.2　触控类型（Touc-hscreen type）\n25.1.3　文字输入方式（text input）\n25.1.4　浏览方式（navig-ation method）\n25.1.5　屏幕分辨率\n25.2　Android手机配置实例\n25.3　指定屏幕方向\n25.3.1　配置文件中指定屏幕方向\n25.3.2　程序中指定屏幕方向\n25.4　参考资料\n第26章　使用接口（Adapter）\n26.1　接口的概念\n26.2　数组接口（Array Adapter）与字符串数组\n26.3　数组字符串资源文件\n26.4　参考资料\n第27章　添加下拉菜单组件（Spinner）\n27.1　修改XML说明文件\n27.2　添加程序\n27.3　记录所选择的优先级\n27.4　参考资料\n第28章　签发应用程序密钥（Keytools）\n28.1　检查列表\n28.2　手动导出应用程序\n28.3　产生密钥\n28.4　签署密钥\n28.5　验证密钥\n28.6　安装到模拟器\n28.7　发布应用程序\n28.8　参考资料\n第29章　发布到Android Market\n29.1　Android Market的运作方式\n29.2　注册Android Market\n29.3　上传应用程序到Android Market\n29.4　查看成果——查看管理界面\n29.5　自行提供程序在线下载\n29.6　发布到第三方Android应用程序下载网站\n29.7　针对用户作设计\n29.8　参考资料\n第5篇　数据库应用\n第30章　添加列表活动（ListActivity）\n30.1　分析记事本程序\n30.2　创建新项目\n30.3　修改程序代码\n30.3.1　讲解\n30.3.2　自定义ListView组件\n30.3.3　自定义空列表显示内容\n30.4　参考内置范例\n30.5　参考资料\n第31章　使用数据库（SQLite）\n31.1　SQLite数据库简介\n31.2　查看模拟器目录\n31.3　手动创建“SQLite”数据库\n31.4　创建数据表（table）\n31.5　验证\n31.5.1　离开SQLite互动模式\n31.5.2　重新打开SQLite数据库\n31.6　让Android模拟器通过Proxy上网\n31.6.1　查询数据\n31.6.2　添加数据\n31.6.3　确认数据\n31.6.4　更新数据\n31.6.5　删除数据\n31.7　参考资料\n第32章　访问数据表（SQLite OpenHelper）\n32.1　SQLiteOpenHelper\n32.2　对NotesDbAdapter类加工\n32.3　使用NotesDb Adapter类\n32.3.1　讲解\n32.3.2　验证\n32.4　添加查询\n32.5　完整的程序\n32.6　参考资料\n第33章　添加增删改查操作（CRUD）\n33.1　检索（Retrieve）\n33.1.1　讲解\n33.1.2　验证\n33.2　添加（Create）\n33.2.1　讲解\n33.2.2　验证\n33.3　删除\n33.4　查询单条记录、修改\n33.5　参考资料\n第34章　添加相依的活动（Activity ForResult）\n34.1　定义XML说明文件\n34.2　添加编辑类\n34.3　将新Activity添加列表\n34.4　打开编辑页面\n34.5　完整的程序\n34.6　参考资料\n第35章　添加长按菜单（ContextMenu）\n35.1　添加长按菜单框架\n35.2　填入菜单内容\n35.3　后续改进\n35.4　参考资料\n第6篇　地图与定位应用\n第36章　申请Google地图服务（API Key）\n36.1　取得地点坐标\n36.2　取得Google地图开发密钥（API Key）\n36.2.1　调试用密钥（debug keystore）的位置\n36.2.2　取得MD5指纹信息\n36.3　参考资料\n第37章　使用地图（MapView）\n37.1　Google地图的组成元素\n37.2　创建新项目\n37.3　定义列表\n37.4　定义XML资源文件\n37.5　产生地图\n37.6　直接用程序定义界面组件\n37.7　控制地图\n37.8　添加缩放图标\n37.8.1　修改XML说明文件\n37.8.2　加上缩放控制（Zoom Controls）\n37.9　新版的改进\n37.10　参考资料\n第38章　添加按键控制（KeyEvent）\n38.1　添加菜单\n38.2　添加按键控制\n38.3　控制缩放范围\n38.4　参考文件\n第39章　获取现在位置（GPS\/基站三角定位）\n39.1　创建新项目\n39.2　添加使用权限（uses-permission）\n39.3　定义LocationListener界面\n39.4　使用定位服务管理器（locationManager）来获取现在位置\n39.4.1　讲解\n39.4.2　自动判断最佳定位服务来源\n39.5　更新地点（Location Updates）\n39.6　在模拟器中切换地点\n39.7　完整的程序\n39.8　参考资料\n第40章　结合地图与定位功能（My LocationOverlay）\n40.1　添加定位层（MyLocation Overlay）\n40.2　参考资料\n第41章　为地图标上地标（Itemized Overlay）\n41.1　设置图标层（Itemized Overlay）\n41.2　添加图标层\n41.3　地图开发备忘列表\n41.4　参考资料\n后记\n附录A　如何取得范例源代码",
      "pages": "281",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s6089507.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s6089507.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s6089507.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4127895\/",
      "id": "4127895",
      "publisher": "人民邮电出版社",
      "isbn10": "7115213941",
      "isbn13": "9787115213945",
      "title": "Google Android开发入门指南",
      "url": "http:\/\/api.douban.com\/v2\/book\/4127895",
      "alt_title": "",
      "author_intro": "",
      "summary": "《Google Android开发入门指南(第2版)》是一部关于Android开发的基础教程，采用由浅入深、循序渐进的方式讨论Android。《Google Android开发入门指南(第2版)》全部内容基于Android SDK1.5Windows、MacOS X、Linux平台适用Android开发入门的详细教程，适合Android与J2ME的初学者学习，以编写实例为教学主线，真正助您解决开发中遇到的诸多实际问题。\n书中还结合数独游戏等实例更加形象生动地讲解了Android开发的基本流程，且每章最后都有一个“快速阅读指南”，更加方便了读者的阅读。\n《Google Android开发入门指南(第2版)》有超过130个实务范例，全面深度地整合手机、网络及服务。\n《Google Android开发入门指南(第2版)》有易于阅读的架构设计，每个范例均搭配步骤及完成画面！范例完全兼容Android SDK 1.5。",
      "price": "45.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 36,
        "average": "8.6",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "罗升阳"
      ],
      "pubdate": "2012-10-1",
      "tags": [
        {
          "count": 213,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 67,
          "name": "android",
          "title": "android"
        },
        {
          "count": 45,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 32,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 31,
          "name": "内核",
          "title": "内核"
        },
        {
          "count": 27,
          "name": "Linux",
          "title": "Linux"
        },
        {
          "count": 25,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 21,
          "name": "计算机技术",
          "title": "计算机技术"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s27280265.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "目录\n第1篇 初识Android系统\n第1章 准备知识 2\n1.1 Linux内核参考书籍 2\n1.2 Android应用程序参考书籍 3\n1.3 下载、编译和运行Android源代码 3\n1.3.1 下载Android源代码 4\n1.3.2 编译Android源代码 4\n1.3.3 运行Android模拟器 5\n1.4 下载、编译和运行Android内核源代码 6\n1.4.1 下载Android内核源代码 6\n1.4.2 编译Android内核源代码 7\n1.4.3 运行Android模拟器  8\n1.5 开发第一个Android应用程序 8\n1.6 单独编译和打包Android应用程序模块 11\n1.6.1 导入单独编译模块的mmm命令 11\n1.6.2 单独编译Android应用程序模块 12\n1.6.3 重新打包Android系统镜像文件 12\n第２章 硬件抽象层 13\n2.1 开发Android硬件驱动程序 4\n2.1.1 实现内核驱动程序模块 14\n2.1.2 修改内核Kconfig文件 21\n2.1.3 修改内核Makefile文件 22\n2.1.4 编译内核驱动程序模块 22\n2.1.5 验证内核驱动程序模块 23\n2.2 开发C可执行程序验证Android硬件驱动程序 24\n2.3 开发Android硬件抽象层模块 26\n2.3.1 硬件抽象层模块编写规范 26\n2.3.2 编写硬件抽象层模块接口 29\n2.3.3 硬件抽象层模块的加载过程 33\n2.3.4 处理硬件设备访问权限问题 36\n2.4 开发Android硬件访问服务 38\n2.4.1 定义硬件访问服务接口 38\n2.4.2 实现硬件访问服务 39\n2.4.3 实现硬件访问服务的JNI方法 40\n2.4.4 启动硬件访问服务 43\n2.5 开发Android应用程序来使用硬件访问服务 44\n第３章 智能指针 49\n3.1 轻量级指针 50\n3.1.1 实现原理分析 50\n3.1.2 应用实例分析 53\n3.2 强指针和弱指针 54\n3.2.1 强指针的实现原理分析 55\n3.2.2 弱指针的实现原理分析 61\n3.2.3 应用实例分析 67\n第2篇 Android专用驱动系统\n第４章 Logger日志系统 74\n4.1 Logger日志格式 75\n4.2 Logger日志驱动程序 76\n4.2.1 基础数据结构 77\n4.2.2 日志设备的初始化过程 78\n4.2.3 日志设备文件的打开过程 83\n4.2.4 日志记录的读取过程 84\n4.2.5 日志记录的写入过程 88\n4.3 运行时库层日志库 93\n4.4 C\/C++日志写入接口 100\n4.5 Java日志写入接口 104\n4.6 Logcat工具分析 110\n4.6.1 相关数据结构 111\n4.6.2 初始化过程 115\n4.6.3 日志记录的读取过程 127\n4.6.4 日志记录的输出过程 132\n第５章 Binder进程间通信系统 144\n5.1 Binder驱动程序 145\n5.1.1 基础数据结构 146\n5.1.2 Binder设备的初始化过程 164\n5.1.3 Binder设备文件的打开过程 165\n5.1.4 Binder设备文件的内存映射过程 166\n5.1.5 内核缓冲区管理 173\n5.2 Binder进程间通信库 183\n5.3 Binder进程间通信应用实例 188\n5.4 Binder对象引用计数技术 196\n5.4.1 Binder本地对象的生命周期 197\n5.4.2 Binder实体对象的生命周期 201\n5.4.3 Binder引用对象的生命周期 204\n5.4.4 Binder代理对象的生命周期 209\n5.5 Binder对象死亡通知机制 212\n5.5.1 注册死亡接收通知 213\n5.5.2 发送死亡接收通知 216\n5.5.3 注销死亡接收通知 221\n5.6 Service Manager的启动过程 224\n5.6.1 打开和映射Binder设备文件 226\n5.6.2 注册为Binder上下文管理者 227\n5.6.3 循环等待Client进程请求 231\n5.7 Service Manager代理对象的获取过程 238\n5.8 Service组件的启动过程 244\n5.8.1 注册Service组件 245\n5.8.2 启动Binder线程池 289\n5.9 Service代理对象的获取过程 291\n5.10 Binder进程间通信机制的Java接口 300\n5.10.1 Service Manager的Java代理对象的获取过程 300\n5.10.2 Java服务接口的定义和解析 310\n5.10.3 Java服务的启动过程 313\n5.10.4 Java服务代理对象的获取过程 320\n5.10.5 Java服务的调用过程 323\n第６章 Ashmem匿名共享内存系统 327\n6.1 Ashmem驱动程序 328\n6.1.1 基础数据结构 328\n6.1.2 匿名共享内存设备的初始化过程 330\n6.1.3 匿名共享内存设备文件的打开过程 332\n6.1.4 匿名共享内存设备文件的内存映射过程 334\n6.1.5 匿名共享内存块的锁定和解锁过程 336\n6.1.6 匿名共享内存块的回收过程 344\n6.2 运行时库cutils的匿名共享内存访问接口 345\n6.3 匿名共享内存的C++访问接口 349\n6.3.1 MemoryHeapBase 349\n6.3.2 MemoryBase 359\n6.3.3 应用实例 364\n6.4 匿名共享内存的Java访问接口 370\n6.4.1 MemoryFile 370\n6.4.2 应用实例 375\n6.5 匿名共享内存的共享原理 386\n第3篇 Android应用程序框架\n第７章 Activity组件的启动过程 392\n7.1 Activity组件应用实例 392\n7.2 根Activity组件的启动过程 398\n7.3 子Activity组件在进程内的启动过程 432\n7.4 子Activity组件在新进程中的启动过程 440\n第８章 Service组件的启动过程 443\n8.1 Service组件应用实例 443\n8.2 Service组件在新进程中的启动过程 451\n8.3 Service组件在进程内的绑定过程 463\n第９章 Android系统广播机制 486\n9.1 广播机制应用实例 487\n9.2 广播接收者的注册过程 493\n9.3 广播的发送过程 501\n第10章 Content Provider组件的实现原理 524\n10.1 Content Provider组件应用实例 525\n10.1.1 ArticlesProvider 525\n10.1.2 Article 535\n10.2 Content Provider组件的启动过程 550\n10.3 Content Provider组件的数据共享原理 573\n10.3.1 数据共享模型 573\n10.3.2 数据传输过程 576\n10.4 Content Provider组件的数据更新通知机制 596\n10.4.1 注册内容观察者 597\n10.4.2 发送数据更新通知 603\n第11章 Zygote和System进程的启动过程 611\n11.1 Zygote进程的启动脚本  611\n11.2 Zygote进程的启动过程 614\n11.3 System进程的启动过程 622\n第12章 Android应用程序进程的启动过程 630\n12.1 应用程序进程的创建过程 630\n12.2 Binder线程池的启动过程 639\n12.3 消息循环的创建过程 641\n第13章 Android应用程序的消息处理机制 645\n13.1 创建线程消息队列 645\n13.2 线程消息循环过程 650\n13.3 线程消息发送过程 655\n13.4 线程消息处理过程 660\n第14章 Android应用程序的键盘消息处理机制 667\n14.1 键盘消息处理模型  667\n14.2 InputManager的启动过程  670\n14.2.1 创建InputManager 670\n14.2.2 启动InputManager 673\n14.2.3 启动InputDispatcher 675\n14.2.4 启动InputReader 677\n14.3 InputChannel的注册过程 688\n14.3.1 创建InputChannel 689\n14.3.2 注册Server端InputChannel 697\n14.3.3 注册系统当前激活的应用程序窗口 701\n14.3.4 注册Client端InputChannel 706\n14.4 键盘消息的分发过程 709\n14.4.1 InputReader获得键盘事件 710\n14.4.2 InputDispatcher分发键盘事件 717\n14.4.3 系统当前激活的应用程序窗口获得键盘消息 727\n14.4.4 InputDispatcher获得键盘事件处理完成通知 743\n14.5 InputChannel的注销过程 746\n14.5.1 销毁应用程序窗口 747\n14.5.2 注销Client端InputChannel 756\n14.5.3 注销Server端InputChannel 758\n第15章 Android应用程序线程的消息循环模型 764\n15.1 应用程序主线程消息循环模型 765\n15.2 与界面无关的应用程序子线程消息循环模型 766\n15.3 与界面相关的应用程序子线程消息循环模型 769\n第16章 Android应用程序的安装和显示过程 778\n16.1 应用程序的安装过程 778\n16.2 应用程序的显示过程 814",
      "pages": "830",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s27280265.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s27280265.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s27280265.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/19986441\/",
      "id": "19986441",
      "publisher": "电子工业出版社",
      "isbn10": "7121181088",
      "isbn13": "9787121181085",
      "title": "Android系统源代码情景分析",
      "url": "http:\/\/api.douban.com\/v2\/book\/19986441",
      "alt_title": "",
      "author_intro": "罗升阳，1984年出生，2007年毕业于浙江大学计算机系，取得学士学位，2010年毕业于上海交通大学计算机系，取得硕士学位。毕业后一直从事于互联网软件开发，并且致力于移动平台的研究，特别是对Android平台有深入的理解和研究。在国内知名IT技术社区CSDN上发表了数十篇高质量的Android系统原创性文章，并且开设博客专栏--《老罗的Android之旅》，积极与网友互动，深受大家喜爱，访问量一直居于前茅。",
      "summary": "在内容上，本书结合使用情景，全面、深入、细致地分析Android系统的源代码，涉及到Linux内核层、硬件抽象层（HAL）、运行时库层(Runtime)、应用程序框架层(Application Framework)以及应用程序层(Application)。\n在组织上，本书将上述内容划分为初识Android系统、Android专用驱动系统和Android应用程序框架三大篇章。初识Android系统篇介绍了参考书籍、基础知识以及实验环境搭建；Android专用驱动系统篇介绍了Logger日志驱动程序、Binder进程间通信驱动程序以及Ashmem匿名共享内存驱动程序；Android应用程序框架篇从组件、进程、消息以及安装四个维度来对Android应用程序的框架进行了深入的剖析。\n通过上述内容及其组织，本书能使读者既能从整体上把握Android系统的层次结构，又能从细节上去掌握每一个层次的要点。",
      "price": "109.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 70,
        "average": "8.1",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "柯元旦"
      ],
      "pubdate": "2011-9",
      "tags": [
        {
          "count": 143,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 92,
          "name": "Android内核",
          "title": "Android内核"
        },
        {
          "count": 35,
          "name": "Android、内核剖析、输入法框架分析、窗口管理系统、编译系",
          "title": "Android、内核剖析、输入法框架分析、窗口管理系统、编译系"
        },
        {
          "count": 27,
          "name": "内核剖析",
          "title": "内核剖析"
        },
        {
          "count": 22,
          "name": "Android,",
          "title": "Android,"
        },
        {
          "count": 19,
          "name": "框架",
          "title": "框架"
        },
        {
          "count": 18,
          "name": "操作系统",
          "title": "操作系统"
        },
        {
          "count": 18,
          "name": "android",
          "title": "android"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s6937206.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第1部分 基础篇\n第1章 linux基础\t2\n1.1 linux文件系统概述\t2\n1.2 linux启动过程\t4\n1.3 常用linux 命令\t6\n1.4 shell脚本备忘\t9\n1.4.1 获取输入\t10\n1.4.2 变量定义\t10\n1.4.3 条件判断\t11\n1.4.4 while []...do... done语句\t12\n1.4.5 for循环\t13\n1.4.6 函数\t14\n1.4.7 常用内置符号常量\t15\n1.5 make脚本备忘\t15\n1.5.1 一个简单的makefile文件\t16\n1.5.2 变量的定义与赋值\t18\n1.5.3 条件控制语句\t18\n1.5.4 宏（函数）定义\t19\n1.5.5 内置符号和变量\t22\n1.5.6 模板目标（pattern target）\t23\n1.5.7 目标特定的变量赋值（target-specific variable）\t24\n1.5.8 常用选项\t25\n第2章 java基础\t26\n2.1 类装载器dexclassloader\t26\n2.1.1 dexclassloader的调用方法\t27\n2.1.2 基于类装载器设计一种“插件”架构\t29\n2.2 jni调用机制\t32\n2.2.1 java访问c\t33\n2.2.2 c访问java\t35\n2.2.3 在c中使用持久对象\t37\n2.3 异步消息处理线程\t37\n2.3.1 实现异步线程的一般思路\t38\n2.3.2 android中异步线程的实现方法\t38\n第3章 android源码下载及开发环境配置\t44\n3.1 mac系统的配置\t44\n3.1.1 硬盘格式的配置\t44\n3.1.2 port的用法\t46\n3.2 在linux中配置usb连接\t46\n3.3 在eclipse中调试framework\t46\n3.3.1 一段防止下载异常的脚本\t47\n3.3.2 调试framework中的代码\t47\n第4章 使用git\t51\n4.1 安装git\t52\n4.2 git仓库管理\t52\n4.2.1 仓库的组成\t52\n4.2.2 创建仓库\t54\n4.2.3 分支管理\t55\n4.3 git merge用法\t57\n4.4 git rebase用法\t58\n4.5 git cherry-pick用法\t61\n4.6 git reset用法\t62\n4.7 恢复到无引用提交\t63\n4.8 git remote用法\t65\n4.9 git 配置\t67\n4.9.1 基本信息配置\t68\n4.9.2 merge、diff工具配置\t68\n4.9.3 .gitignore配置\t70\n4.10 同时使用git和svn\t71\n4.11 其他git常用命令示例\t72\n4.11.1 git branch\t72\n4.11.2 git checkout\t72\n4.11.3 git log\t73\n4.11.4 git commit --amend\t73\n4.11.5 git cherry-pick sha-1\t73\n4.11.6 git merge-base\t74\n4.11.7 git diff master…dev\t74\n4.11.8 git revert\t75\n4.11.9 git diff\t75\n4.11.10 git rm\t75\n4.11.11 git tag\t76\n第2部分 内核篇\n第5章 binder\t78\n5.1 binder框架\t78\n5.2 设计servier端\t80\n5.3 binder客户端设计\t81\n5.4 使用service类\t82\n5.4.1 获取binder对象\t82\n5.4.2 保证包裹内参数顺序aidl工具的使用\t83\n5.5 系统服务中的binder对象\t88\n5.5.1 servicemanager管理的服务\t88\n5.5.2 理解manager\t90\n第6章 framework概述\t92\n6.1 framework框架\t92\n6.1.1 服务端\t92\n6.1.2 客户端\t93\n6.1.3 linux驱动\t94\n6.2 apk程序的运行过程\t94\n6.3 客户端中的线程\t94\n6.4 几个常见问题\t95\n6.4.1 acitivity之间如何传递消息（数据）\t95\n6.4.2 窗口相关的概念\t96\n第7章 理解context\t98\n7.1 context是什么\t98\n7.2 一个应用程序中包含多少个context对象\t99\n7.3 context相关类的继承关系\t99\n7.4 创建context\t100\n7.4.1 application对应的context\t101\n7.4.2 activity对应的context\t102\n7.4.3 service对应的context\t103\n7.4.4 context之间的关系\t104\n第8章 创建窗口的过程\t106\n8.1 窗口的类型\t106\n8.2 token变量的含义\t108\n8.2.1 activity中的mtoken\t108\n8.2.2 window中的mapptoken\t109\n8.2.3 windowmanager.layoutparams中的token\t109\n8.2.4 view中的token\t110\n8.3 创建应用窗口\t111\n8.4 创建子窗口\t121\n8.4.1 dialog的创建\t122\n8.4.2 popupwindow的创建\t126\n8.4.3 contextmenu的创建\t127\n8.4.4 optionmenu的创建\t132\n8.5 系统窗口toast的创建\t136\n8.5.1 toast调用流程\t137\n8.5.2 toast添加窗口\t139\n8.6 创建窗口示例\t139\n第9章 framework的启动过程\t142\n9.1 framework运行环境综述\t142\n9.2 dalvik虚拟机相关的可执行程序\t143\n9.2.1 dalvikvm\t144\n9.2.2 dvz\t144\n9.2.3 app_process\t145\n9.3 zygote的启动\t147\n9.3.1 在init.rc中配置zygote启动参数\t147\n9.3.2 启动socket服务端口\t148\n9.3.3 加载preload-classes\t151\n9.3.4 加载preload-resources\t152\n9.3.5 使用folk启动新的进程\t152\n9.4 systemserver进程的启动\t155\n9.4.1 启动各种系统服务线程\t156\n9.4.2 启动第一个activity\t158\n第10章 ams内部原理\t160\n10.1 activity调度机制\t160\n10.1.1 几个重要概念\t161\n10.1.2 ams中的一些重要调度相关变量\t163\n10.1.3 startactivity()的流程\t165\n10.1.4 stopactivitylocked()停止activity\t183\n10.1.5 按“home”键回到桌面的过程\t186\n10.1.6 按“back”键回到上一个activity\t187\n10.1.7 长按“home”键\t189\n10.1.8 activity生命期的代码含义\t190\n10.2 内存管理\t192\n10.2.1 关闭而不退出\t192\n10.2.2 android与linux的配合\t194\n10.2.3 各种关闭程序的过程\t196\n10.2.4 释放内存详解\t197\n10.3 对ams中数据对象的理解\t211\n10.3.1 常见的对象操作\t212\n10.3.2 理解activity\t213\n10.3.3 android多进程吗，是同时在运行多个应用程序吗\t213\n10.4 activitygroup的内部机制\t214\n10.4.1 tabactivity使用时的类关系结构\t215\n10.4.2 localactivitymanager的内部机制\t217\n10.4.3 activitygroup内部的activity生命期控制\t220\n第11章 从输入设备中获取消息\t221\n11.1 android消息获取过程概述\t221\n11.2 与消息处理相关的源码文件分布\t223\n11.3 创建inputdispatcher线程\t226\n11.4 把窗口信息传递给inputdispatcher线程\t227\n11.5 创建inputchannel\t229\n11.6 在wms中注册inputchannel\t232\n11.7 在客户进程中注册inputchannel\t233\n11.8 wms中处理消息的时机\t234\n11.9 客户窗口获取消息的时机\t235\n第12章 屏幕绘图基础\t237\n12.1 绘制屏幕的软件架构\t237\n12.2 java客户端绘制调用过程\t239\n12.3 c客户端绘制过程\t241\n12.4 java客户端绘制相关类的关系\t244\n第13章 view工作原理\t247\n13.1 导论\t247\n13.2 用户消息类型\t249\n13.2.1 按键消息\t249\n13.2.2 触摸消息\t250\n13.3 按键消息派发过程\t252\n13.3.1 keyevent.dispatcherstate中的长按监测\t252\n13.3.2 按键消息总体派发过程\t254\n13.3.3 根视图内部派发过程\t256\n13.3.4 activity内部派发过程\t257\n13.3.5 view类内部的onkeydown()和onkeyup()\t260\n13.3.6 activity中的onkeydown()和onkeyup()\t261\n13.3.7 phonewindow内部消息派发过程\t262\n13.4 按键消息在wms中的派发过程\t263\n13.5 触摸消息派发过程\t266\n13.5.1 触摸消息总体派发过程\t266\n13.5.2 根视图内部消息派发过程\t267\n13.5.3 viewgroup内部消息派发过程\t268\n13.5.4 各种消息监测的基本实现方法\t271\n13.5.5 view内默认消息派发过程\t272\n13.6 导致view树重新遍历的时机\t274\n13.6.1 状态的分类\t274\n13.6.2 导致view树重新遍历的总体诱因图\t275\n13.6.3 refreshdrawablelist()\t276\n13.6.4 onfocusedchanged()\t278\n13.6.5 ensuretouchmode()\t279\n13.6.6 setvisibility()\t282\n13.6.7 setenable()\t284\n13.6.8 setselected()\t285\n13.6.9 invalidate()\t286\n13.6.10 requestfocus()\t290\n13.6.11 requestlayout()\t292\n13.7 遍历view树performtraversals()的执行过程\t293\n13.8 计算视图大小（measure）的过程\t296\n13.8.1 measure内部设计思路\t297\n13.8.2 viewgroup中的measurechildwithmargins()\t301\n13.8.3 linearlayout中的onmeasure()过程举例\t304\n13.9 布局（layout）过程\t308\n13.9.1 layout过程的设计思路\t308\n13.9.2 linearlayout中onlayout()内部过程\t309\n13.9.3 textview中gravity与layout的关系\t311\n13.10 绘制（draw）过程\t313\n13.10.1 视图中可绘制的元素\t313\n13.10.2 绘制过程的设计思路\t314\n13.10.3 viewroot中draw()的内部流程\t315\n13.10.4 view类中draw()函数内部流程\t318\n13.10.5 viewgroup类中绘制子视图dispatchdraw()内部流程\t322\n13.10.6 viewgroup类中drawchild()过程\t325\n13.10.7 绘制滚动条\t328\n13.11 动画的绘制\t331\n13.11.1 动画的设计思路\t332\n13.11.2 viewgroup类中drawchild()函数中视图动画绘制过程\t334\n13.11.3 viewgroup中dipsatchdraw()中布局动画绘制流程\t337\n第14章 wms工作原理\t340\n14.1 概述\t340\n14.1.1 窗口的定义\t340\n14.1.2 窗口管理要解决的核心问题\t341\n14.1.3 解决核心问题所使用的相关的变量列表\t343\n14.1.4 几个操作的概念\t346\n14.1.5 什么是policy，以及其与wms的关系\t346\n14.1.6 wms接口结构\t347\n14.2 wms主要内部类\t348\n14.2.1 表示窗口的数据类\t348\n14.2.2 dimanimator\t348\n14.2.3 fadeinoutanimation\t349\n14.2.4 inputmonitor类\t350\n14.2.5 policythread\t351\n14.2.6 session\t352\n14.2.7 watermark\t353\n14.2.8 wmthread\t354\n14.3 窗口的创建和删除\t355\n14.3.1 创建窗口的时机和过程\t355\n14.3.2 assignlayerslocked()的执行过程\t360\n14.3.3 addwindowtolistinorderlocked()的执行过程\t362\n14.3.4 删除窗口的时机\t364\n14.3.5 删除窗口的过程\t366\n14.3.6 removewindowinnerlocked()\t367\n14.4 计算窗口的大小\t371\n14.4.1 描述窗口尺寸的变量\t371\n14.4.2 窗口大小的变化过程\t372\n14.4.3 policy中layoutwindowlw()的执行过程\t375\n14.4.4 输入法窗口如何影响应用窗口的大小\t378\n14.5 切换窗口\t379\n14.5.1 切换要解决的问题\t379\n14.5.2 inputmanager和wms的接口\t381\n14.5.3 ams与wms的接口\t383\n14.5.4 从a到b的切换\t387\n14.5.5 从b回到a的过程\t390\n14.5.6 a中长按“home”键切换到b\t391\n14.5.7 setappvisiblity()与销毁surface\t393\n14.5.8 computefocusedwindowlocked()\t396\n14.6 perforlayoutandplacesurfaceslockedinner()的执行过程\t398\n14.6.1 总体过程\t399\n14.6.2 第一大步骤：计算窗口的大小\t401\n14.6.3 第二大步骤：计算窗口的可视状态\t401\n14.6.4 第三大步骤：通知surfaceflinger进行窗口重绘\t404\n14.7 窗口动画\t406\n14.8 屏幕旋转及configuration的变化过程\t409\n第3部分 系统篇\n第15章 资源访问机制\t414\n15.1 定义资源\t414\n15.2 存储资源\t415\n15.3 styleable、style、attr、theme的意义\t417\n15.4 attributeset与typedarray类\t420\n15.5 获取resources的过程\t425\n15.5.1 通过context获取\t425\n15.5.2 通过packagemanager获取\t429\n15.6 framework资源\t431\n15.6.1 加载和读取\t432\n15.6.2 添加\t434\n15.6.3 实现真正主题切换的两种思路\t436\n第16章 程序包管理（package manager service）\t439\n16.1 包管理概述\t439\n16.2 packages.xml文件格式\t442\n16.2.1 last-platform-version标签\t443\n16.2.2 permissions标签\t443\n16.2.3 cert标签\t444\n16.2.4 sigs标签\t444\n16.2.5 perms标签\t444\n16.2.6 package标签\t444\n16.2.7 shared-user标签\t445\n16.3 包管理服务的启动过程\t446\n16.3.1 各主要功能类的关系\t446\n16.3.2 pms主体启动过程\t448\n16.3.3 readpermission()内部过程\t450\n16.3.4 msettings.readlp()\t452\n16.3.5 scanpackageli()内部过程\t454\n16.3.6 msettings.writelp()\t455\n16.4 应用程序的安装和卸载\t455\n16.4.1 各主要功能类关系\t456\n16.4.2 应用程序安装过程\t457\n16.4.3 应用程序的卸载过程\t461\n16.5 intent匹配框架\t463\n16.5.1 主要功能类的关系\t463\n16.5.2 主体调用过程\t465\n第17章 输入法框架\t467\n17.1 输入法框架组成概述\t468\n17.2 输入法中各binder对象的创建过程\t469\n17.2.1 inputconnection\t469\n17.2.2 iinputmethodclient\t471\n17.2.3 inputmethodsession\t472\n17.2.4 inputmethod\t475\n17.3 输入法主要操作过程\t477\n17.3.1 输入法相关模块的启动过程\t477\n17.3.2 切换输入法\t478\n17.3.3 启动输入法\t480\n17.3.4 显示输入法\t485\n17.3.5 输入法操作过程中的重要变量总结\t489\n17.4 输入法窗口内部的显示过程\t490\n17.4.1 ims中的showwindow()的内部执行过程\t491\n17.4.2 标准布局的ims\t496\n17.4.3 自定义布局的ims\t502\n17.5 向编辑框传递字符\t503\n17.6 输入法相关源码清单\t504\n第4部分 编译篇\n第18章 android编译系统\t508\n18.1 android源码文件结构\t509\n18.2 从调用make命令开始说起\t509\n18.2.1 编译命令\t510\n18.2.2 编译结构猜想\t510\n18.3 编译所需脚本文件之间的协同关系\t512\n18.3.1 编译系统内部功能模块图\t512\n18.3.2 脚本文件的包含关系\t514\n18.3.3 从子项目中提取编译目标\t518\n18.3.4 生成编译规则\t519\n18.3.5 设置编译输出目录\t521\n18.3.6 生成最终的image文件\t522\n18.4 如何增加一个product\t523\n18.4.1 什么是一个product\t523\n18.4.2 如何增加一个product\t527\n18.5 如何增加一个项目\t528\n18.5.1 项目类别和项目路径\t529\n18.5.2 添加一个c项目\t530\n18.5.3 添加一个apk项目\t531\n18.6 apk编译过程\t533\n18.6.1 总体编译过程概述\t533\n18.6.2 生成r.java\t535\n18.6.3 编译aidl文件\t536\n18.6.4 包含java静态库\t536\n18.6.5 编译java源文件生成jar包\t538\n18.6.6 将jar包转换为dex文件\t539\n18.6.7 编译资源文件生成apk包\t540\n18.6.8 将dex文件添加到apk包中\t541\n18.6.9 添加jni所需的动态库文件\t541\n18.6.10 对apk文件进行签名\t543\n18.6.11 使用zipalign优化apk内部存储\t543\n18.7 framework的编译\t544\n18.7.1 总体编译过程\t544\n18.7.2 framework\/core\/ext三个jar文件的区别\t546\n18.8 编译android.jar\t547\n18.8.1 资源文件\t547\n18.8.2 aidl文件\t551\n18.8.3 java文件\t551\n18.9 编译adt插件\t553\n18.10 总结\t554\n第19章 编译自己的rom\t555\n19.1 嵌入式系统的内存地址空间\t555\n19.2 各种映像（image）文件的作用\t559\n19.3 编译nexus s（ns）的image文件\t562\n19.3.1 编译linux kernel\t562\n19.3.2 提取ns的私有驱动文件\t563\n19.3.3 编译system.img文件\t564\n19.3.4 创建ramdisk.img\t565\n19.3.5 创建boot.img文件\t566\n19.4 使用fastboot写入image文件\t566\n19.5 最后验证\t567\n19.5.1 解决触摸按键问题\t568\n19.5.2 解决音量和电源键\t568\n19.5.3 wifi问题\t570\n19.5.4 安装google mobile service（gms）\t571\n第5部分 硬件驱动篇\n第20章 基于ti omap处理器的 techshine 开发板介绍\t573\n20.1 techv-35xx开发板概述\t574\n20.2 交叉编译环境配置\t575\n20.3 x-loader编译\t578\n20.4 u-boot编译\t578\n20.5 techv-35xx linux驱动和内核配置及编译\t579\n20.5.1 touchscreen驱动配置\t579\n20.5.2 keyboard驱动配置\t580\n20.5.3 audio驱动配置\t581\n20.5.4 4mmc\/sd驱动配置\t582\n20.5.5 nandflash驱动配置\t582\n20.5.6 lcd驱动配置\t583\n20.5.7 内核编译\t583\n20.6 techv-35xx android驱动编写\t584\n20.7 techv-35xx android开发环境建立\t589\n20.8 编译android donut\t590\n20.9 android根文件系统的制作\t591\n20.10 相关image文件的烧写\t591\n20.11 android 根文件系统安装\t593",
      "pages": "595",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s6937206.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s6937206.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s6937206.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6811238\/",
      "id": "6811238",
      "publisher": "电子工业出版社",
      "isbn10": "7121143984",
      "isbn13": "9787121143984",
      "title": "Android内核剖析",
      "url": "http:\/\/api.douban.com\/v2\/book\/6811238",
      "alt_title": "",
      "author_intro": "柯元旦，1981年生于陕西咸阳，2003年毕业于西安电子科技大学通信工程学院；2003～2006年，创立了一家设计公司，提供便携式媒体播放器解决方案，基于TI DSP芯片自主开发了一套操作系统，包括任务管理与调度、文件系统及GUI(图形用户接口)等：2006～2009年，就职于联想研究院，先后从事嵌入式系统设计以及互联网应用开发；2009年至今，从事Android应用程序开发和Framework内核研究，对Android内核有较深刻的理解。",
      "summary": "由柯元旦编著的《Android内核剖析》详细分析了Android内核的内部机制，包括窗口管理系统、Activity管理系统、输入法框架、编译系统等，为Android内核定制及高级应用程序开发提供技术参考。\n    《Android内核剖析》适合于所有Android相关的工程师及产品经理，还可作为相关培训机构的教材。",
      "price": "79.90元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 138,
        "average": "8.6",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "[美] Bill Phillips",
        "[美] Brian Hardy"
      ],
      "pubdate": "2014-4-1",
      "tags": [
        {
          "count": 156,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 99,
          "name": "android",
          "title": "android"
        },
        {
          "count": 68,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 37,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 36,
          "name": "移动开发",
          "title": "移动开发"
        },
        {
          "count": 21,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 9,
          "name": "图灵,android",
          "title": "图灵,android"
        },
        {
          "count": 9,
          "name": "程序设计",
          "title": "程序设计"
        }
      ],
      "origin_title": "Android programming: the big nerd ranch guide",
      "image": "https://img3.doubanio.com\/mpic\/s28342615.jpg",
      "binding": "平装",
      "translator": [
        "王明发"
      ],
      "catalog": "第1章　Android应用初体验　　1\n1.1 　应用基础　　2\n1.2 　创建Android项目　　2\n1.3 　Eclipse工作区导航　　5\n1.4 　用户界面设计　　6\n1.4.1 　视图层级结构　　9\n1.4.2 　组件属性　　10\n1.4.3 　创建字符串资源　　11\n1.4.4 　预览界面布局　　12\n1.5 　从布局XML到视图对象　　13\n1.6 　组件的实际应用　　15\n1.6.1 　类包组织导入　　16\n1.6.2 　引用组件　　16\n1.6.3 　设置监听器　　17\n1.7 　使用模拟器运行应用　　21\n1.8 　Android编译过程　　22\n第2章　Android与MVC设计模式　　26\n2.1 　创建新类　　26\n2.2 　Android与MVC设计模式　　30\n2.3 　更新视图层　　31\n2.4 　更新控制层　　33\n2.5 　在设备上运行应用　　37\n2.5.1 　连接设备　　37\n2.5.2 　配置设备用于应用开发　　38\n2.6 　添加图标资源　　38\n2.6.1 　向项目中添加资源　　39\n2.6.2 　在XML文件中引用资源　　40\n2.7 　关于挑战练习　　41\n2.8 　挑战练习一：为TextView添加监听器　　41\n2.9 　挑战练习二：添加后退按钮　　42\n2.10 　挑战练习三：从按钮到图标按钮　　42\n第3章　Activity的生命周期　　45\n3.1 　日志跟踪理解Activity生命周期　　46\n3.1.1 　输出日志信息　　46\n3.1.2 　使用 LogCat　　48\n3.2 　设备旋转与Activity生命周期　　52\n3.3 　设备旋转前保存数据　　56\n3.4 　再探Activity生命周期　　57\n3.5 　深入学习：测试onSaveInstanceState-(Bundle)方法　　59\n3.6 　深入学习：日志记录的级别与方法　　60\n第4章　Android应用的调试　　62\n4.1 　DDMS应用调试透视图　　63\n4.2 　异常与栈跟踪　　64\n4.2.1 　诊断应用异常　　65\n4.2.2 　记录栈跟踪日志　　66\n4.2.3 　设置断点　　68\n4.2.4 　使用异常断点　　71\n4.3 　文件浏览器　　72\n4.4 　Android特有的调试工具　　73\n4.4.1 　使用Android Lint　　73\n4.4.2 　R类的问题　　74\n第5章　第二个activity　　75\n5.1 　创建第二个activity　　76\n5.1.1 　创建新布局　　77\n5.1.2 　创建新的activity子类　　80\n5.1.3 　在manifest配置文件中声明activity　　81\n5.1.4 　为QuizActivity添加cheat按钮　　82\n5.2 　启动activity　　83\n5.3 　activity间的数据传递　　85\n5.3.1 　使用intent extra　　86\n5.3.2 　从子activity获取返回结果　　88\n5.4 　activity的使用与管理　　92\n5.5 　挑战练习　　95\n第6章　Android SDK版本与兼容　　96\n6.1 　Android SDK版本　　96\n6.2 　Android编程与兼容性问题　　97\n6.2.1 　全新的系统版本——Honeycomb　　97\n6.2.2 　SDK最低版本　　99\n6.2.3 　SDK目标版本　　99\n6.2.4 　SDK编译版本　　99\n6.2.5 　安全添加新版本API中的代码　　100\n6.3 　使用Android开发者文档　　103\n6.4 　挑战练习：报告编译版本　　105\n第7章　UI fragment与fragment 管理器　　106\n7.1 　UI设计的灵活性需求　　107\n7.2 　fragment的引入　　107\n7.3 　着手开发CriminalIntent　　108\n7.3.1 　创建新项目　　110\n7.3.2 　fragment与支持库　　112\n7.3.3 　创建Crime类　　113\n7.4 　托管UI fragment　　115\n7.4.1 　fragment的生命周期　　115\n7.4.2 　托管的两种方式　　116\n7.4.3 　定义容器视图　　116\n7.5 　创建UI fragment　　117\n7.5.1 　定义CrimeFragment的布局　　118\n7.5.2 　创建CrimeFragment类　　119\n7.6 　添加UI fragment到FragmentManager　　122\n7.6.1 　fragment事务　　123\n7.6.2 　FragmentManager与fragment生命周期　　125\n7.7 　activity使用fragment的理由　　127\n7.8 　深入学习：Honeycomb、ICS、Jelly Bean以及更高版本系统上的应用开发　　127\n第8章　使用布局与组件创建用户界面　　128\n8.1 　升级Crime类　　128\n8.2 　更新布局　　129\n8.3 　生成并使用组件　　131\n8.4 　深入探讨XML布局属性　　132\n8.4.1 　样式、主题及主题属性　　132\n8.4.2 　dp、sp以及屏幕像素密度　　133\n8.4.3 　Android开发设计原则　　134\n8.4.4 　布局参数　　135\n8.4.5 　边距与内边距　　135\n8.5 　使用图形布局工具　　136\n8.5.1 　添加新组件　　138\n8.5.2 　属性视图中编辑组件属性　　138\n8.5.3 　在框架视图中重新组织组件　　139\n8.5.4 　更新子组件的布局参数　　140\n8.5.5　　android:layout_weight属性的工作原理　　141\n8.5.6 　图形布局工具使用总结　　142\n8.5.7 　组件ID与多种布局　　142\n8.6 　挑战练习：日期格式化　　143\n第9章　使用ListFragment显示列表　　144\n9.1 　更新CriminalIntent应用的模型层　　145\n9.2 　创建ListFragment　　147\n9.3 　使用抽象activity托管fragment　　149\n9.3.1 　通用的fragment托管布局　　149\n9.3.2 　抽象activity类　　150\n9.4 　ListFragment、ListView及ArrayAdapter　　154\n9.4.1 　创建ArrayAdapter<T>类实例　　157\n9.4.2 　响应列表项的点击事件　　159\n9.5 　定制列表项　　160\n9.5.1 　创建列表项布局　　160\n9.5.2 　创建adapter子类　　162\n第10章　使用fragment argument　　165\n10.1 　从fragment中启动activity　　165\n10.1.1 　附加extra信息　　166\n10.1.2 　获取extra信息　　167\n10.1.3 　使用Crime数据更新CrimeFragment视图　　167\n10.1.4 　直接获取extra信息方式的缺点　　169\n10.2 　fragment argument　　169\n10.2.1 　附加argument给fragment　　169\n10.2.2 　获取argument　　170\n10.3 　重新加载显示列表项　　171\n10.4 　通过fragment获取返回结果　　172\n第11章　使用ViewPager　　174\n11.1 　创建CrimePagerActivity　　175\n11.1.1 　以代码的方式定义并产生布局　　176\n11.1.2 　ViewPager与Pager-Adapter　　177\n11.1.3 　整合配置并使用CrimePagerActivity　　178\n11.1.4 　FragmentStatePager-Adapter与Fragment-PagerAdapter　　180\n11.2 　深入学习：ViewPager的工作原理　　182\n第12章　对话框　　184\n12.1 　创建DialogFragment　　186\n12.1.1 　显示DialogFragment　　187\n12.1.2 　设置对话框的显示内容　　188\n12.2 　fragment间的数据传递　　190\n12.2.1 　传递数据给DatePicker-Fragment　　191\n12.2.2 　返回数据给CrimeFragment　　193\n12.3 　挑战练习：更多对话框　　198\n第13章　使用MediaPlayer播放音频　　199\n13.1 　添加资源　　200\n13.2 　定义HelloMoonFragment布局文件　　202\n13.3 　创建HelloMoonFragment　　203\n13.4 　使用布局fragment　　204\n13.5 　音频播放　　205\n13.6 　挑战练习：暂停音频播放　　208\n13.7 　深入学习：播放视频　　208\n13.8 　挑战练习：在HelloMoon应用中播放视频　　208\n第14章　fragment的保留　　209\n14.1 　保留fragment实例　　209\n14.2 　设备旋转与保留的fragment　　210\n14.3 　保留的fragment：一切都完美了吗　　212\n14.4 　设备旋转处理与onSaveInstance-State(Bundle)方法　　212\n14.5 　深入学习：fragment引入前的设备旋转问题　　214\n第15章　应用本地化　　215\n15.1 　本地化资源　　215\n15.2 　配置修饰符　　216\n15.2.1 　可用资源优先级排定　　217\n15.2.2 　多重配置修饰符　　218\n15.2.3 　寻找最匹配的资源　　219\n15.3 　更多资源使用原则及控制　　220\n15.3.1 　资源命名　　220\n15.3.2 　资源目录结构　　220\n15.4 　测试备选资源　　221\n第16章　操作栏　　223\n16.1 　选项菜单　　223\n16.1.1 　在XML文件中定义选项菜单　　225\n16.1.2 　创建选项菜单　　227\n16.1.3 　响应菜单项选择　　230\n16.2 　实现层级式导航　　232\n16.2.1 　启用应用图标的导航功能　　232\n16.2.2 　响应向上按钮　　233\n16.3 　可选菜单项　　236\n16.3.1 　创建可选菜单XML文件　　236\n16.3.2 　切换菜单项标题　　237\n16.3.3 　“还有个问题”　　238\n16.4 　挑战练习：用于列表的空视图　　239\n第17章　存储与加载本地文件　　241\n17.1 　CriminalIntent应用的数据存取　　241\n17.1.1 　保存crime数据到JSON文件　　242\n17.1.2 　从文件中读取crime数据　　246\n17.2 　挑战练习：使用外部存储　　248\n17.3 　深入学习：Android文件系统与Java I\/O　　248\n第18章　上下文菜单与上下文操作模式　　250\n18.1 　定义上下文菜单资源　　251\n18.2 　实施浮动上下文菜单　　251\n18.2.1 　创建上下文菜单　　251\n18.2.2 　为上下文菜单登记视图　　252\n18.2.3 　响应菜单项选择　　253\n18.3 　实施上下文操作模式　　254\n18.3.1 　实现列表视图的多选操作　　255\n18.3.2 　列表视图中的操作模式回调方法　　256\n18.3.3 　改变已激活视图的显示背景　　258\n18.3.4 　实现其他视图的上下文操作模式　　259\n18.4 　兼容性问题：回退还是复制　　260\n18.5 　挑战练习：在CrimeFragment视图中删除crime记录　　261\n18.6 　深入学习：ActionBarSherlock　　261\n18.7 　挑战练习：使用ActionBarSherlock　　263\n18.7.1 　CriminalIntent应用中ABS的基本整合　　264\n18.7.2 　ABS的深度整合　　264\n18.7.3 　ABS的完全整合　　265\n第19章　相机I：取景器　　266\n19.1 　创建Fragment布局　　267\n19.2 　创建CrimeCameraFragment　　269\n19.3 　创建CrimeCameraActivity　　269\n19.4 　使用相机API　　271\n19.4.1 　打开并释放相机　　271\n19.4.2 　SurfaceView、Surface-Holder与Surface　　272\n19.4.3 　确定预览界面大小　　276\n19.4.4 　启动CrimeCamera-Activity　　277\n19.5 　深入学习：以命令行的方式运行activity　　281\n第20章　相机 II：拍摄并处理照片　　283\n20.1 　拍摄照片　　283\n20.1.1 　实现相机回调方法　　285\n20.1.2 　设置图片尺寸大小　　288\n20.2 　返回数据给CrimeFragment　　288\n20.2.1 　以接收返回值的方式启动CrimeCameraActivity　　289\n20.2.2 　在CrimeCameraFragment中设置返回值　　290\n20.2.3 　在CrimeFragment中获取照片文件名　　290\n20.3 　更新模型层　　291\n20.3.1 　新增Photo类　　292\n20.3.2 　为Crime添加photo属性　　293\n20.3.3 　设置photo属性　　293\n20.4 　更新CrimeFragment的视图　　294\n20.4.1 　添加ImageView组件　　295\n20.4.2 　图像处理　　296\n20.5 　在DialogFragment中显示大图片　　300\n20.6 　挑战练习：Crime照片的显示方向　　303\n20.7 　挑战练习：删除照片　　303\n20.8 　深入学习：Android代码的废弃处理　　303\n第21章　隐式intent　　305\n21.1 　添加按钮组件　　306\n21.2 　添加嫌疑人信息至模型层　　307\n21.3 　使用格式化字符串　　308\n21.4 　使用隐式intent　　309\n21.4.1 　典型隐式intent的组成　　310\n21.4.2 　发送陋习报告　　311\n21.4.3 　获取联系人信息　　313\n21.4.4 　检查可以响应的activity　　316\n21.5 　挑战练习：又一个隐式intent　　317\n第22章　Master-Detail用户界面　　318\n22.1 　增加布局灵活性　　319\n22.1.1 　修改SingleFragment-Activity　　320\n22.1.2 　创建包含两个fragment容器的布局　　320\n22.1.3 　使用别名资源　　322\n22.2 　Activity：fragment的托管者　　323\n22.3 　深入学习：设备屏幕尺寸的确定　　331\n第23章　深入学习intent和任务　　333\n23.1 　创建NerdLauncher项目　　333\n23.2 　解析隐式intent　　334\n23.3 　在运行时创建显式intent　　337\n23.4 　任务与后退栈　　338\n23.5 　使用NerdLauncher应用作为设备主屏幕　　341\n23.6 　挑战练习：应用图标与任务重排　　341\n23.7 　进程与任务　　341\n第24章　样式与include标签的使用　　343\n24.1 　创建RemoteControl项目　　344\n24.1.1 　编码实现RemoteControl-Activity　　344\n24.1.2 　创建RemoteControl-Fragment　　345\n24.2 　使用样式消除重复代码　　348\n24.3 　完善布局定义　　350\n24.4 　深入学习：使用include与merge标签　　353\n24.5 　挑战练习：样式的继承　　354\n第25章　XML Drawable与9-Patches　　355\n25.1 　XML drawable　　356\n25.2 　state list drawable　　358\n25.3 　layer list与inset drawable　　360\n25.4 　使用9-patch图像　　362\n第26章　HTTP与后台任务　　368\n26.1 　创建PhotoGallery应用　　369\n26.2 　网络连接基本　　372\n26.3 　使用AsyncTask在后台线程上运行代码　　373\n26.4 　线程与主线程　　375\n26.5 　获取Flickr XML数据　　377\n26.6 　从AsyncTask回到主线程　　382\n26.7 　深入学习：再探AsyncTask　　385\n26.8 　挑战练习：分页　　386\n第27章　Looper、Handler与HandlerThread　　387\n27.1 　设置GridView以显示图片　　387\n27.2 　批量下载缩略图　　390\n27.3 　与主线程通信　　390\n27.4 　创建并启动后台线程　　391\n27.5 　Message与message Handler　　393\n27.5.1 　消息的剖析　　393\n27.5.2 　Handler的剖析　　393\n27.5.3 　使用handler　　395\n27.5.4 　传递handler　　397\n27.6 　深入学习：AsyncTask与Thread　　401\n27.7 　挑战练习：预加载以及缓存　　401\n第28章　搜索　　402\n28.1 　搜索Flickr网站　　402\n28.2 　搜索对话框　　404\n28.2.1 　创建搜索界面　　404\n28.2.2 　可搜索的activity　　406\n28.2.3 　物理搜索键　　408\n28.2.4 　搜索的工作原理　　409\n28.2.5 　启动模式与新的intent　　410\n28.2.6 　使用shared preferences实现轻量级数据存储　　412\n28.3 　在Android 3.0以后版本的设备上使用SearchView　　414\n28.4 　挑战练习　　416\n第29章　后台服务　　417\n29.1 　创建IntentService　　417\n29.2 　服务的作用　　419\n29.3 　查找最新返回结果　　421\n29.4 　使用AlarmManager延迟运行服务　　422\n29.4.1 　PendingIntent　　424\n29.4.2 　使用PendingIntent管理定时器　　424\n29.5 　控制定时器　　425\n29.6 　通知信息　　428\n29.7 　深入学习：服务细节内容　　429\n29.7.1 　服务的能与不能　　430\n29.7.2 　服务的生命周期　　430\n29.7.3 　non-sticky服务　　430\n29.7.4 　sticky服务　　431\n29.7.5 　绑定服务　　431\n第30章　broadcast Intent　　433\n30.1 　随设备重启而重启的定时器　　433\n30.1.1 　配置文件中的broadcast receiver　　434\n30.1.2 　如何使用receiver　　435\n30.2 　过滤前台通知消息　　436\n30.2.1 　发送broadcast intent　　437\n30.2.2 　动态broadcast receiver　　437\n30.2.3 　使用私有权限　　440\n30.2.4 　使用ordered broadcast接收结果　　442\n30.3 　receiver与长时运行任务　　446\n第31章　网页浏览　　447\n31.1 　最后一段Flickr数据　　447\n31.2 　简单方式：使用隐式intent　　448\n31.3 　较难方式：使用WebView　　449\n31.3.1 　使用WebChromeClient优化WebView的显示　　453\n31.3.2 　处理WebView的设备旋转问题　　455\n31.4 　深入学习：注入JavaScript对象　　456\n第32章　定制视图与触摸事件　　457\n32.1 　创建DragAndDraw项目　　457\n32.1.1 　创建DragAndDraw-Activity　　458\n32.1.2 　创建DragAndDraw-Fragment　　459\n32.2 　创建定制视图　　460\n32.3 　处理触摸事件　　462\n32.4 　onDraw(...)方法内的图形绘制　　465\n32.5 　挑战练习：设备旋转问题　　467\n第33章　跟踪设备的地理位置　　468\n33.1 　启动RunTracker项目　　468\n33.1.1 　创建RunActivity　　469\n33.1.2 　创建RunFragment　　470\n33.2 　地理位置与LocationManager　　472\n33.3 　接收定位数据更新broadcast　　474\n33.4 　使用定位数据刷新UI显示　　475\n33.5 　快速定位：最近一次地理位置　　479\n33.6 　在物理和虚拟设备上测试地理位置定位　　480\n第34章　使用SQLite本地数据库　　482\n34.1 　在数据库中存储旅程和地理位置信息　　482\n34.2 　查询数据库中的旅程列表　　488\n34.3 　使用CursorAdapter显示旅程列表　　490\n34.4 　创建新旅程　　493\n34.5 　管理现有旅程　　494\n34.6 　挑战练习：识别当前跟踪的旅程　　500\n第35章　使用Loader加载异步数据　　501\n35.1 　Loader与LoaderManager　　501\n35.2 　在RunTracker应用中使用Loader　　502\n35.3 　加载旅程列表　　503\n35.4 　加载单个旅程　　506\n35.5 　加载旅程的最近一次地理位置　　509\n第36章　使用地图　　511\n36.1 　添加Maps API给RunTracker应用　　511\n36.1.1 　使用物理设备测试地图　　511\n36.1.2 　安装使用Google Play services SDK　　511\n36.1.3 　获取Google Maps API key　　512\n36.1.4 　更新RunTracker应用的manifest配置文件　　512\n36.2 　在地图上显示用户的地理位置　　513\n36.3 　显示旅程路线　　516\n36.4 　为旅程添加开始和结束地图标注　　520\n36.5 　挑战练习：实时数据更新　　521\n第37章　编后语　　522\n37.1 　终极挑战　　522\n37.2 　关于我们　　523\n37.3 　致谢　　523",
      "pages": "523",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s28342615.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s28342615.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s28342615.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/25848404\/",
      "id": "25848404",
      "publisher": "人民邮电出版社",
      "isbn10": "7115346437",
      "isbn13": "9787115346438",
      "title": "Android编程权威指南",
      "url": "http:\/\/api.douban.com\/v2\/book\/25848404",
      "alt_title": "Android programming: the big nerd ranch guide",
      "author_intro": "作者简介：\nBill Phillips\nBig Nerd Ranch资深Android讲师、高级软件工程师。他与Brian Hardy合作，为Big Nerd Ranch开发了广受好评的5天Android训练营培训课程。Bill擅长透彻地理解事物的本质，并帮助其他人做到这一点。闲暇时间，Bill喜欢阅读和弹钢琴。\nBrian Hardy\nBig Nerd Ranch首席软件工程师、资深讲师。Big Nerd Ranch的Android、iOS和Ruby培训课程均由Brian设计开发。闲暇时间，Brian喜欢骑自行车和听音乐。",
      "summary": "权威、全面、实用、易懂，是本书最大的特色。本书根据美国大名鼎鼎的Big Nerd Ranch训练营的Android培训讲义编写而成，已经为微软、谷歌、Facebook等行业巨头培养了众多专业人才。作者巧妙地把Android开发所需的庞杂知识、行业实践、编程规范等融入一本书中，通过精心编排的应用示例、循序渐进的内容组织，以及循循善诱的语言，深入地讲解了Android开发的方方面面。如果学完一章之后仍然意犹未尽，那“挑战练习”一定会让你大呼过瘾。本书之所以能在移动应用开发类图书中脱颖而出，还在于它真的是在与读者“对话”。阅读本书就好像有一位私人导师在你身边随时为你答疑解惑。\n本书适合所有对Android及移动开发感兴趣的读者，需要一定的Java编程基础。",
      "series": {
        "id": "13846",
        "title": "The Big Nerd Ranch Guide"
      },
      "price": "CNY 99.00"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 194,
        "average": "7.5",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "李刚"
      ],
      "pubdate": "2011-6",
      "tags": [
        {
          "count": 176,
          "name": "android",
          "title": "android"
        },
        {
          "count": 48,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 46,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 43,
          "name": "android开发",
          "title": "android开发"
        },
        {
          "count": 37,
          "name": "疯狂android讲义",
          "title": "疯狂android讲义"
        },
        {
          "count": 32,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 20,
          "name": "程序开发",
          "title": "程序开发"
        },
        {
          "count": 15,
          "name": "实用",
          "title": "实用"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s6641009.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第1章 android应用与开发环境\t1\n1.1 android的发展和历史\t2\n1.1.1 android的发展和简介\t2\n1.1.2 android平台架构及特性\t3\n1.2 搭建android开发环境\t5\n1.2.1 下载和安装android sdk\t5\n1.2.2 安装eclipse和adt插件\t7\n1.3 android常用开发工具的用法\t10\n1.3.1 创建、删除和浏览avd\t10\n1.3.2 使用android模拟器\n（emulator）\t14\n1.3.3 使用ddms进行调试\t15\n1.3.4 android debug bridge（adb）\n的用法\t16\n1.3.5 使用dx编译android应用\t18\n1.3.6 使用android asset packaging\ntool（aapt）打包资源\t19\n1.3.7 使用mksdcard管理虚拟sd卡\t19\n1.4 开始第一个android应用\t20\n1.4.1 使用eclipse开发第一个\nandroid应用\t20\n1.4.2 通过adt运行android应用\t23\n1.5 android应用结构分析\t24\n1.5.1 创建一个android应用\t24\n1.5.2 自动生成的r.java\t26\n1.5.3 res目录说明\t27\n1.5.4 android应用的清单文件：\nandroidmanifest.xml\t28\n1.5.5 应用程序权限说明\t29\n1.6 android应用的基本组件\n介绍\t31\n1.6.1 activity和view\t31\n1.6.2 service\t32\n1.6.3 broadcastreceiver\t32\n1.6.4 contentprovider\t32\n1.6.5 intent和intentfilter\t33\n1.7 本章小结\t33\n第2章 android应用的界面编程\t35\n2.1 界面编程与视图（view）组件\t36\n2.1.1 视图组件与容器组件\t36\n2.1.2 使用xml布局文件控制ui\n界面\t40\n2.1.3 在代码中控制ui界面\t41\n2.1.4 使用xml布局文件和java\n代码混合控制ui界面\t42\n2.1.5 开发自定义view\t43\n2.2 布局管理器\t46\n2.2.1 线性布局\t47\n2.2.2 表格布局\t49\n2.2.3 帧布局\t52\n2.2.4 相对布局\t55\n2.2.5 绝对布局\t58\n2.3 基本界面组件\t60\n2.3.1 文本框（textview）与编辑框\n（edittext）的功能和用法\t60\n2.3.2 按钮（button）与图片按钮（imagebutton）组件的功能和\n用法\t66\n2.3.3 使用9patch图片作为按钮背景\t68\n2.3.4 单选按钮（radiobutton）和复选\n框（checkbox）介绍与应用\t69\n2.3.5 状态开关按钮（togglebutton）\n的功能与用法\t71\n2.3.6 时钟（analogclock和digital\nclock）的功能与功法\t73\n2.3.7 图像视图（imageview）的\n功能和用法\t75\n2.4 高级界面组件\t79\n2.4.1 自动完成文本框（autocompletetextview）的\n功能和用法\t79\n2.4.2 spinner的功能和用法\t80\n2.4.3 日期、时间选择器（datepicker\n和timepicker）的功能和用法\t83\n2.4.4 进度条（progressbar）的\n功能和用法\t85\n2.4.5 拖动条（seekbar）的功能和\n用法\t90\n2.4.6 星级评分条（ratingbar）的\n功能和用法\t91\n2.4.7 选项卡（tabhost）的功能和\n用法\t93\n2.4.8 滚动视图（scrollview）的\n功能和用法\t95\n2.4.9 列表视图（listview和\nlistactivity）\t95\n2.4.10 可展开的列表组件（expandablelistview）\t101\n2.4.11 网格视图（gridview）和\n图像切换器（imageswitcher）\n功能和用法\t104\n2.4.12 画廊视图（gallery）的功能和\n用法\t107\n2.5 对话框\t110\n2.5.1 使用alertdialog创建简单\n对话框\t110\n2.5.2 使用alertdialog创建列表\n对话框\t112\n2.5.3 使用alertdialog创建自定义\n对话框\t116\n2.5.4 使用popupwindow\t121\n2.5.5 使用datepickerdialog、timepickerdialog\t123\n2.5.6 使用progressdialog创建进度\n对话框\t125\n2.6 消息提示\t127\n2.6.1 使用toast显示提示信息框\t128\n2.6.2 notification的功能与用法\t129\n2.7 菜单\t132\n2.7.1 选项菜单和子菜单\n（submenu）\t132\n2.7.2 使用监听器来监听菜单事件\t136\n2.7.3 创建复选菜单项和单选菜单项\t137\n2.7.4 设置与菜单项关联的activity\t140\n2.7.5 上下文菜单\t141\n2.8 本章小结\t143\n第3章 事件处理\t144\n3.1 android的事件处理\t145\n3.2 基于监听的事件处理\t145\n3.2.1 事件监听的处理模型\t145\n3.2.2 事件和事件监听器\t148\n3.2.3 内部类作为事件监听器类\t151\n3.2.4 外部类作为事件监听器类\t152\n3.2.5 activity本身作为事件监听器\t153\n3.2.6 匿名内部类作为事件监听器类\t154\n3.2.7 直接绑定到标签\t155\n3.3 基于回调的事件处理\t156\n3.3.1 回调机制与监听机制\t156\n3.3.2 基于回调的事件传播\t158\n3.3.3 重写ontouchevent方法响应\n触摸屏事件\t160\n3.4 响应的系统设置的事件\t162\n3.4.1 configuration类简介\t162\n3.4.2 重写onconfigurationchanged\n响应系统设置更改\t164\n3.5 handler消息传递机制\t166\n3.5.1 handler类简介\t166\n3.5.2 handler使用案例\t167\n3.6 本章小结\t168\n第4章 深入理解activity\t169\n4.1 建立、配置和使用activity\t170\n4.1.1 建立activity\t170\n4.1.2 配置activity\t177\n4.1.3 启动、关闭activity\t179\n4.1.4 使用bundle在activity之间\n交换数据\t181\n4.1.5 启动其他activity并返回结果\t185\n4.2 activity的回调机制\t189\n4.3 activity的生命周期\t190\n4.3.1 activity的生命周期演示\t190\n4.3.2 activity与servlet的相似性与\n区别\t194\n4.4 本章小结\t195\n第5章 使用intent和intentfilter\n第5章 进行通信\t196\n5.1 intent对象详解\t197\n5.1.1 使用intent启动系统组件\t197\n5.2 intent的属性及intent-filter\n配置\t198\n5.2.1 component属性\t198\n5.2.2 action、category属性与\nintent-filter配置\t200\n5.2.3 指定action、category调用\n系统activity\t204\n5.2.4 data、type属性与intent-filter\n配置\t209\n5.2.5 extra属性\t211\n5.3 使用intent创建tab页面\t211\n5.4 本章小结\t212\n第6章 android应用的资源\t213\n6.1 资源的类型及存储方式\t214\n6.1.1 资源的类型以及存储方式\t214\n6.1.2 使用资源\t216\n6.2 使用字符串、颜色、\n尺寸资源\t217\n6.2.1 颜色值的定义\t217\n6.2.2 定义字符串、颜色、尺寸资源\n文件\t218\n6.2.3 使用字符串、颜色、\n尺寸资源\t219\n6.3 数组（array）资源\t222\n6.4 使用（drawable）资源\t225\n6.4.1 图片资源\t225\n6.4.2 statelistdrawable资源\t225\n6.4.3 layerdrawable资源\t227\n6.4.4 shapedrawable资源\t229\n6.4.5 clipdrawable资源\t231\n6.4.6 animationdrawable资源\t233\n6.5 使用原始xml资源\t236\n6.5.1 定义原始xml资源\t236\n6.5.2 使用原始xml文件\t237\n6.6 使用布局（layout）资源\t239\n6.7 使用菜单（menu）资源\t239\n6.7.1 定义菜单资源\t239\n6.7.2 使用菜单资源\t240\n6.8 样式（style）和主题（theme）\n资源\t243\n6.8.1 样式资源\t243\n6.8.2 主题资源\t245\n6.9 属性（attribute）资源\t247\n6.10 使用原始资源\t249\n6.11 国际化和资源自适应\t251\n6.11.1 java国际化的思路\t252\n6.11.2 java支持的语言和国家\t252\n6.11.3 完成程序国际化\t253\n6.11.4 为android应用提供国际化\n资源\t255\n6.11.5 国际化android应用\t256\n6.12 本章小结\t258\n第7章 图形与图像处理\t259\n7.1 使用简单图片\t260\n7.1.1 使用drawable对象\t260\n7.1.2 bitmap和bitmapfactory\t260\n7.2 绘图\t263\n7.2.1 android绘图基础：canvas、\npaint等\t263\n7.2.2 path类\t267\n7.2.3 绘制游戏动画\t270\n7.3 图形特效处理\t278\n7.3.1 使用matrix控制变换\t278\n7.3.2 使用drawbitmapmesh扭曲\n图像\t282\n7.3.3 使用shader填充图形\t285\n7.4 逐帧（frame）动画\t288\n7.4.1 animationdrawable与逐帧\n动画\t288\n7.5 补间（tween）动画\t292\n7.5.1 tween动画与interpolator\t292\n7.5.2 位置、大小、旋转度、透明度\n改变的补间动画\t293\n7.5.3 自定义补间动画\t298\n7.6 使用surfaceview实现动画\t300\n7.6.1 surfaceview的绘图机制\t301\n7.7 本章小结\t305\n第8章 android的数据存储和io\t306\n8.1 使用sharedpreferences\t307\n8.1.1 sharedpreferences与editor\n简介\t307\n8.1.2 sharedpreferences的存储\n位置和格式\t308\n8.1.3 读、写其他应用shared\npreferences\t310\n8.2 file存储\t311\n8.2.1 openfileoutput和open\nfileinput\t312\n8.2.2 读写sd卡上的文件\t314\n8.3 sqlite数据库\t321\n8.3.1 简介sqlitedatabase\t321\n8.3.2 创建数据库和表\t323\n8.3.3 使用sql语句操作sqlite\n数据库\t323\n8.3.4 使用sqlite3工具\t325\n8.3.5 使用特定方法操作sqlite\n数据库\t327\n8.3.6 事务\t329\n8.3.7 sqliteopenhelper类\t330\n8.4 手势（gesture）\t335\n8.4.1 手势检测\t335\n8.4.2 增加手势\t342\n8.4.3 识别用户的手势\t346\n8.5 自动朗读（tts）\t347\n8.6 本章小结\t350\n第9章 使用contentprovider实现\n第9章 数据共享\t351\n9.1 数据共享标准：\ncontentprovider简介\t352\n9.1.1 contentprovider简介\t352\n9.1.2 uri简介\t353\n9.1.3 使用contentresolver操作\n数据\t354\n9.2 操作系统的contentprovider\t355\n9.2.1 使用contentprovider管理\n联系人\t355\n9.2.2 使用contentprovider管理\n多媒体内容\t360\n9.3 实现contentprovider\t364\n9.3.1 创建contentprovider的步骤\t364\n9.4 监听contentprovider的数据\n改变\t370\n9.4.1 contentobserver简介\t370\n9.5 本章小结\t372\n第10章 service与broadcast\n第10章 receiver\t373\n10.1 service简介\t374\n10.1.1 创建、配置service\t374\n10.1.2 启动和停止service\t376\n10.1.3 绑定本地service并与之\n通信\t377\n10.1.4 service的生命周期\t381\n10.2 跨进程调用service\n（aidl服务）\t382\n10.2.1 aidl服务简介\t382\n10.2.2 创建aidl文件\t383\n10.2.3 将接口暴露给客户端\t383\n10.2.4 客户端访问aidlservice\t385\n10.3 电话管理器\n（telephonymanager）\t393\n10.4 短信管理器（smsmanager）\t400\n10.5 音频管理器\n（audiomanager）\t404\n10.5.1 audiomanager简介\t404\n10.6 振动器（vibrator）\t407\n10.6.1 vibrator简介\t407\n10.6.2 使用vibrator控制手机振动\t407\n10.7 手机闹钟服务\n（alarmmanager）\t408\n10.7.1 alarmmanager简介\t408\n10.7.2 设置闹钟\t409\n10.8 接收广播消息\t413\n10.8.1 broadcastreceiver简介\t413\n10.8.2 发送广播\t414\n10.8.3 有序广播\t416\n10.9 接收系统广播消息\t424\n10.10 本章小结\t427\n第11章 多媒体应用开发\t428\n11.1 音频和视频的播放\t429\n11.1.1 使用mediaplayer播放音频\t429\n11.1.2 使用soundpool播放音效\t432\n11.1.3 使用videoview播放视频\t435\n11.1.4 使用mediaplayer和\nsurfaceview播放视频\t436\n11.2 使用mediarecorder录制\n音频\t439\n11.3 控制摄像头拍照\t442\n11.3.1 通过camera进行拍照\t442\n11.3.2 录制视频短片\t446\n11.4 本章小结\t450\n第12章 opengl与3d应用开发\t451\n12.1 3d图像与3d开发的\n基本知识\t452\n12.2 opengl和opengl es简介\t453\n12.3 绘制2d图形\t454\n12.3.1 在android应用中使用\nopengl es\t454\n12.3.2 绘制平面上的多边形\t457\n12.3.3 旋转\t463\n12.4 绘制3d图形\t465\n12.4.1 构建3d图形\t465\n12.4.2 应用纹理贴图\t469\n12.5 本章小结\t475\n第13章 android的网络应用\t476\n13.1 基于tcp协议的网络通信\t477\n13.1.1 tcp协议基础\t477\n13.1.2 使用serversocket创建\ntcp服务器端\t478\n13.1.3 使用socket进行通信\t479\n13.1.4 加入多线程\t483\n13.2 使用url访问网络资源\t488\n13.2.1 使用url读取网络资源\t489\n13.2.2 使用urlconnection\n提交请求\t490\n13.3 使用http访问网络\t496\n13.3.1 使用httpurlconnection\t496\n13.3.2 使用apache httpclient\t501\n13.4 使用webview视图\n显示网页\t505\n13.4.1 使用webview浏览网页\t506\n13.4.2 使用webview加载html\n代码\t507\n13.5 使用web service进行\n网络编程\t508\n13.5.1 web service简介\t509\n13.5.2 web service平台概述\t510\n13.5.3 使用android应用调用\nweb service\t512\n13.6 本章小结\t524\n第14章 管理android手机桌面\t525\n14.1 管理手机桌面\t526\n14.1.1 删除桌面组件\t526\n14.1.2 添加桌面组件\t526\n14.2 改变手机壁纸\t527\n14.2.1 开发实时壁纸\n（live wallpapers）\t528\n14.3 桌面快捷方式\t532\n14.3.1 在桌面上创建快捷方式\t532\n14.3.2 向launcher添加快捷方式\t534\n14.4 管理桌面小控件\t535\n14.5 实时文件夹（livefolder）\t539\n14.5.1 使用实时文件夹显示\ncontentprovider的数据\t540\n14.6 本章小结\t545\n第15章 传感器应用开发\t546\n15.1 利用android的传感器\t547\n15.1.1 开发传感器应用\t547\n15.1.2 下载和安装sensorsimulator\t549\n15.1.3 利用sensorsimulator开发\n传感器应用\t551\n15.2 android的常用传感器\t553\n15.2.1 方向传感器orientation\t553\n15.2.2 磁场传感器magnetic field\t554\n15.2.3 温度传感器temperature\t554\n15.2.4 光传感器light\t554\n15.2.5 压力传感器pressure\t554\n15.3 传感器应用案例\t557\n15.4 本章小结\t564\n第16章 gps应用开发\t565\n16.1 支持gps的核心api\t566\n16.2 获取locationprovider\t568\n16.2.1 获取所有可用的\nlocationprovider\t568\n16.2.2 通过名称获得指定\nlocationprovider\t569\n16.2.3 根据criteria获得\nlocationprovider\t569\n16.3 获取定位信息\t570\n16.3.1 通过模拟器发送gps信息\t571\n16.3.2 获取定位数据\t571\n16.4 临近警告\t573\n16.5 本章小结\t575\n第17章 使用google map服务\t576\n17.1 调用google map的准备\t577\n17.1.1 获取map api key\t577\n17.1.2 创建支持google map api的\navd\t580\n17.2 根据gps信息在地图上\n定位\t582\n17.3 gps导航\t588\n17.4 根据地址定位\t590\n17.4.1 地址解析与反向地址解析\t590\n17.4.2 根据地址定位\t595\n17.5 本章小结\t597\n第18章 疯狂连连看\t598\n18.1 连连看游戏简介\t599\n18.2 开发游戏界面\t600\n18.2.1 开发界面布局\t600\n18.2.2 开发游戏界面组件\t601\n18.2.3 处理方块之间的连接线\t605\n18.3 连连看的状态数据模型\t606\n18.3.1 定义数据模型\t606\n18.3.2 初始化游戏状态数据\t606\n18.4 加载界面的图片\t610\n18.5 实现游戏activity\t612\n18.6 实现游戏逻辑\t618\n18.6.1 定义gameservice组件接口\t618\n18.6.2 实现gameservice组件\t619\n18.6.3 获取触碰点的方块\t620\n18.6.4 判断两个方块是否可以相连\t622\n18.6.5 定义获取通道的工具方法\t623\n18.6.6 没有转折点的横向连接\t625\n18.6.7 没有转折点的纵向连接\t626\n18.6.8 一个转折点的连接\t626\n18.6.9 两个转折点的连接\t629\n18.6.10 找出最短距离\t636\n18.7 本章小结\t638\n第19章 电子拍卖系统\t639\n19.1 系统功能简介和架构设计\t640\n19.1.1 系统功能简介\t640\n19.1.2 系统架构设计\t641\n19.2 json简介\t643\n19.2.1 使用json语法创建对象\t643\n19.2.2 使用json语法创建数组\t644\n19.2.3 java的json支持\t645\n19.3 发送请求的工具类\t646\n19.4 用户登录\t647\n19.4.1 处理登录的servlet\t648\n19.4.2 用户登录\t649\n19.5 查看流拍物品\t655\n19.5.1 查看流拍物品的servlet\t655\n19.5.2 查看流拍物品\t656\n19.6 管理物品种类\t661\n19.6.1 浏览物品种类的servlet\t661\n19.6.2 查看物品种类\t662\n19.6.3 添加种类的servlet\t666\n19.6.4 添加物品种类\t666\n19.7 管理拍卖物品\t668\n19.7.1 查看自己的拍卖物品的\nservlet\t668\n19.7.2 查看自己的拍卖物品\t669\n19.7.3 添加拍卖物品的servlet\t672\n19.7.4 添加拍卖物品\t673\n19.8 参与竞拍\t678\n19.8.1 选择物品种类\t678\n19.8.2 根据种类浏览物品的servlet\t680\n19.8.3 根据种类浏览物品\t680\n19.8.4 参与竞价的servlet\t682\n19.8.5 参与竞价\t683\n19.9 权限控制\t688\n19.10 本章小结\t689",
      "pages": "689",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s6641009.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s6641009.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s6641009.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6515839\/",
      "id": "6515839",
      "publisher": "电子工业出版社",
      "isbn10": "7121135760",
      "isbn13": "9787121135767",
      "title": "疯狂Android讲义",
      "url": "http:\/\/api.douban.com\/v2\/book\/6515839",
      "alt_title": "",
      "author_intro": "作者从事过近7年的J2EE应用开发，担任过LITEON公司的J2EE技术主管，负责该公司的企业信息平台的架构设计，担任过广东龙泉科技有限公司的J2EE技术培训导师，目前在新东方IT培训中心担任J2EE培训讲师。培训的学生已在华为、从兴电子、瑞达通信、中企动力等公司就职，在珠三角的J2EE行业极具影响力。",
      "summary": "计算机便携化是未来的发展趋势，而Android作为最受欢迎的手机、平\n板电脑操作之一，其发展的上升势头是势不可当的。而Android应用选择了\nJava作为其开发语言，对于Java来说也是一次极好的机会。\n    李刚编著的《疯狂Android讲义》全面地介绍了Android应用开发的相\n关知识，全书内容覆盖了Android用户界面编程、Android四大组件、\nAndroid资源访问、图形\/图像处理、事件处理机制、Android输入\/输出处\n理、音频\/视频多媒体应用开发、OpenGL与3D应用开发、网络通信编程、\nAndroid平台的Web Service、传感器应用开发、GPS应用开发、Google Map\n服务等。\n    《疯狂Android讲义》并不局限于介绍Android编程的各种理论知识，\n而是从“项目驱动”的角度来讲授理论，全书一共包括近百个实例，这些\n示范性的实例既可帮读者更好地理解各知识点在实际开发中的应用，也可\n供读者在实际开发时作为参考、拿来就用。本书最后还提供了两个实用的\n案例：疯狂连连看和电子拍卖系统Android客户端，具有极高的参考价值。\n本书提供了配套的答疑网站，如果读者在阅读本书时遇到了技术问题，可\n以登录疯狂Java联盟（http:\/\/www.crazyit.org）发帖，笔者将会及时予\n以解答。\n    本书适合于有一定Java编程基础的读者。如果读者已熟练掌握Java编\n程语法并具有一定图形界面编程经验，阅读本书将十分合适。否则，阅读\n本书之前建议先认真阅读疯狂Java体系之《疯狂Java讲义》。",
      "price": "89.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 74,
        "average": "8.4",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "丰生强"
      ],
      "pubdate": "2013-2",
      "tags": [
        {
          "count": 180,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 108,
          "name": "安全",
          "title": "安全"
        },
        {
          "count": 80,
          "name": "逆向工程",
          "title": "逆向工程"
        },
        {
          "count": 33,
          "name": "移动开发",
          "title": "移动开发"
        },
        {
          "count": 22,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 21,
          "name": "android",
          "title": "android"
        },
        {
          "count": 18,
          "name": "计算机安全",
          "title": "计算机安全"
        },
        {
          "count": 14,
          "name": "编程",
          "title": "编程"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s24870013.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "第1章 　Android程序分析环境搭建　　1\n1.1 　Windows分析环境搭建　　1\n1.1.1 　安装JDK　　1\n1.1.2 　安装Android SDK　　3\n1.1.3 　安装Android NDK　　5\n1.1.4 　Eclipse集成开发环境　　6\n1.1.5 　安装CDT、ADT插件　　6\n1.1.6 　创建Android Virtual Device　　8\n1.1.7 　使用到的工具　　9\n1.2 　Linux分析环境搭建　　9\n1.2.1 　本书的Linux环境　　9\n1.2.2 　安装JDK　　9\n1.2.3 　在Ubuntu上安装Android SDK　　10\n1.2.4 　在Ubuntu上安装Android NDK　　11\n1.2.5 　在Ubuntu上安装Eclipse集成开发环境　　12\n1.2.6 　在Ubuntu上安装CDT、ADT插件　　13\n1.2.7 　创建Android Virtual Device　　13\n1.2.8 　使用到的工具　　15\n1.3 　本章小结　　15\n第2章 　如何分析Android程序　　16\n2.1 　编写第一个Android程序　　16\n2.1.1 　使用Eclipse创建Android工程　　16\n2.1.2 　编译生成APK文件　　19\n2.2 　破解第一个程序　　20\n2.2.1 　如何动手？　　20\n2.2.2 　反编译APK文件　　20\n2.2.3 　分析APK文件　　21\n2.2.4 　修改Smali文件代码　　26\n2.2.5 　重新编译APK文件并签名　　26\n2.2.6 　安装测试　　27\n2.3 　本章小结　　28\n第3章 　进入Android Dalvik虚拟机　　29\n3.1 　Dalvik虚拟机的特点——掌握Android程序的运行原理　　29\n3.1.1 　Dalvik虚拟机概述　　29\n3.1.2 　Dalvik虚拟机与Java虚拟机的区别　　29\n3.1.3 　Dalvik虚拟机是如何执行程序的　　34\n3.1.4 　关于Dalvik虚拟机JIT（即时编译）　　36\n3.2 　Dalvik汇编语言基础为分析Android程序做准备　　37\n3.2.1 　Dalvik指令格式　　37\n3.2.2 　DEX文件反汇编工具　　39\n3.2.3 　了解Dalvik寄存器　　40\n3.2.4 　两种不同的寄存器表示方法——v命名法与p命名法　　42\n3.2.5 　Dalvik字节码的类型、方法与字段表示方法　　43\n3.3 　Dalvik指令集　　44\n3.3.1 　指令特点　　45\n3.3.2 　空操作指令　　45\n3.3.3 　数据操作指令　　46\n3.3.4 　返回指令　　46\n3.3.5 　数据定义指令　　46\n3.3.6 　锁指令　　47\n3.3.7 　实例操作指令　　47\n3.3.8 　数组操作指令　　48\n3.3.9 　异常指令　　48\n3.3.10 　跳转指令　　48\n3.3.11 　比较指令　　49\n3.3.12 　字段操作指令　　50\n3.3.13 　方法调用指令　　50\n3.3.14 　数据转换指令　　51\n3.3.15 　数据运算指令　　51\n3.4 　Dalvik指令集练习——写一个Dalvik版的Hello World　　52\n3.4.1 　编写smali文件　　52\n3.4.2 　编译smali文件　　54\n3.4.3 　测试运行　　54\n3.5 　本章小结　　55\n第4章 　Android可执行文件　　56\n4.1 　Android程序的生成步骤　　56\n4.2 　Android程序的安装流程　　59\n4.3 　dex文件格式　　66\n4.3.1 　dex文件中的数据结构　　66\n4.3.2 　dex文件整体结构　　68\n4.3.3 　dex文件结构分析　　71\n4.4 　odex文件格式　　80\n4.4.1 　如何生成odex文件　　80\n4.4.2 　odex文件整体结构　　81\n4.4.3 　odex文件结构分析　　83\n4.5 　dex文件的验证与优化工具dexopt的工作过程　　88\n4.6 　Android应用程序另类破解方法　　91\n4.7 　本章小结　　93\n第5章 　静态分析Android程序　　94\n5.1 　什么是静态分析　　94\n5.2 　快速定位Android程序的关键代码　　94\n5.2.1 　反编译apk程序　　94\n5.2.2 　程序的主Activity　　95\n5.2.3 　需重点关注的Application类　　95\n5.2.4 　如何定位关键代码——六种方法　　96\n5.3 　smali文件格式　　97\n5.4 　Android程序中的类　　100\n5.4.1 　内部类　　100\n5.4.2 　监听器　　102\n5.4.3 　注解类　　105\n5.4.4 　自动生成的类　　108\n5.5 　阅读反编译的smali代码　　110\n5.5.1 　循环语句　　110\n5.5.2 　switch分支语句　　115\n5.5.3 　try\/catch语句　　121\n5.6 　使用IDA Pro静态分析Android程序　　127\n5.6.1 　IDA Pro对Android的支持　　127\n5.6.2 　如何操作　　128\n5.6.3 　定位关键代码——使用IDA Pro进行破解的实例　　132\n5.7 　恶意软件分析工具包——Androguard　　135\n5.7.1 　Androguard的安装与配置　　135\n5.7.2 　Androguard的使用方法　　137\n5.7.3 　使用Androguard配合Gephi进行静态分析　　144\n5.7.4 　使用androlyze.py进行静态分析　　148\n5.8 　其他静态分析工具　　152\n5.9 　阅读反编译的Java代码　　152\n5.9.1 　使用dex2jar生成jar文件　　152\n5.9.2 　使用jd-gui查看jar文件的源码　　153\n5.10 　集成分析环境——santoku　　154\n5.11 　本章小结　　156\n第6章 　基于Android的ARM汇编语言基础——逆向原生！　　157\n6.1 　Android与ARM处理器　　157\n6.1.1 　ARM处理器架构概述　　157\n6.1.2 　ARM处理器家族　　158\n6.1.3 　Android支持的处理器架构　　159\n6.2 　原生程序与ARM汇编语言——逆向你的原生Hello ARM　　160\n6.2.1 　原生程序逆向初步　　160\n6.2.2 　原生程序的生成过程　　162\n6.2.3 　必须了解的ARM知识　　164\n6.3 　ARM汇编语言程序结构　　166\n6.3.1 　完整的ARM汇编程序　　166\n6.3.2 　处理器架构定义　　167\n6.3.3 　段定义　　168\n6.3.4 　注释与标号　　169\n6.3.5 　汇编器指令　　169\n6.3.6 　子程序与参数传递　　170\n6.4 　ARM处理器寻址方式　　170\n6.4.1 　立即寻址　　170\n6.4.2 　寄存器寻址　　171\n6.4.3 　寄存器移位寻址　　171\n6.4.4 　寄存器间接寻址　　171\n6.4.5 　基址寻址　　171\n6.4.6 　多寄存器寻址　　171\n6.4.7 　堆栈寻址　　172\n6.4.8 　块拷贝寻址　　172\n6.4.9 　相对寻址　　172\n6.5 　ARM与Thumb指令集　　173\n6.5.1 　指令格式　　173\n6.5.2 　跳转指令　　174\n6.5.3 　存储器访问指令　　175\n6.5.4 　数据处理指令　　177\n6.5.5 　其他指令　　184\n6.6 　用于多媒体编程与浮点计算的NEON与VFP指令集　　185\n6.7 　本章小结　　186\n第7章 　Android NDK程序逆向分析　　187\n7.1 　Android中的原生程序　　187\n7.1.1 　编写一个例子程序　　187\n7.1.2 　如何编译原生程序　　188\n7.2 　原生程序的启动流程分析　　194\n7.2.1 　原生程序的入口函数　　194\n7.2.2 　main函数究竟何时被执行　　198\n7.3 　原生文件格式　　199\n7.4 　原生C程序逆向分析　　200\n7.4.1 　原生程序的分析方法　　200\n7.4.2 　for循环语句反汇编代码的特点　　204\n7.4.3 　if...else分支语句反汇编代码的特点　　208\n7.4.4 　while循环语句反汇编代码的特点　　211\n7.4.5 　switch分支语句反汇编代码的特点　　215\n7.4.6 　原生程序的编译时优化　　218\n7.5 　原生C++程序逆向分析　　222\n7.5.1 　C++类的逆向　　222\n7.5.2 　Android NDK对C++特性的支持　　225\n7.5.3 　静态链接STL与动态链接STL的代码区别　　227\n7.6 　Android NDK JNI API逆向分析　　232\n7.6.1 　Android NDK提供了哪些函数　　232\n7.6.2 　如何静态分析Android NDK程序　　233\n7.7 　本章小结　　235\n第8章 　动态调试Android程序　　236\n8.1 　Android动态调试支持　　236\n8.2 　DDMS的使用　　237\n8.2.1 　如何启动DDMS　　237\n8.2.2 　使用LogCat查看调试信息　　238\n8.3 　定位关键代码　　240\n8.3.1 　代码注入法——让程序自己吐出注册码　　240\n8.3.2 　栈跟踪法　　244\n8.3.3 　Method Profiling　　247\n8.4 　使用AndBug调试Android程序　　250\n8.4.1 　安装AndBug　　251\n8.4.2 　使用AndBug　　251\n8.5 　使用IDA Pro调试Android原生程序　　254\n8.5.1 　调试Android原生程序　　255\n8.5.2 　调试Android原生动态链接库　　256\n8.6 　使用gdb调试Android原生程序　　260\n8.6.1 　编译gdb与gdbserver　　260\n8.6.2 　如何调试　　262\n8.7 　本章小结　　264\n第9章 　Android软件的破解技术　　265\n9.1 　试用版软件　　265\n9.1.1 　试用版软件的种类　　265\n9.1.2 　实例破解——针对授权KEY方式的破解　　265\n9.2 　序列号保护　　271\n9.3 　网络验证　　272\n9.3.1 　网络验证保护思路　　272\n9.3.2 　实例破解——针对网络验证方式的破解　　273\n9.4 　In-app Billing（应用内付费）　　277\n9.4.1 　In-app Billing原理　　277\n9.4.2 　In-app Billing破解方法　　280\n9.5 　Google Play License保护　　281\n9.5.1 　Google Play License保护机制　　281\n9.5.2 　实例破解——针对Google Play License方式的破解　　283\n9.6 　重启验证　　284\n9.6.1 　重启验证保护思路　　285\n9.6.2 　实例破解——针对重启验证方式的破解　　285\n9.7 　如何破解其他类型的Android程序　　296\n9.7.1 　Mono for Android开发的程序及其破解方法　　296\n9.7.2 　Qt for Android开发的程序及其破解方法　　301\n9.8 　本章小结　　309\n第10章 　Android程序的反破解技术　　310\n10.1 　对抗反编译　　310\n10.1.1 　如何对抗反编译工具　　310\n10.1.2 　对抗dex2jar　　311\n10.2 　对抗静态分析　　312\n10.2.1 　代码混淆技术　　312\n10.2.2 　NDK保护　　315\n10.2.3 　外壳保护　　316\n10.3 　对抗动态调试　　316\n10.3.1 　检测调试器　　316\n10.3.2 　检测模拟器　　317\n10.4 　防止重编译　　318\n10.4.1 　检查签名　　318\n10.4.2 　校验保护　　319\n10.5 　本章小结　　320\n第11章 　Android系统攻击与防范　　321\n11.1 　Android系统安全概述　　321\n11.2 　手机ROOT带来的危害　　321\n11.2.1 　为什么要ROOT手机　　321\n11.2.2 　手机ROOT后带来的安全隐患　　322\n11.2.3 　Android手机ROOT原理　　322\n11.3 　Android权限攻击　　329\n11.3.1 　Android权限检查机制　　329\n11.3.2 　串谋权限攻击　　333\n11.3.3 　权限攻击检测　　336\n11.4 　Android组件安全　　339\n11.4.1 　Activity安全及Activity劫持演示　　340\n11.4.2 　Broadcast Receiver 安全　　343\n11.4.3 　Service安全　　345\n11.4.4 　Content Provider安全　　346\n11.5 　数据安全　　347\n11.5.1 　外部存储安全　　347\n11.5.2 　内部存储安全　　348\n11.5.3 　数据通信安全　　350\n11.6 　ROM安全　　351\n11.6.1 　ROM的种类　　352\n11.6.2 　ROM的定制过程　　352\n11.6.3 　定制ROM的安全隐患　　359\n11.6.4 　如何防范　　360\n11.7 　本章小结　　361\n第12章 　DroidKongFu变种病毒实例分析　　362\n12.1 　DroidKongFu病毒介绍　　362\n12.2 　配置病毒分析环境　　363\n12.3 　病毒执行状态分析　　364\n12.3.1 　使用APIMonitor初步分析　　365\n12.3.2 　使用DroidBox动态分析　　369\n12.3.3 　其他动态分析工具　　373\n12.4 　病毒代码逆向分析　　376\n12.4.1 　Java层启动代码分析　　376\n12.4.2 　Native层启动代码分析　　381\n12.4.3 　Native层病毒核心分析　　393\n12.5 　DroidKongFu病毒框架总结　　404\n12.6 　病毒防治　　406\n12.7 　本章小结　　406",
      "pages": "407",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s24870013.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s24870013.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s24870013.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/20556210\/",
      "id": "20556210",
      "publisher": "人民邮电出版社",
      "isbn10": "7115308152",
      "isbn13": "9787115308153",
      "title": "Android软件安全与逆向分析",
      "url": "http:\/\/api.douban.com\/v2\/book\/20556210",
      "alt_title": "",
      "author_intro": "丰生强（网名非虫）\nAndroid软件安全专家。看雪论坛Android安全版版主；安卓巴士开发交流版版主。\n对Android软件与系统安全有狂热的爱好和独到的见解，对Android系统的全部源代码进行过深入地研究和分析。逆向分析实战经验丰富。\n在国内信息安全杂志上发表过多篇有价值的软件安全文章，目前就职于国内某Android开发企业，常年混迹于看雪论坛（ID非虫）。\n作者邮箱：fei_cong@hotmail.com\n愿与国内安全爱好者共同交流与探讨安全技术。",
      "summary": "本书由浅入深、循序渐进地讲解了Android 系统的软件安全、逆向分析与加密解密技术。包括Android软件逆向分析和系统安全方面的必备知识及概念、如何静态分析Android 软件、如何动态调试Android 软件、Android 软件的破解与反破解技术的探讨，以及对典型Android 病毒的全面剖析。\n本书适合所有Android 应用开发者、Android 系统开发工程师、Android 系统安全工作者阅读学习。",
      "series": {
        "id": "13000",
        "title": "图灵原创"
      },
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 57,
        "average": "7.0",
        "min": 0
      },
      "subtitle": "系统卷",
      "author": [
        "杨丰盛"
      ],
      "pubdate": "2011-6",
      "tags": [
        {
          "count": 151,
          "name": "android",
          "title": "android"
        },
        {
          "count": 40,
          "name": "技术内幕",
          "title": "技术内幕"
        },
        {
          "count": 38,
          "name": "源码分析",
          "title": "源码分析"
        },
        {
          "count": 34,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 26,
          "name": "移动平台",
          "title": "移动平台"
        },
        {
          "count": 26,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 25,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 21,
          "name": "计算机科学",
          "title": "计算机科学"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s6379378.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "前言\n第1章  准备工作 \/1\n1.1  深入认识Android \/2\n1.1.1  Android的系统构架 \/2\n1.1.2  Android的初始化流程 \/5\n1.1.3  各个层次之间的相互关系 \/8\n1.1.4  Android系统开发（移植）和应用开发 \/11\n1.2  获取和编译Android的源码 \/13\n1.2.1  环境配置 \/13\n1.2.2  获取Android源码 \/14\n1.2.3  编译Android的源码及其工具包 \/16\n1.2.4  运行Android系统 \/21\n1.3  开发环境搭建 \/23\n1.3.1  应用开发环境搭建 \/23\n1.3.2  源码开发环境搭建 \/26\n1.4  Android源码结构 \/32\n1.5  小结 \/33\n第2章  Android的内核机制和结构剖析 \/34\n2.1  Linux与Android的关系 \/35\n2.1.1  为什么会选择Linux \/35\n2.1.2  Android不是Linux \/35\n2.2  Android对Linux内核的改动 \/37\n2.2.1  Goldfish \/37\n2.2.2  YAFFS2 \/38\n2.2.3  蓝牙 \/39\n2.2.4  调度器（Scheduler）\/39\n2.2.5  Android新增的驱动 \/40\n2.2.6  电源管理 \/41\n2.2.7  杂项 \/41\n2.3  Android对Linux内核的增强 \/42\n2.3.1  Alarm（硬件时钟）\/43\n2.3.2  Ashmem（匿名内存共享）\/46\n2.3.3  Low Memory Killer（低内存管理）\/52\n2.3.4  Logger（日志设备）\/56\n2.3.5  Android PMEM \/65\n2.3.6  switch \/79\n2.3.7  Timed GPIO \/88\n2.3.8  Android Ram Console \/94\n2.4  小结 \/99\n第3章  Android的IPC机制--Binder \/100\n3.1  Binder概述 \/101\n3.1.1  为什么选择Binder \/101\n3.1.2  初识Binder \/102\n3.2  Binder驱动的原理和实现 \/102\n3.2.1  Binder驱动的原理 \/102\n3.2.2  Binder驱动的实现 \/103\n3.3  Binder的构架与实现 \/132\n3.3.1  Binder的系统构架 \/132\n3.3.2  Binder的机制和原理 \/133\n3.4  小结 \/150\n第4章  电源管理 \/151\n4.1  电源管理概述 \/152\n4.2  电源管理结构 \/152\n4.3  Android的电源管理机制 \/153\n4.4  Android电源管理机制的实现 \/154\n4.5  小结 \/187\n第5章  驱动的工作原理及实现机制 \/188\n5.1  显示驱动（Framebuffer）\/189\n5.1.1  Framebuffer的工作原理 \/189\n5.1.2  Framebuffer的构架 \/190\n5.1.3  Framebuffer驱动的实现机制 \/190\n5.2  视频驱动（V4L和V4L2）\/201\n5.2.1  V4L2介绍 \/201\n5.2.2  V4L2的原理和构架 \/201\n5.2.3  V4L2的实现 \/202\n5.3  音频驱动（OSS和ALSA）\/208\n5.3.1  OSS与ALSA介绍 \/208\n5.3.2  OSS的构架与实现 \/209\n5.3.3  ALSA的构架与实现 \/213\n5.4  MTD驱动 \/214\n5.4.1  MTD驱动的功能 \/214\n5.4.2  MTD驱动的构架 \/215\n5.4.3  MTD驱动的原理及实现 \/215\n5.5  Event输入设备驱动 \/223\n5.5.1  Input的系统构架 \/223\n5.5.2  Event输入驱动的构架 \/224\n5.5.3  Event输入驱动的原理 \/224\n5.5.4  Event输入驱动的实现 \/225\n5.6  蓝牙驱动（Bluetooth）\/235\n5.6.1  Bluetooth驱动的构架 \/235\n5.6.2  BlueZ的原理及实现 \/237\n5.7  WLAN驱动（Wi-Fi）\/244\n5.7.1  WLAN构架 \/244\n5.7.2  Wi-Fi驱动的实现原理 \/245\n5.8  小结 \/245\n第6章  原生库的原理及实现 \/246\n6.1  系统C库（Bionic Libc）\/247\n6.1.1  Bionic Libc功能概述 \/247\n6.1.2  Bionic Libc实现原理 \/248\n6.2  功能库 \/258\n6.2.1  WebKit构架与实现 \/258\n6.2.2  多媒体框架与实现 \/275\n6.2.3  Android SQLite框架及原理 \/285\n6.3  扩展库 \/289\n6.3.1  Skia底层库分析 \/289\n6.3.2  OpenGL底层库分析 \/299\n6.3.3  Android-OpenSSL实现及运用 \/306\n6.3.4  FreeType及Font Engine Manager \/317\n6.3.5  FreeType结构体系和渲染流程 \/317\n6.4  原生服务 \/328\n6.4.1  AudioFlinger实现 \/328\n6.4.2  SurfaceFlinger实现 \/341\n6.5  小结 \/353\n第7章  硬件抽象层的原理与实现 \/354\n7.1  硬件抽象层的实现原理 \/355\n7.1.1  Android HAL构架 \/355\n7.1.2  Android HAL的实现 \/357\n7.2  Android Overlay构架与实现 \/361\n7.2.1  Android Overlay系统构架 \/361\n7.2.2  Overlay HAL框架与实现 \/362\n7.2.3  Overlay与SurfaceFinger \/369\n7.3  Android Camera 构架与实现 \/375\n7.3.1  Android Camera系统构架 \/375\n7.3.2  Camera HAL框架与实现 \/377\n7.3.3  Camera本地实现 \/385\n7.4  Android Audio HAL实现 \/394\n7.4.1  Audio HAL框架 \/395\n7.4.2  Android默认的Audio HAL实现 \/398\n7.4.3  DUMP功能的Audio HAL实现 \/400\n7.4.4  基于A2dp的蓝牙音频设备HAL实现 \/402\n7.4.5  模拟器上的Audio HAL实现 \/403\n7.5  Android RIL实现 \/404\n7.5.1  Android RIL构架 \/404\n7.5.2  radiooptiongs实现 \/407\n7.5.3  libril库实现 \/409\n7.5.4  reference-ril库实现 \/415\n7.5.5  RILD守护进程实现 \/418\n7.5.6  request流程分析 \/423\n7.5.7  response流程分析 \/427\n7.6  Android Sensor HAL实现 \/434\n7.6.1  Android Sensor构建 \/434\n7.6.2  Sensor HAL接口 \/435\n7.6.3  Sensor HAL实现 \/438\n7.7  Android WIFI HAL实现 \/441\n7.7.1  Android WIFI系统构架 \/441\n7.7.2  wpa_supplicant框架 \/442\n7.7.3  WIFI HAL实现 \/444\n7.8  Android蓝牙本地实现 \/447\n7.8.1  Android蓝牙构架 \/447\n7.8.2  BlueZ结构体系 \/448\n7.8.3  BlueZ适配层 \/452\n7.9  Android 定位实现 \/453\n7.9.1  定位系统构架 \/453\n7.9.2  GPS HAL实现 \/454\n7.10  Android Power HAL实现 \/459\n7.11  Android Vibrator HAL实现 \/461\n7.12  小结 \/462\n第8章  Dalvik虚拟机的构架、原理与实现 \/463\n8.1  Dalvik虚拟机概述 \/464\n8.1.1  什么是Dalvik虚拟机 \/464\n8.1.2  Dalvik虚拟机的功能 \/464\n8.1.3  Dalvik虚拟机与Java虚拟机的区别 \/465\n8.2  Dalvik构架与实现 \/466\n8.2.1  Dalvik系统构架 \/466\n8.2.2  dx和dexdump工具 \/468\n8.2.3  .dex文件格式解析 \/470\n8.2.4  Dalvik内部机制 \/487\n8.2.5  Dalvik进程管理 \/492\n8.2.6  Dalvik内存管理 \/501\n8.2.7  Dalvik加载器 \/509\n8.2.8  Dalvik解释器 \/517\n8.2.9  Dalvik JIT \/519\n8.3  JNI的构架与实现 \/523\n8.3.1  JNI构架 \/523\n8.3.2  JNI实现 \/524\n8.4  小结 \/526\n第9章  Android 核心库 \/527\n9.1  Android核心库简介 \/528\n9.2  Android系统API \/529\n9.2.1  android包 \/529\n9.2.2  android资源包 \/529\n9.2.3  ApiCheck机制 \/529\n9.3  小结 \/532\n后记 \/533",
      "ebook_url": "http:\/\/read.douban.com\/ebook\/15161014\/",
      "pages": "548",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s6379378.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s6379378.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s6379378.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6047744\/",
      "id": "6047744",
      "publisher": "机械工业出版社",
      "isbn10": "7111337271",
      "isbn13": "9787111337270",
      "title": "Android技术内幕",
      "url": "http:\/\/api.douban.com\/v2\/book\/6047744",
      "alt_title": "",
      "author_intro": "杨丰盛，国内Android领域的先驱者和布道者，资深Android开发工程师，在Android应用开发方面有丰富的实战经验。他对Android的源代码进行了长达一年的系统学习和研究，对Android系统的架构设计和实现原理有非常深入的理解和认识，理论功底也十分深厚。国内著名IT技术网站51CTO推荐技术专家，曾多次接受《程序员》杂志采访并为其撰稿，同时他还多次应邀在国内的移动开发者大会和技术沙龙中开展讲座，深受欢迎。他还是畅销书作家，撰写的《Android应用开发揭秘》一书是目前Android领域口碑最好、销量也最好的一本书之一，这本书自上市以来已经重印9次，而且销量一直排在当当网、卓越网和互动网这3大网店的计算机类图书的排行榜前列。\n此外，他还精通Java、C、C++等语言，在机顶盒软件开发和MTK平台软件开发方面有非常丰富的经验。游戏开发也是他的专长，曾经参与过《三国群英传说》、《大航海传奇》、《养成计划》等游戏的开发，2007年荣获中国软件行业协会游戏软件分会(CGIA)认证及国际游戏开发教育联合会国际认证。",
      "summary": "《Android技术内幕：系统卷》是国内首本系统对Android的源代码进行深入分析的著作。全书将Android系统从构架上依次分为应用层、应用框架层、系统运行库层、硬件抽象层和Linux内核层等5个层次，旨在通过对Android系统源代码的全面分析来帮助开发者加深对Android系统架构设计和实现原理的认识，从而帮助他们解决开发中遇到的更加复杂的问题。\n全书分为两卷，系统卷主要分析了Linux内核层、硬件抽象层和系统运行库层的各个模块的底层原理和实现细节；应用卷主要分析了应用层和应用框架层的各个模块的底层原理和实现细节。\n具体而言，系统卷第1章首先从宏观上介绍了Android系统的架构以及各个层次之间的关系，然后介绍了如何获取Android源代码并搭建Android源代码开发环境和阅读环境的方法；第2章有针对性地剖析了Android的内核机制和结构，以及Android对Linux内核的改动和增强；第3章分析了Binder的架构和工作机制，以及Binder驱动的实现原理；第4章分析了Android电源管理模块的机制与实现；第5章全面地剖析了Android硬件设备驱动（显示、视频、音频、MTD、Event、蓝牙、WLAN等）的工作原理和实现，掌握这部分内容即可修改和编写基于Android的设备驱动程序；第6章深刻阐述了Android原生库的原理及实现，涉及系统C库、功能库、扩展库和原生的Server等重要内容；第7章系统地讲解了硬件抽象层的原理与实现，掌握这部分内容即可编写适合特定硬件设备驱动的抽象层接口；第8章和第9章是对系统运行库层的分析，主要讲解了Dalvik虚拟机的架构、原理与实现，以及Android的核心库相关的知识，掌握这部分内容即可完成对Android运行库的移植和修改。\n本书适合所有的高级Android应用开发工程师、Android系统开发工程师、Android移植工程师、Android系统架构师和所有对Android源码实现感兴趣的读者。",
      "ebook_price": "52.19",
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 81,
        "average": "7.1",
        "min": 0
      },
      "subtitle": "你的第一本Android书",
      "author": [
        "[美] Ed Burnette"
      ],
      "pubdate": "2009-11",
      "tags": [
        {
          "count": 154,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 51,
          "name": "手机开发",
          "title": "手机开发"
        },
        {
          "count": 22,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 19,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 12,
          "name": "入门",
          "title": "入门"
        },
        {
          "count": 7,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 6,
          "name": "IT",
          "title": "IT"
        },
        {
          "count": 5,
          "name": "Java",
          "title": "Java"
        }
      ],
      "origin_title": "Hello, Android : Introducing Google's Mobile Development Platform",
      "image": "https://img3.doubanio.com\/mpic\/s6089496.jpg",
      "binding": "平装",
      "translator": [
        "高朝勤",
        "杨越"
      ],
      "catalog": "第一部分　Android简介\n第1章　快速入门\n1.1　安装工具\n1.1.1　Java 5.0+\n1.1.2　Eclipse\n1.1.3　Android\n1.1.4　Eclipse插件\n1.2　创建第一个程序\n1.3　在模拟器上运行程序\n1.4　在手机上运行程序\n1.5　快速阅读指南\n第2章　基本概念\n2.1　Android的系统架构\n2.1.1　Linux内核\n2.1.2　本机库\n2.1.3　Android运行时\n2.1.4　应用程序框架\n2.1.5　应用程序\n2.2　它还活着\n2.2.1　进程不等于应用程序\n2.2.2　应用程序生命周期\n2.3　构建块\n2.3.1　活动\n2.3.2　意图\n2.3.3　服务\n2.3.4　内容提供者\n2.4　使用资源\n2.5　安全性\n2.6　快速阅读指南\n第二部分　Android基础知识\n第3章　设计用户界面\n3.1　数独游戏简介\n3.2　声明性设计\n3.3　创建启动界面\n3.4　使用替代资源\n3.5　实现About对话框\n3.6　应用主题\n3.7　添加菜单\n3.8　添加设置\n3.9　开始新游戏\n3.10　利用日志消息调试程序\n3.11　利用调试器调试程序\n3.12　退出游戏\n3.13　快速阅读指南\n第4章　绘制2D图形\n4.1　Android图形基础\n4.1.1　Color类\n4.1.2　Paint类\n4.1.3　Canvas类\n4.1.4　Path类\n4.1.5　Drawable类\n4.2　在Sudoku程序中添加图形\n4.2.1　开始游戏\n4.2.2　定义Game类\n4.2.3　定义PuzzleView类\n4.2.4　绘制游戏盘面\n4.2.5　绘制数字\n4.3　处理输入\n4.3.1　定义和更新选定区域\n4.3.2　输入数字\n4.3.3　增加提示\n4.3.4　抖动屏幕\n4.4　其他问题\n4.4.1　创建软键盘\n4.4.2　实现游戏逻辑\n4.4.3　其他功能\n4.5　更多改进\n4.6　快速阅读指南\n第5章　多媒体\n5.1　播放音频\n5.2　播放视频\n5.3　为数独游戏配上音乐\n5.4　快速阅读指南\n第6章　存储本地数据\n6.1　为数独游戏添加选项\n6.2　继续玩前一个游戏\n6.3　记住当前位置\n6.4　访问内部文件系统\n6.5　访问SD卡\n6.6　快速阅读指南\n第三部分　高级主题\n第7章　互联的世界\n7.1　通过意图实现浏览\n7.2　利用视图打开网页\n7.3　JavaScript与Java通信\n7.4　使用Web服务\n7.5　快速阅读指南\n第8章　定位与环境感知\n8.1　位置，位置，位置\n8.1.1　我在哪里\n8.1.2　更新位置\n8.1.3　模拟说明\n8.2　充分利用传感器\n8.2.1　了解传感器\n8.2.2　解析传感器的读数\n8.2.3　模拟说明\n8.3　地图功能\n8.3.1　嵌入MapView\n8.3.2　准备就绪\n8.3.3　模拟说明\n8.4　快速阅读指南\n第9章　SQL实战\n9.1　SQLite简介\n9.2　SQL基础\n9.2.1　DDL语句\n9.2.2　修改语句\n9.2.3　查询语句\n9.3　你好，数据库\n9.3.1　使用SQliteOpenHelper\n9.3.2　定义主程序\n9.3.3　添加一行\n9.3.4　运行一个查询\n9.3.5　显示查询结果\n9.4　数据绑定\n9.5　使用ContentProvider\n9.5.1　更改主程序\n9.5.2　添加一行\n9.5.3　运行一个查询\n9.6　实现ContentProvider\n9.7　快速阅读指南\n第10章　利用OpenGL实现3D图形\n10.1　理解3D图形\n10.2　OpenGL简介\n10.3　构建一个OpenGL程序\n10.4　管理线程\n10.5　构建一个模型\n10.6　光线、相机\n10.7　动作\n10.8　应用纹理\n10.9　透明效果\n10.10　快速阅读指南\n第四部分　附录\n附录A　Java与Android语言及其API\n附录B　参考书目",
      "pages": "196",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s6089496.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s6089496.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s6089496.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4111350\/",
      "id": "4111350",
      "publisher": "人民邮电出版社",
      "isbn10": "7115215367",
      "isbn13": "9787115215369",
      "title": "Android基础教程",
      "url": "http:\/\/api.douban.com\/v2\/book\/4111350",
      "alt_title": "Hello, Android : Introducing Google's Mobile Development Platform",
      "author_intro": "Ed Burnette 资深软件技术专家，拥有20多年软件开发经验。SAS高级计算机实验室的联合创始人和高级研究员。他是www.planetandroid.com网站的创办人和ZDNet的专栏作家。除本书外，他还出版了Google Web Toolkit: Taking the Pain out of Ajax和 Eclipse IDE Pocket Guide等著作。",
      "summary": "《Android基础教程》内容完整丰富，具有较强的通用性，读者都能通过《Android基础教程》快速学习Android开发，提高相关技能。Android是谷歌公司开发的全新开源手机平台。《Android基础教程》是一部关于Android开发的基础教程，采用由浅入深、循序渐进的方式讨论Android。书中还结合数独游戏等实例更加形象生动地讲解了Android开发的基本流程，且每章最后都有一个“快速阅读指南”，更加方便了读者的阅读。",
      "price": "39.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 25,
        "average": "7.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "[美] Vladimir Silva"
      ],
      "pubdate": "2011-2",
      "tags": [
        {
          "count": 104,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 53,
          "name": "游戏",
          "title": "游戏"
        },
        {
          "count": 29,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 18,
          "name": "游戏开发",
          "title": "游戏开发"
        },
        {
          "count": 11,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 7,
          "name": "android",
          "title": "android"
        },
        {
          "count": 7,
          "name": "CodingGame",
          "title": "CodingGame"
        },
        {
          "count": 7,
          "name": "NDK",
          "title": "NDK"
        }
      ],
      "origin_title": "Pro Android Games",
      "image": "https://img3.doubanio.com\/mpic\/s4592945.jpg",
      "binding": "平装",
      "translator": [
        "王恒",
        "苏金国 等"
      ],
      "catalog": "第1章 欢迎进入Android游戏世界        1\n1.1 必备技能        1\n1.1.1 扎实的Android基础        1\n1.1.2 Linux和Shell脚本的基本知识        3\n1.2 需要哪些软件工具        3\n1.3 建立环境        4\n1.3.1 获得Android源文件        4\n1.3.2 提取本地Android库        6\n1.3.3 为ARM处理器安装GNU工具链        8\n1.3.4 编写定制编译脚本        10\n1.4 建立开发环境        17\n1.5 已经成功迈出第一步        22\n第2章 在Android中编译本地代码        23\n2.1 第一个本地Android应用        23\n2.1.1 创建AVD        23\n2.1.2 创建Android项目        26\n2.1.3 应用体系结构        27\n2.2 编译和测试共享库        38\n2.2.1 缺少符号时的调试        40\n2.2.2 在设备上测试动态库        41\n2.2.3 用strace调试        42\n2.2.4 静态编译        43\n2.3 测试本地应用        44\n2.4 下一章内容        46\n第3章 从头构建Java游戏        47\n3.1 Android游戏与Java ME游戏        47\n3.2 创建你的第一个Java游戏——Space Blaster        48\n3.2.1 了解游戏的体系结构        49\n3.2.2 创建项目        50\n3.2.3 创建游戏的活动类        51\n3.2.4 创建游戏布局        53\n3.2.5 实现游戏        58\n3.2.6 处理按键和触控事件        66\n3.3 在模拟器上测试        69\n3.4 下一章内容        70\n第4章 Java游戏续篇：多边形的乐趣        71\n4.1 关于本章安排        71\n4.2 了解在Android中绘制多边形的问题        71\n4.3 了解绘制矩形的问题        73\n4.4 为Asteroids创建一个Polygon类        75\n4.5 为Asteroids创建PolygonSprite类        80\n4.6 游戏的体系结构        84\n4.7 创建项目        84\n4.7.1 创建游戏布局        85\n4.7.2 查看资源        86\n4.7.3 了解游戏生命期        87\n4.7.4 响应按键和触控事件        97\n4.8 在模拟器上测试Asteroids        100\n4.9 下一章内容        101\n第5章 OpenGL 3D图形与JNI混合        102\n5.1 移动设备的强大能力        103\n5.2 在Java中使用OpenGL        104\n5.2.1 Java主活动        106\n5.2.2 表面视图        108\n5.2.3 GL线程        110\n5.2.4 立方体渲染器        113\n5.2.5 Cube类        116\n5.3 以本地方式使用OpenGL        118\n5.3.1 主活动        120\n5.3.2 本地接口类        122\n5.3.3 对原示例的修改        123\n5.3.4 本地立方体渲染器        124\n5.3.5 本地立方体        131\n5.3.6 编译和运行示例        132\n5.4 OpenGL游戏移植到Android的问题        137\n5.5 大幕已经拉开        138\n第6章 3D射击游戏Ⅰ：面向Android的Wolfenstein 3D        139\n6.1 收集工具        139\n6.2 Wolf 3D        140\n6.3 游戏体系结构        143\n6.4 Wolf 3D的Java类        144\n6.4.1 创建主要的WolfLauncher类        145\n6.4.2 创建Wolf 3D主菜单        149\n6.4.3 处理按键和触控事件        150\n6.4.4 创建游戏循环        152\n6.4.5 建立本地回调        153\n6.4.6 创建声音和音乐处理器        155\n6.4.7 创建运动控制器处理程序        156\n6.4.8 创建运动控制器        158\n6.4.9 声音类        165\n6.4.10 本地接口类        174\n6.5 编写本地层        176\n6.5.1 初始化游戏循环        177\n6.5.2 用C到Java的回调级联传递消息        179\n6.6 编译本地库        185\n6.6.1 编写Makefile        186\n6.6.2 生成JNI头文件        187\n6.7 在模拟器中测试Wolf 3D        187\n6.8 下一章内容        189\n第7章 3D射击游戏Ⅱ：面向Android的Doom        191\n7.1 Java\/C组合的无限潜能        191\n7.2 将Doom引入移动设备        192\n7.3 Doom的游戏体系结构        194\n7.4 Java主活动        195\n7.4.1 创建处理器        196\n7.4.2 游戏布局        197\n7.4.3 菜单和选择处理器        199\n7.4.4 按键和触控事件处理器        200\n7.4.5 本地回调处理器        202\n7.4.6 导航控件        205\n7.5 音频类        207\n7.6 本地接口类        208\n7.6.1 回调监听器        208\n7.6.2 本地方法        209\n7.6.3 C到Java的回调        209\n7.7 本地层        212\n7.7.1 本地方法实现        212\n7.7.2 对原游戏的修改        223\n7.8 Doom库（DSO）编译        229\n7.9 在模拟器中测试面向Android的Doom        230\n7.10 大功告成        232\n附录 部署与编译提示        234",
      "pages": "260",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s4592945.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s4592945.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s4592945.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/5908849\/",
      "id": "5908849",
      "publisher": "人民邮电出版社",
      "isbn10": "711524698X",
      "isbn13": "9787115246981",
      "title": "精通Android游戏开发",
      "url": "http:\/\/api.douban.com\/v2\/book\/5908849",
      "alt_title": "Pro Android Games",
      "author_intro": "Vladimir Silva 美国田纳西州立大学计算机科学硕士，美国国家荣誉协会成员。曾在IBM担任过4年研究工程师，在此期间积累了有关分布式和网格计算研究的丰富经验。为IBM发表过多篇计算机科学文章。除本书外，他还著有Grid Computing for Developers 和Practical Eclipse RCP Projects。",
      "summary": "作为引领移动技术潮流的软件平台，Android发布了NDK以支持Java和C的混合开发，使PC游戏可以在Android平台上焕发更多魅力。\n本书是为那些在Android游戏开发工作中寻求突破的人准备的。书中不仅通过Space Blaster和Asteroids这两个炫酷 的街机游戏深入介绍了如何从头构建纯Java游戏，更详细展示了如何将PC上的3D经典游戏Doom和Wolfenstein 3D移植到Android，阐释了在Java和C中混合使用OpenGL 3D图形和Java本地接口的技术。每个示例都提供了完全可用的实际源代码，方便读者理解复杂概念。作者语言简练，分析透彻，往往一语中的。在他的引导下，读者能很快学会将Java优雅的面向对象特性与C的强大功能集于一身，为Android平台构建任何类型的游戏。",
      "series": {
        "id": "660",
        "title": "图灵程序设计丛书"
      },
      "price": "45.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 91,
        "average": "6.8",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "余志龙",
        "陈昱勋",
        "郑名杰",
        "陈小凤",
        "郭秩均"
      ],
      "pubdate": "2009",
      "tags": [
        {
          "count": 110,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 24,
          "name": "Google",
          "title": "Google"
        },
        {
          "count": 20,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 19,
          "name": "应用开发",
          "title": "应用开发"
        },
        {
          "count": 15,
          "name": "移动平台",
          "title": "移动平台"
        },
        {
          "count": 13,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 13,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 13,
          "name": "sdk",
          "title": "sdk"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s3830632.jpg",
      "binding": "",
      "translator": [],
      "catalog": "",
      "pages": "616",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s3830632.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s3830632.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s3830632.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/3788013\/",
      "id": "3788013",
      "publisher": "人民邮电出版社",
      "isbn10": "711520893X",
      "isbn13": "9787115208934",
      "title": "Google Android SDK开发范例大全",
      "url": "http:\/\/api.douban.com\/v2\/book\/3788013",
      "alt_title": "",
      "author_intro": "",
      "summary": "本书以Android手机应用程序开发为主题，通过130多个范例全面且深度地整合了手机、网络及服务等多个开发领域，为读者提高程序设计功力提供了很大的帮助。.\n全书共分10章，主要以范例集的方式来讲述Android的知识点，详细介绍了开发Android的人机交互界面、Android常用的开发控件、使用 Android手机收发短信等通信服务、开发Android手机的自动服务功能和娱乐多媒体功能以及整合Android与Aoogle强大的网络服务等内容，随书光盘中包括了所有范例的程序代码。..\n本书讲述由浅入深，由Android的基础知识到实际开发应用，结构清晰、语言简洁，非常适合Android的初学者和Android的进阶程序开发者阅读参考。",
      "price": "79.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 36,
        "average": "7.1",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "纳德尔曼 (Greg Nudelman)"
      ],
      "pubdate": "2013-12-1",
      "tags": [
        {
          "count": 83,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 56,
          "name": "交互设计",
          "title": "交互设计"
        },
        {
          "count": 47,
          "name": "设计",
          "title": "设计"
        },
        {
          "count": 35,
          "name": "UI",
          "title": "UI"
        },
        {
          "count": 24,
          "name": "移动应用",
          "title": "移动应用"
        },
        {
          "count": 18,
          "name": "移动应用产品设计",
          "title": "移动应用产品设计"
        },
        {
          "count": 14,
          "name": "App",
          "title": "App"
        },
        {
          "count": 10,
          "name": "产品",
          "title": "产品"
        }
      ],
      "origin_title": "Android design patterns:interaction design solutions for developers",
      "image": "https://img1.doubanio.com\/mpic\/s27979208.jpg",
      "binding": "平装",
      "translator": [
        "袁国忠"
      ],
      "catalog": "第一部分　用户体验原则和Android特色\n第1章　向Android迁移（案例）　　2\n1.1 　启动图标　　2\n1.2 　操作栏与信息架构　　3\n1.2.1 　重新设计前　　3\n1.2.2 　重新设计后　　5\n1.3 　选项卡　　8\n1.4 　专用选择页　　8\n1.5 　选择控件　　9\n1.5.1 　重新设计前　　9\n1.5.2 　重新设计后　　10\n1.6 　按钮　　10\n1.7 　搜索结果屏幕　　11\n1.7.1 　重新设计前　　11\n1.7.2 　重新设计后　　12\n1.8 　结果详情屏幕　　13\n1.8.1 　重新设计前　　13\n1.8.2 　重新设计后　　14\n1.9 　最终结果　　16\n第2章　Android的特色　　19\n2.1 　这里是平面国　　19\n2.2 　轻按任何地方　　21\n2.3 　适合各种设备　　22\n2.4 　摆脱空间限制　　24\n2.5 　大局着眼，小处着手　　27\n第3章　Android分散化　　31\n3.1 　何谓分散化　　31\n3.2 　花无百日红　　31\n3.3 　Android设备类型　　32\n3.3.1 　紧凑型手机　　32\n3.3.2 　全尺寸移动手机　　33\n3.3.3 　平板手机　　34\n3.3.4 　小型平板　　35\n3.3.5 　大型平板　　37\n3.4 　为分散化而歌　　39\n第4章　移动设计流程　　40\n4.1 　现场观察用户如何与移动设备交互　　40\n4.2 　原型设计方法必须考虑尺寸因素　　40\n4.3 　用户测试必须涵盖运动、声音和多点触控等方面　　41\n4.4 　触控界面必须既简约又精巧　　41\n4.5 　愉悦不可或缺　　41\n4.6 　讲述完整的故事——为跨界而设计　　42\n4.7 　移动设计案例研究　　42\n4.7.1 　第1步：范围、概念和规划　　42\n4.7.2 　第2步：设计研讨会　　44\n4.7.3 　第3步：使用便利贴做RITE调查　　45\n4.7.4 　第4步：视觉设计　　48\n第二部分　Android 设计模式与反模式\n第5章　欢迎体验　　50\n5.1 　最终用户许可协议（反模式）　　50\n5.1.1 　出现的时间和场合　　50\n5.1.2  　示例　　50\n5.1.3  　为何要避免　　52\n5.1.4  　其他考虑因素　　52\n5.2 　联系障碍（反模式）　　52\n5.2.1 　出现的时间和场合　　52\n5.2.2 　示例　　53\n5.2.3 　为何要避免　　54\n5.2.4 　其他考虑因素　　54\n5.3 　注册（反模式）　　55\n5.3.1 　出现的时间和场合　　55\n5.3.2 　示例　　55\n5.3.3 　为何要避免　　56\n5.3.4 　其他考虑因素　　56\n5.4 　欢迎动画　　57\n5.4.1 　工作原理　　57\n5.4.2 　示例　　57\n5.4.3 　使用的时机和场合　　58\n5.4.4 　使用的原因　　58\n5.4.5 　其他用途　　58\n5.4.6 　Pet Shop应用　　58\n5.4.7 　平板应用　　59\n5.5 　使用说明　　59\n5.5.1 　工作原理　　59\n5.5.2 　示例　　59\n5.5.3 　使用的时机和场合　　61\n5.5.4 　使用的原因　　61\n5.5.5 　其他用途　　61\n5.5.6 　Pet Shop应用　　62\n5.5.7 　平板应用　　62\n第6章　主屏幕　　63\n6.1 　链接列表　　63\n6.1.1 　工作原理　　63\n6.1.2 　示例　　63\n6.1.3 　使用的时机和场合　　65\n6.1.4 　使用的原因　　65\n6.1.5 　其他用途　　65\n6.1.6 　Pet Shop应用　　66\n6.1.7 　平板应用　　66\n6.2 　仪表板　　66\n6.2.1 　工作原理　　67\n6.2.2 　示例　　67\n6.2.3 　使用的时机和场合　　67\n6.2.4 　使用的原因　　68\n6.2.5 　Pet Shop应用　　68\n6.2.6 　平板应用　　69\n6.3 　更新　　69\n6.3.1 　工作原理　　69\n6.3.2 　示例　　69\n6.3.3 　使用的时机和场合　　70\n6.3.4 　使用的原因　　70\n6.3.5 　其他用途　　71\n6.3.6 　Pet Shop应用　　71\n6.3.7 　平板应用　　72\n6.4 　浏览　　72\n6.4.1 　工作原理　　72\n6.4.2 　示例　　73\n6.4.3 　使用的时机和场合　　74\n6.4.4 　使用的原因　　74\n6.4.5 　其他用途　　74\n6.4.6 　Pet Shop应用　　75\n6.4.7 　平板应用　　76\n6.5 　地图　　76\n6.5.1 　工作原理　　76\n6.5.2 　示例　　76\n6.5.3 　使用的时机和场合　　77\n6.5.4 　使用的原因　　77\n6.5.5 　其他用途　　77\n6.5.6 　Pet Shop应用　　78\n6.5.7 　平板应用　　79\n6.6 　历史记录　　80\n6.6.1 　工作原理　　80\n6.6.2 　示例　　80\n6.6.3 　使用的时机和场合　　80\n6.6.4 　使用的原因　　81\n6.6.5 　其他用途　　81\n6.6.6 　Pet Shop应用　　82\n6.6.7 　平板应用　　83\n第7章　搜索　　84\n7.1 　语音搜索　　84\n7.1.1 　工作原理　　84\n7.1.2 　示例　　84\n7.1.3 　使用的时机和场合　　85\n7.1.4 　使用的原因　　86\n7.1.5 　其他用途　　86\n7.1.6 　Pet Shop应用　　87\n7.1.7 　平板应用　　87\n7.2 　自动完成与自动建议　　89\n7.2.1 　工作原理　　89\n7.2.2 　示例　　89\n7.2.3 　使用的时机和场合　　90\n7.2.4 　使用的原因　　90\n7.2.5 　其他用途　　91\n7.2.6 　Pet Shop应用　　91\n7.2.7 　平板应用　　92\n7.3 　轻按优先　　93\n7.3.1 　工作原理　　93\n7.3.2 　示例　　94\n7.3.3 　使用的时机和场合　　94\n7.3.4 　使用的原因　　94\n7.3.5 　其他用途　　95\n7.3.6 　Pet Shop应用　　95\n7.3.7 　平板应用　　95\n7.4 　拖动刷新　　96\n7.4.1 　工作原理　　96\n7.4.2 　示例　　96\n7.4.3 　使用的时机和场合　　97\n7.4.4 　使用的原因　　97\n7.4.5 　其他用途　　97\n7.4.6 　Pet Shop应用　　97\n7.4.7 　平板应用　　97\n7.5 　从菜单搜索　　98\n7.5.1 　工作原理　　98\n7.5.2 　示例　　98\n7.5.3 　使用的时机和场合　　99\n7.5.4 　使用的原因　　99\n7.5.5 　其他用途　　99\n7.5.6 　Pet Shop应用　　99\n7.5.7 　平板应用　　100\n7.6 　从操作栏搜索　　100\n7.6.1 　工作原理　　101\n7.6.2 　示例　　101\n7.6.3 　使用的时机和场合　　102\n7.6.4 　使用的原因　　102\n7.6.5 　其他用途　　102\n7.6.6 　Pet Shop应用　　103\n7.6.7 　平板应用　　103\n7.7 　专用搜索　　104\n7.7.1 　工作原理　　104\n7.7.2 　示例　　104\n7.7.3 　使用的时机和场合　　105\n7.7.4 　使用的原因　　105\n7.7.5 　其他用途　　105\n7.7.6 　Pet Shop应用　　105\n7.7.7 　平板应用　　106\n7.8 　在内容页面中搜索　　106\n7.8.1 　工作原理　　106\n7.8.2 　示例　　106\n7.8.3 　使用的时机和场合　　107\n7.8.4 　使用的原因　　107\n7.8.5 　其他用途　　107\n7.8.6 　Pet Shop应用　　108\n7.8.7 　平板应用　　108\n7.9 　搜索与细化分离（反模式）　　109\n7.9.1 　出现的时间和场合　　109\n7.9.2 　示例　　109\n7.9.3 　为何要避免　　110\n7.9.4 　其他考虑因素　　110\n第8章　排序和筛选　　112\n8.1 　残缺的细化（反模式）　　112\n8.1.1 　出现的时机和场合　　112\n8.1.2 　示例　　112\n8.1.3 　为何要避免　　114\n8.2 　细化页面　　115\n8.2.1 　工作原理　　115\n8.2.2 　示例　　115\n8.2.3 　使用的时机和场合　　118\n8.2.4 　使用的原因　　118\n8.2.5 　其他用途　　118\n8.2.6 　Pet Shop应用　　119\n8.2.7 　平板应用　　119\n8.3 　筛选带　　120\n8.3.1 　工作原理　　120\n8.3.2 　示例　　120\n8.3.3 　使用的时机和场合　　121\n8.3.4 　使用的原因　　121\n8.3.5 　其他用途　　121\n8.3.6 　Pet Shop应用　　122\n8.3.7 　平板应用　　123\n8.4 　并行架构　　123\n8.4.1 　工作原理　　124\n8.4.2 　示例　　124\n8.4.3 　使用的时机和场合　　125\n8.4.4 　使用的原因　　125\n8.4.5 　其他用途　　125\n8.4.6 　Pet Shop应用　　125\n8.4.7 　平板应用　　126\n8.5 　选项卡　　129\n8.5.1 　工作原理　　129\n8.5.2 　示例　　129\n8.5.3 　使用的时机和场合　　131\n8.5.4 　使用的原因　　131\n8.5.5 　其他用途　　131\n8.5.6 　Pet Shop应用　　132\n8.5.7 　平板应用　　133\n第9章　避免无结果或无关结果　　136\n9.1 　不指出系统状态（反模式）　　136\n9.1.1 　出现的时机和场合　　136\n9.1.2 　示例　　136\n9.1.3 　为何要避免　　137\n9.1.4 　其他考虑因素　　138\n9.2 　低效界面（反模式）　　138\n9.2.1 　出现的时机和场合　　138\n9.2.2 　示例　　138\n9.2.3 　其他考虑因素　　139\n9.3 　无用控件（反模式）　　139\n9.3.1 　出现的时机和场合　　139\n9.3.2 　示例　　139\n9.3.3 　为何要避免　　140\n9.4 　你要找的是不是……　　140\n9.4.1 　工作原理　　140\n9.4.2 　示例　　141\n9.4.3 　使用的时机和场合　　141\n9.4.4 　使用的原因　　142\n9.4.5 　其他用途　　142\n9.4.6 　Pet Shop应用　　142\n9.4.7 　平板应用　　142\n9.5 　部分匹配　　143\n9.5.1 　工作原理　　143\n9.5.2 　示例　　143\n9.5.3 　使用的时机和场合　　145\n9.5.4 　使用的原因　　145\n9.5.5 　其他用途　　145\n9.5.6 　Pet Shop应用　　145\n9.5.7 　平板应用　　145\n9.6 　本地结果　　146\n9.6.1 　工作原理　　146\n9.6.2 　示例　　146\n9.6.3 　使用的时机和场合　　147\n9.6.4 　使用的原因　　147\n9.6.5 　其他用途　　147\n9.6.6 　Pet Shop应用　　148\n9.6.7 　平板应用　　149\n第10章　数据输入　　150\n10.1 　滑块　　150\n10.1.1 　工作原理　　150\n10.1.2 　示例　　150\n10.1.3 　使用的时机和场合　　151\n10.1.4 　使用的原因　　151\n10.1.5 　其他用途　　152\n10.1.6 　Pet Shop应用　　152\n10.1.7 　平板应用　　153\n10.2 　步进器　　155\n10.2.1 　工作原理　　155\n10.2.2 　示例　　155\n10.2.3 　使用的时机和场合　　156\n10.2.4 　使用的原因　　156\n10.2.5 　其他用途　　156\n10.2.6 　Pet Shop应用　　157\n10.2.7 　平板应用　　159\n10.3 　可滚动的日历　　159\n10.3.1 　工作原理　　159\n10.3.2 　示例　　159\n10.3.3 　使用的时机和场合　　160\n10.3.4 　使用的原因　　160\n10.3.5 　其他用途　　160\n10.3.6 　Pet Shop应用　　161\n10.3.7 　平板应用　　161\n10.4 　日期与时间选择器　　163\n10.4.1 　工作原理　　163\n10.4.2 　示例　　163\n10.4.3 　使用的时机和场合　　166\n10.4.4 　使用的原因　　166\n10.4.5 　其他用途　　166\n10.4.6 　Pet Shop应用　　167\n10.4.7 　平板应用　　168\n10.5 　下拉列表　　170\n10.5.1 　工作原理　　170\n10.5.2 　示例　　170\n10.5.3 　使用的时机和场合　　172\n10.5.4 　使用的原因　　172\n10.5.5 　其他用途　　172\n10.5.6 　Pet Shop应用　　173\n10.5.7 　平板应用　　173\n10.6 　多选　　174\n10.6.1 　工作原理　　174\n10.6.2 　示例　　174\n10.6.3 　使用的时机和场合　　175\n10.6.4 　使用的原因　　175\n10.6.5 　其他用途　　175\n10.6.6 　Pet Shop应用　　176\n10.6.7 　平板应用　　177\n10.7 　自由文本输入与提取　　177\n10.7.1 　工作原理　　178\n10.7.2 　示例　　178\n10.7.3 　使用的时机和场合　　179\n10.7.4 　使用的原因　　179\n10.7.5 　其他用途　　179\n10.7.6 　Pet Shop应用　　179\n10.7.7 　平板应用　　179\n10.8 　带输入掩码的文本框　　182\n10.8.1 　工作原理　　183\n10.8.2 　示例　　183\n10.8.3 　使用的时机和场合　　185\n10.8.4 　使用的原因　　185\n10.8.5 　其他用途　　185\n10.8.6 　Pet Shop应用　　186\n10.8.7 　平板应用　　186\n10.9 　带原子实体的文本框　　189\n10.9.1 　工作原理　　189\n10.9.2 　示例　　189\n10.9.3 　使用的时机和场合　　189\n10.9.4 　使用的原因　　190\n10.9.5 　其他用途　　191\n10.9.6 　Pet Shop应用　　191\n10.9.7 　平板应用　　192\n第11章　表单　　193\n11.1 　内嵌式错误消息　　193\n11.1.1 　工作原理　　193\n11.1.2 　示例　　193\n11.1.3 　使用的时机和场合　　195\n11.1.4 　使用的原因　　195\n11.1.5 　其他用途　　195\n11.1.6 　Pet Shop应用　　196\n11.1.7 　平板应用　　197\n11.2 　提示框　　198\n11.2.1 　工作原理　　198\n11.2.2 　示例　　198\n11.2.3 　使用的时机和场合　　200\n11.2.4 　使用的原因　　200\n11.2.5 　其他用途　　200\n11.2.6 　Pet Shop应用　　201\n11.2.7 　平板应用　　201\n11.3 　弹出框　　203\n11.3.1 　工作原理　　203\n11.3.2 　示例　　203\n11.3.3 　使用的时机和场合　　205\n11.3.4 　使用的原因　　205\n11.3.5 　其他用途　　205\n11.3.6 　Pet Shop应用　　206\n11.3.7 　平板应用　　207\n11.4 　回调验证　　210\n11.4.1 　工作原理　　210\n11.4.2 　示例　　210\n11.4.3 　使用的时机和场合　　211\n11.4.4 　使用的原因　　211\n11.4.5 　其他用途　　211\n11.4.6 　Pet Shop应用　　211\n11.4.7 　平板应用　　212\n11.5 　取消\/确定　　212\n11.5.1 　工作原理　　212\n11.5.2 　示例　　212\n11.5.3 　使用的时机和场合　　214\n11.5.4 　使用的原因　　215\n11.5.5 　其他用途　　215\n11.5.6 　Pet Shop应用　　217\n11.5.7 　平板应用　　217\n11.6 　上方标签　　221\n11.6.1 　工作原理　　221\n11.6.2 　示例　　221\n11.6.3 　使用的时机和场合　　222\n11.6.4 　使用的原因　　222\n11.6.5 　其他用途　　224\n11.6.6 　Pet Shop应用　　224\n11.6.7 　平板应用　　225\n11.7 　从环境获取输入　　227\n11.7.1 　工作原理　　227\n11.7.2 　示例　　227\n11.7.3 　使用的时机和场合　　231\n11.7.4 　使用的原因　　231\n11.7.5 　其他用途　　231\n11.7.6 　Pet Shop应用　　233\n11.7.7 　平板应用　　233\n11.8 　输入加速　　234\n11.8.1 　工作原理　　234\n11.8.2 　示例　　234\n11.8.3 　使用的时机和场合　　235\n11.8.4 　使用的原因　　235\n11.8.5 　其他用途　　235\n11.8.6 　Pet Shop应用　　235\n11.8.7 　平板应用　　236\n第12章　移动银行　　238\n12.1 　登录加速器　　238\n12.1.1 　工作原理　　238\n12.1.2 　示例　　238\n12.1.3 　使用的时机和场合　　241\n12.1.4 　使用的原因　　241\n12.1.5 　其他用途　　242\n12.1.6 　Pet Shop应用　　243\n12.1.7 　平板应用　　244\n12.2 　专用选择页面　　245\n12.2.1 　工作原理　　245\n12.2.2 　示例　　246\n12.2.3 　使用的时机和场合　　246\n12.2.4 　使用的原因　　246\n12.2.5 　其他用途　　247\n12.2.6 　Pet Shop应用　　247\n12.2.7 　平板应用　　248\n12.3 　表单至上　　249\n12.3.1 　工作原理　　249\n12.3.2 　示例　　249\n12.3.3 　使用的时机和场合　　250\n12.3.4 　使用的原因　　250\n12.3.5 　其他用途　　250\n12.3.6 　Pet Shop应用　　250\n12.3.7 　平板应用　　251\n12.4 　专用页面向导　　251\n12.4.1 　工作原理　　251\n12.4.2 　示例　　252\n12.4.3 　使用的时机和场合　　253\n12.4.4 　使用的原因　　253\n12.4.5 　其他用途　　253\n12.4.6 　Pet Shop应用　　254\n12.4.7 　平板应用　　255\n12.5 　以表单结尾的向导　　255\n12.5.1 　工作原理　　255\n12.5.2 　示例　　255\n12.5.3 　使用的时机和场合　　256\n12.5.4 　使用的原因　　256\n12.5.5 　其他用途　　257\n12.5.6 　Pet Shop应用　　257\n12.5.7 　平板应用　　258\n12.6 　核对?确认　　260\n12.6.1 　工作原理　　260\n12.6.2 　示例　　260\n12.6.3 　使用的时机和场合　　261\n12.6.4 　使用的原因　　261\n12.6.5 　其他用途　　261\n12.6.6 　Pet Shop应用　　262\n12.6.7 　平板应用　　262\n12.7 　近场通信　　263\n12.7.1 　工作原理　　263\n12.7.2 　示例　　263\n12.7.3 　使用的时机和场合　　266\n12.7.4 　使用的原因　　266\n12.7.5 　其他用途　　267\n12.7.6 　Pet Shop应用　　267\n12.7.7 　平板应用　　268\n第13章　导航　　270\n13.1 　上窜下跳（反模式）　　270\n13.1.1 　出现的时间和场合　　270\n13.1.2 　示例　　270\n13.1.3 　为何要避免　　271\n13.1.4 　其他考虑因素　　271\n13.1.5 　出现的时间和场合　　271\n13.2 　多个推荐区域（反模式）　　272\n13.2.1 　出现的时间和场合　　272\n13.2.2 　示例　　272\n13.2.3 　为何要避免　　273\n13.2.4 　其他考虑因素　　273\n13.3 　轮播　　274\n13.3.1 　工作原理　　274\n13.3.2 　示例　　274\n13.3.3 　使用的时机和场合　　275\n13.3.4 　使用的原因　　275\n13.3.5 　其他用途　　275\n13.3.6 　Pet Shop应用　　276\n13.3.7 　平板应用　　276\n13.4 　弹出式菜单　　279\n13.4.1 　工作原理　　279\n13.4.2 　示例　　279\n13.4.3 　使用的时机和场合　　281\n13.4.4 　使用的原因　　281\n13.4.5 　其他用途　　281\n13.4.6 　Pet Shop应用　　282\n13.4.7 　平板应用　　283\n13.5 　水印　　285\n13.5.1 　工作原理　　285\n13.5.2 　示例　　286\n13.5.3 　使用的时机和场合　　287\n13.5.4 　使用的原因　　287\n13.5.5 　其他用途　　287\n13.5.6 　Pet Shop应用　　287\n13.5.7 　平板应用　　288\n13.6 　瑞士军刀导航　　290\n13.6.1 　工作原理　　290\n13.6.2 　示例　　290\n13.6.3 　使用的时机和场合　　293\n13.6.4 　使用的原因　　293\n13.6.5 　其他用途　　294\n13.6.6 　Pet Shop应用　　297\n13.6.7 　平板应用　　298\n13.7 　集成　　299\n13.7.1 　工作原理　　300\n13.7.2 　示例　　300\n13.7.3 　使用的时机和场合　　300\n13.7.4 　使用的原因　　301\n13.7.5 　其他用途　　301\n13.7.6 　Pet Shop应用　　303\n13.7.7 　平板应用　　303\n第14章　平板模式　　306\n14.1 　片段　　306\n14.1.1 　工作原理　　306\n14.1.2 　示例　　306\n14.1.3 　使用的时机和场合　　307\n14.1.4 　使用的原因　　308\n14.1.5 　其他用途　　308\n14.2 　复合视图　　308\n14.2.1 　工作原理　　308\n14.2.2 　示例　　308\n14.2.3 　使用的时机和场合　　309\n14.2.4 　使用的原因　　309\n14.2.5 　其他用途　　309\n14.3 　侧面导航（试验模式）　　310\n14.3.1 　工作原理　　310\n14.3.2 　示例　　311\n14.3.3 　使用的时机和场合　　312\n14.3.4 　使用的原因　　313\n14.3.5 　其他用途　　313\n14.4 　将内容用作导航元素　　314\n14.4.1 　工作原理　　314\n14.4.2 　示例　　314\n14.4.3 　使用的时机和场合　　316\n14.4.4 　使用的原因　　316\n14.4.5 　其他用途　　316\n14.5 　二维更多类似　　317\n14.5.1 　工作原理　　317\n14.5.2 　示例　　317\n14.5.3 　使用的时机和场合　　318\n14.5.4 　使用的原因　　318\n14.5.5 　其他用途　　318\n14.6 　C形轻扫（试验模式）　　319\n14.6.1 　工作原理　　320\n14.6.2 　示例　　320\n14.6.3 　使用的时机和场合　　321\n14.6.4 　使用的原因　　321\n14.6.5 　其他用途　　321",
      "pages": "321",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s27979208.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s27979208.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s27979208.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/25764505\/",
      "id": "25764505",
      "publisher": "人民邮电出版社",
      "isbn10": "7115334684",
      "isbn13": "9787115334688",
      "title": "Android应用UI设计模式",
      "url": "http:\/\/api.douban.com\/v2\/book\/25764505",
      "alt_title": "Android design patterns:interaction design solutions for developers",
      "author_intro": "Greg Nudelman 是DesignCaffeine公司CEO兼移动体验策略师，具有15年的移动体验从业经验，曾为eBay、WebEx、Wells Fargo、PayPal、Safeway、Cisco、IBM、The Associated Press和Groupo n等财富500强企业，以及非盈利性组织和创业公司实现跨平台的数字体验，受到数百万客户的好评。Greg还是很多著名用户体验设计图书的作者，其中包括Designing Search: UX Strategies for eCommerce Success。",
      "summary": "目前，谷歌Android 操作系统在移动市场中风头正劲，并且未来发展势不可挡。本书面向Android 4.0+操作系统，是市面上第一本深入解析Android 界面设计的佳作。本书从适用于移动设备和平板的通用模式以及Android UI 设计指南出发，深入探讨了58 种重要的Android 交互设计模式及其应用。每种模式登场之前，先用基本知识铺路，接着展示常见的设计陷阱和欠佳的设计模式，最后对这些模式进行改进，从而打造卓越的交互设计以及直观的信息架构。\n本书可满足移动设计人员和开发人员的需求，帮助他们轻松成为移动用户体验设计高手。",
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 82,
        "average": "6.7",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "韩超",
        "梁泉"
      ],
      "pubdate": "2010-1",
      "tags": [
        {
          "count": 85,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 19,
          "name": "手机开发",
          "title": "手机开发"
        },
        {
          "count": 19,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 12,
          "name": "框架原理",
          "title": "框架原理"
        },
        {
          "count": 11,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 8,
          "name": "技术",
          "title": "技术"
        },
        {
          "count": 6,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 5,
          "name": "Linux",
          "title": "Linux"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s6111260.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第1章  Android系统概述第2章  Android系统开发综述第3章  Android的Linux内核与驱动程序第4章  Android的底层库和程序第5章  Android的Java虚拟机和Java环境第6章  Android的GUI系统第7章  Android的Audio系统第8章  Android的Video输入输出系统第9章  Android的多媒体系统第10章  Android的电话部分第11章  Android的连接部分第12章  Android的传感器系统第13章  Android应用程序概述及框架第14章  Android应用程序的主要方面第15章  Android应用程序的设计思想",
      "pages": "393",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s6111260.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s6111260.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s6111260.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4251755\/",
      "id": "4251755",
      "publisher": "电子工业出版社",
      "isbn10": "7121101386",
      "isbn13": "9787121101380",
      "title": "Android系统原理及开发要点详解",
      "url": "http:\/\/api.douban.com\/v2\/book\/4251755",
      "alt_title": "",
      "author_intro": "韩超，工学硕士，毕业于北京交通大学电子学院。在AKAE期间，担任ARM-Linux嵌入式系统平台的开发和教学工作，重视完整的知识体系与工程技术相结合。",
      "summary": "《Android系统原理及开发要点详解》全面介绍开放的移动电话平台Android系统，包括Android系统中的Linux驱动、本地框架、Java框架和Java应用4个层次。《Android系统原理及开发要点详解》内容以知识性内容为纲，重点关注开发要点，各个部分内容注重相互照应，按照清晰的思路向读者介绍整个Android系统的原理和开发方法。\n《Android系统原理及开发要点详解》按照Android系统的框架和各个子系统的主线，重点介绍开发Android应用程序和构建硬件抽象层。其内容涵盖了Android应用程序开发和Android系统移植构建手机系统两大方面。\n《Android系统原理及开发要点详解》既适合从事Android各个层次开发的工程师阅读，也适合通用嵌入式Linux系统的学习者使用。",
      "price": "58.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 50,
        "average": "8.2",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "[法] Hervé Guihot"
      ],
      "pubdate": "2012-10",
      "tags": [
        {
          "count": 122,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 52,
          "name": "性能",
          "title": "性能"
        },
        {
          "count": 19,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 13,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 13,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 11,
          "name": "android",
          "title": "android"
        },
        {
          "count": 8,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 7,
          "name": "软件工程",
          "title": "软件工程"
        }
      ],
      "origin_title": "Pro Android Apps Performance Optimization",
      "image": "https://img3.doubanio.com\/mpic\/s22718876.jpg",
      "binding": "平装",
      "translator": [
        "白龙"
      ],
      "catalog": "目 　 　录\n第1章 　Java代码优化　　1\n1.1 　Android如何执行代码　　1\n1.2 　优化斐波纳契数列　　4\n1.2.1 　从递归到迭代　　4\n1.2.2 　BigInteger　　6\n1.3 　缓存结果　　10\n1.4 　API等级　　12\n1.5 　数据结构　　14\n1.6 　响应能力　　17\n1.6.1 　推迟初始化　　19\n1.6.2 　StrictMode　　19\n1.7 　SQLite　　21\n1.7.1 　SQLite语句　　21\n1.7.2 　事务　　25\n1.7.3 　查询　　26\n1.8 　总结　　27\n第2章 　NDK入门　　28\n2.1 　NDK里有什么　　28\n2.2 　混合使用Java和C\/C++代码　　31\n2.2.1 　声明本地方法　　31\n2.2.2 　实现JNI粘合层　　32\n2.2.3 　创建Makefile　　33\n2.2.4 　实现本地函数　　35\n2.2.5 　编译本地库　　36\n2.2.6 　加载本地库　　37\n2.3 　Application.mk　　37\n2.3.1 　为（几乎）所有设备优化　　39\n2.3.2 　支持所有设备　　40\n2.4 　Android.mk　　43\n2.5 　使用C\/C++改进性能　　45\n2.6 　本地Acitivity　　52\n2.6.1 　构建缺失的库　　54\n2.6.2 　替代方案　　59\n2.7 　总结　　60\n第3章 　NDK进阶　　61\n3.1 　汇编　　61\n3.1.1 　最大公约数　　62\n3.1.2 　色彩转换　　66\n3.1.3 　并行计算平均值　　70\n3.1.4 　ARM指令　　74\n3.1.5 　ARM NEON　　79\n3.1.6 　CPU特性　　80\n3.2 　C扩展　　81\n3.2.1 　内置函数　　82\n3.2.2 　向量指令　　82\n3.3 　技巧　　86\n3.3.1 　内联函数　　87\n3.3.2 　循环展开　　87\n3.3.3 　内存预读取　　87\n3.3.4 　用LDM\/STM替换LDR\/STD　　89\n3.4 　总结　　89\n第4章 　高效使用内存　　90\n4.1 　说说内存　　90\n4.2 　数据类型　　91\n4.2.1 　值的比较　　93\n4.2.2 　其他算法　　95\n4.2.3 　数组排序　　96\n4.2.4 　定义自己的类　　97\n4.3 　访问内存　　98\n4.4 　排布数据　　100\n4.5 　垃圾收集　　104\n4.5.1 　内存泄漏　　105\n4.5.2 　引用　　106\n4.6 　API　　109\n4.7 　内存少的时候　　110\n4.8 　总结　　111\n第5章 　多线程和同步　　112\n5.1 　线程　　112\n5.2 　AsyncTask　　115\n5.3 　Handler和Looper　　118\n5.3.1 　Handler　　118\n5.3.2 　Looper　　120\n5.4 　数据类型　　120\n5.5 　并发　　124\n5.6 　多核　　125\n5.6.1 　为多核修改算法　　126\n5.6.2 　使用并发缓存　　129\n5.7 　Activity生命周期　　131\n5.7.1 　传递信息　　132\n5.7.2 　记住状态　　134\n5.8 　总结　　137\n第6章 　性能评测和剖析　　138\n6.1 　时间测量　　138\n6.1.1 　System.nanoTime()　　139\n6.1.2 　Debug.threadCpuTimeNanos()　　140\n6.2 　方法调用跟踪　　141\n6.2.1 　Debug.startMethodTracing()　　141\n6.2.2 　使用Traceview工具　　142\n6.2.3 　DDMS中的Traceview　　144\n6.2.4 　本地方法跟踪　　145\n6.3 　日志　　147\n6.4 　总结　　148\n第7章 　延长电池续航时间　　150\n7.1 　电池　　150\n7.2 　禁用广播接收器　　155\n7.3 　网络　　159\n7.3.1 　后台数据　　159\n7.3.2 　数据传输　　160\n7.4 　位置　　162\n7.4.1 　注销监听器　　163\n7.4.2 　更新频率　　164\n7.4.3 　多种位置服务　　164\n7.4.4 　筛选定位服务　　166\n7.4.5 　最后已知位置　　168\n7.5 　传感器　　169\n7.6 　图形　　170\n7.7 　提醒　　171\n7.8 　WakeLock　　173\n7.9 　总结　　175\n第8章 　图形　　176\n8.1 　布局优化　　176\n8.1.1 　相对布局　　178\n8.1.2 　合并布局　　181\n8.1.3 　重用布局　　183\n8.1.4 　ViewStub　　184\n8.2 　布局工具　　185\n8.2.1 　层级视图　　186\n8.2.2 　layoutopt　　186\n8.3 　OpenGL ES　　186\n8.3.1 　扩展　　187\n8.3.2 　纹理压缩　　189\n8.3.3 　Mipmap　　193\n8.3.4 　多APK　　194\n8.3.5 　着色　　195\n8.3.6 　场景复杂性　　195\n8.3.7 　消隐　　195\n8.3.8 　渲染模式　　195\n8.3.9 　功耗管理　　195\n8.4 　总结　　196\n第9章 　RenderScript　　197\n9.1 　概览　　197\n9.2 　Hello World　　199\n9.3 　Hello Rendering　　202\n9.3.1 　创建渲染脚本　　202\n9.3.2 　创建RenderScriptGL Context　　203\n9.3.3 　展开RSSurfaceView　　204\n9.3.4 　设置内容视图　　204\n9.4 　在脚本中添加变量　　205\n9.5 　HelloCompute　　208\n9.5.1 　Allocation　　209\n9.5.2 　rsForEach　　210\n9.5.3 　性能　　213\n9.6 　自带的RenderScript API　　214\n9.6.1 　rs_types.rsh　　215\n9.6.2 　rs_core.rsh　　217\n9.6.3 　rs_cl.rsh　　219\n9.6.4 　rs_math.rsh　　222\n9.6.5 　rs_graphics.rsh　　223\n9.6.6 　rs_time.rsh　　224\n9.6.7 　rs_atomic.rsh　　225\n9.7 　RenderScript与NDK对比　　225\n9.8 　总结　　226\n",
      "pages": "226",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s22718876.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s22718876.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s22718876.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/19976838\/",
      "id": "19976838",
      "publisher": "人民邮电出版社",
      "isbn10": "7115272417",
      "isbn13": "9787115272416",
      "title": "Android应用性能优化",
      "url": "http:\/\/api.douban.com\/v2\/book\/19976838",
      "alt_title": "Pro Android Apps Performance Optimization",
      "author_intro": "作者介绍：\nHervé Guihot 目前在联发科技公司（MTK, www.mediatek.com）担任软件工程经理。他有十多年的嵌入式系统开发工作经验，主要与数字电视技术相关。目前正在研究如何将Android引入基于ARM的数字家庭平台（电视，蓝光播放器）。",
      "summary": "内容简介：\n今天的Android应用开发者经常要想尽办法来提升程序性能。由于应用越来越复杂，这个问题也变得越来越棘手。本书主要介绍如何快速高效地优化应用，让应用变得稳定高效。你将学会利用Android SDK和NDK来混合或单独使用Java、C\/C++来开发应用。书中还特别讲解了如下内容：\n•        一些OpenGL的优化技术以及RenderScript（Android的新特性）的基础知识；\n•        利用SDK来优化应用的Java代码的技巧；\n•        通过高效使用内存来提升性能的技巧；\n•        延长电池使用时间的技巧；\n•        使用多线程的时机及技巧；\n•        评测剖析代码的技巧。\n把本书的内容学以致用，你的编程技术就会得到关键性的提升，写出的应用就会更为健壮高效，从而广受用户好评，并最终获得成功。",
      "price": "49.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 53,
        "average": "7.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "[美]Jonathan Stark"
      ],
      "pubdate": "2011-6",
      "tags": [
        {
          "count": 89,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 48,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 38,
          "name": "CSS",
          "title": "CSS"
        },
        {
          "count": 37,
          "name": "HTML",
          "title": "HTML"
        },
        {
          "count": 36,
          "name": "移动互联网开发",
          "title": "移动互联网开发"
        },
        {
          "count": 25,
          "name": "html5",
          "title": "html5"
        },
        {
          "count": 20,
          "name": "开发",
          "title": "开发"
        },
        {
          "count": 17,
          "name": "交互设计",
          "title": "交互设计"
        }
      ],
      "origin_title": "Building Android Apps with HTML, CSS, and JavaScript",
      "image": "https://img1.doubanio.com\/mpic\/s6537454.jpg",
      "binding": "",
      "translator": [
        "申林",
        "邹宇"
      ],
      "catalog": "第1章 入门指南\t1\n网络应用程序与原生应用程序的对比\t1\n什么是网络应用程序\t1\n什么是原生应用程序\t1\n优势和劣势\t2\n哪种方法最合适你\t2\n网络编程速成\t3\nhtml入门\t3\ncss入门\t5\njavascript入门\t9\n第2章 基本样式\t13\n还没网站\t13\n准备工作\t14\n准备独立的android样式表\t17\n控制页面缩放\t18\n添加android css\t20\n添加android视觉效果\t23\n使用jquery添加基本行为\t24\n内容回顾\t30\n.第3章 高级样式\t31\n添加一点ajax\t31\n交通警察\t31\n添加一些内容\t34\njavascript的路由请求\t34\n简单的点缀\t36\n进度指示器（process indicator）\t36\n设置页面标题\t39\n处理长标题\t41\n自动回到顶部\t42\n只拦截本地链接\t43\n编写自己的返回按钮\t44\n在主屏幕上添加图标\t50\n内容回顾\t50\n第4章 动画\t51\n来自朋友的帮助\t51\n让主页滑动起来\t51\n添加dates面板\t54\n添加date面板\t56\n添加new entry面板\t57\n添加settings面板\t60\n将所有代码放在一起\t61\n自定义jqtouch\t64\n内容回顾\t65\n第5章 客户端数据存储\t67\nweb storage\t67\n将用户设置保存到本地\t68\n将选中的数据保存到session storage中\t71\nweb sql database\t74\n创建数据库\t74\n插入行\t77\n检索行及处理结果集\t80\n删除行\t84\n内容回顾\t88\nweb database错误编码参考\t88\n第6章 走向离线\t89\n离线应用程序缓存基础\t89\n在线whitelist（白名单）和fallback（备选）选项\t92\n创建动态manifest文件\t95\n调试\t101\njavascript控制台（javascript console）\t101\n内容回顾\t104\n第7章 走向原生\t105\nphonegap简介\t105\n下载android sdk\t107\n下载phonegap\t110\n配置环境\t111\n创建android virtual device（android虚拟设备）\t113\n创建kilogap\t114\n在模拟器中安装kilogap\t118\n使用屏幕的全部高度\t121\n自定义程序图标\t122\n在手机上安装kilogap\t123\n使用javascript来控制手机\t123\nbeep（蜂鸣）、vibrate（振动）及alert（提醒）\t123\n地理位置\t127\n加速度传感器\t133\n内容回顾\t136\n第8章 将应用程序提交到android应用程序市场上\t137\n准备程序的发行版本\t137\n移除调试代码\t137\n应用程序版本管理\t138\n应用程序签名管理\t138\n将程序上传到android应用程序市场\t141\n直接分发程序\t143\n延伸阅读\t145\n附录 147\n索引\t151",
      "pages": "165",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s6537454.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s6537454.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s6537454.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6512489\/",
      "id": "6512489",
      "publisher": "电子工业出版社",
      "isbn10": "7121132370",
      "isbn13": "9787121132377",
      "title": "使用HTML、CSS和JavaScript开发Android程序",
      "url": "http:\/\/api.douban.com\/v2\/book\/6512489",
      "alt_title": "Building Android Apps with HTML, CSS, and JavaScript",
      "author_intro": "JonathancStark是一位移动应用程序开发顾问及研究如何将桌面数据发布到Web方面的专家.a他同时是3本关于Web应用程序编程书籍的作者.a",
      "summary": "《使用html、css和javascript开发android程序 》是《building android apps with html, css, and javascript》的中文翻译版，主要介绍了如何使用现有的web技术构建android应用程序。\n《使用html、css和javascript开发android程序 》的前3章介绍了如何使用基本的html、css和javascript技术构建简单的网络程序；第4章介绍了使用jqtouch技术使得网络程序与原生程序的体验相同；第5、6两章则讲述了利用html5的客户端存储技术使网络程序实现本地存储，进而成为一个离线应用；第7章利用phonegap项目使网络程序也可以操作android硬件特性；第8章则为开发者描绘了在android应用程序市场上发布应用程序的流程和一些技巧。\n《使用html、css和javascript开发android程序 》最大的特点是深入浅出，每一部分都与实例结合，增强了可操作性，更通俗易懂。无论对于希望通过web技术构建移动应用的初学者，还是对于希望进入android领域的web工程师，都是一本不错的参考书。",
      "price": "39.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 49,
        "average": "8.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "马尔科·加尔根塔"
      ],
      "pubdate": "2012-7",
      "tags": [
        {
          "count": 99,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 18,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 14,
          "name": "O'Reilly",
          "title": "O'Reilly"
        },
        {
          "count": 13,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 4,
          "name": "android",
          "title": "android"
        },
        {
          "count": 4,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 3,
          "name": "计算机技术",
          "title": "计算机技术"
        },
        {
          "count": 3,
          "name": "IT",
          "title": "IT"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s11328538.jpg",
      "binding": "",
      "translator": [
        "李亚舟",
        "任中龙",
        "杜钢"
      ],
      "catalog": "",
      "pages": "261",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s11328538.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s11328538.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s11328538.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/11501595\/",
      "id": "11501595",
      "publisher": "电子工业出版社",
      "isbn10": "7121172631",
      "isbn13": "9787121172632",
      "title": "Learning Android（中文版）",
      "url": "http:\/\/api.douban.com\/v2\/book\/11501595",
      "alt_title": "",
      "author_intro": "",
      "summary": "《Learning Android(中文版)》为Android开发入门图书，循序渐进地介绍了如何利用Android基本构件来实现构造用户界面、存储数据、连接网络等实践中必不可少的需求。《Learning Android(中文版)》以亲手实现一个类Twitter的应用为主线，通过不断为其添加功能展开讲解。而这一学习过程积累出的代码模式库，可以灵活运用于真实Android应用开发。《Learning Android(中文版)》内容包括但不限于：Android平台概览、Android设计架构、Android开发环境配置、基本Android的用户界面构建、UI元件组织方法、构建执行后台任务与更新数据的服务、AIDL与NDK介绍等。",
      "price": "49.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 49,
        "average": "7.5",
        "min": 0
      },
      "subtitle": "Android权威专家撰写，经典作品最新升级版",
      "author": [
        "(美)迈耶(Meier, R.) 著"
      ],
      "pubdate": "2013-4-1",
      "tags": [
        {
          "count": 105,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 35,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 18,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 15,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 12,
          "name": "android",
          "title": "android"
        },
        {
          "count": 7,
          "name": "技术",
          "title": "技术"
        },
        {
          "count": 5,
          "name": "计算机技术",
          "title": "计算机技术"
        },
        {
          "count": 5,
          "name": "Android开发",
          "title": "Android开发"
        }
      ],
      "origin_title": "Professional Android 4 Application Development",
      "image": "https://img1.doubanio.com\/mpic\/s26343747.jpg",
      "binding": "平装",
      "translator": [
        "佘建伟",
        "赵凯"
      ],
      "catalog": "目 录\n第1章  Android简介\t1\n1.1  一些背景信息\t2\n1.1.1  不远的过去\t2\n1.1.2  未来的前景\t2\n1.2  对Android的误解\t3\n1.3  Android：开放的移动开发平台\t3\n1.4  原生Android应用程序\t4\n1.5  Android SDK的特征\t5\n1.5.1  访问硬件(包括摄像头、GPS和\n传感器)\t5\n1.5.2  使用Wi-Fi、蓝牙技术和NFC\n进行数据传输\t6\n1.5.3  地图、地理编码和基于位置的\n服务\t6\n1.5.4  后台服务\t6\n1.5.5  使用SQLite数据库进行数据\n存储和检索\t7\n1.5.6  共享数据和应用程序间通信\t7\n1.5.7  使用Widget和Live Wallpaper\n增强主屏幕\t7\n1.5.8  广泛的媒体支持和2D\/3D图形\t7\n1.5.9  Cloud to Device Messaging\t8\n1.5.10  优化的内存和进程管理\t8\n1.6  开放手机联盟简介\t8\n1.7  运行Android的环境\t9\n1.8  从事移动开发的原因\t9\n1.9  从事Android开发的原因\t9\n1.9.1  推动Android普及的因素\t10\n1.9.2  Android的独到之处\t10\n1.9.3  改变移动开发格局\t11\n1.10  开发框架简介\t11\n1.10.1  开发包中的资源\t12\n1.10.2  理解Android软件栈\t12\n1.10.3  Dalvik虚拟机\t14\n1.10.4  Android应用程序架构\t14\n1.10.5  Android库\t15\n第2章  开始入手\t17\n2.1  Android开发\t18\n2.1.1  开始前的准备工作\t18\n2.1.2  创建第一个Android应用程序\t24\n2.1.3  Android应用程序的类型\t31\n2.2  面向移动设备和嵌入式设备的\n开发\t32\n2.2.1  硬件限制带来的设计考虑事项\t32\n2.2.2  考虑用户环境\t35\n2.2.3  Android开发\t36\n2.3  Android开发工具\t40\n2.3.1  Android虚拟设备管理器\t41\n2.3.2  Android SDK管理器\t42\n2.3.3  Android模拟器\t42\n2.3.4  Dalvik调试监控服务(DDMS)\t42\n2.3.5  Android调试桥(ADB)\t43\n2.3.6  Hierarchy Viewer和Lint工具\t43\n2.3.7  Monkey和Monkey Runner\t43\n第3章  创建应用程序和Activity\t45\n3.1  Android应用程序的组成部分\t46\n3.2  应用程序Manifest文件简介\t47\n3.3  使用Manifest编辑器\t54\n3.4  分离资源\t55\n3.4.1  创建资源\t55\n3.4.2  使用资源\t63\n3.4.3  为不同的语言和硬件创建\n资源\t66\n3.4.4  运行时配置更改\t68\n3.5  Android应用程序生命周期\t70\n3.6  理解应用程序的优先级和进程\n状态\t70\n3.7  Android Application类简介\t72\n3.7.1  扩展和使用Application类\t72\n3.7.2  重写应用程序的生命周期\n事件\t73\n3.8  深入探讨Android Activity\t74\n3.8.1  创建Activity\t74\n3.8.2  Activity的生存期\t76\n3.8.3  Android Activity类\t81\n第4章  创建用户界面\t83\n4.1  Android UI基本设计\t84\n4.2  Android UI的基础知识\t84\n4.3  布局简介\t85\n4.3.1  定义布局\t86\n4.3.2  使用布局创建设备无关的UI\t87\n4.3.3  优化布局\t90\n4.4  To-Do List示例\t93\n4.5  Fragment介绍\t100\n4.5.1  创建新的Fragment\t101\n4.5.2  Fragment的生命周期\t101\n4.5.3  Fragment Manager介绍\t105\n4.5.4  向Activity中添加Fragment\t105\n4.5.5  Fragment和Activity之间的\n接口\t110\n4.5.6  没有用户界面的Fragment\t111\n4.5.7  Android Fragment 类\t112\n4.5.8  对To-Do List示例使用\nFragment\t112\n4.6  Android widget 工具箱\t116\n4.7  创建新视图\t117\n4.7.1  修改现有的视图\t118\n4.7.2  创建复合控件\t122\n4.7.3  使用布局创建简单的复合\n控件\t124\n4.7.4  创建定制的视图\t124\n4.7.5  使用定制的控件\t137\n4.8  Adapter简介\t137\n4.8.1  部分原生Adapter简介\t138\n4.8.2  定制ArrayAdapter\t138\n4.8.3  使用Adapter绑定数据到\n视图\t139\n第5章  Intent和Broadcast Receiver\t145\n5.1  Intent简介\t145\n5.1.1  使用Intent来启动Activity\t146\n5.1.2  Linkify简介\t153\n5.1.3  使用Intent广播事件\t155\n5.1.4  Local Broadcast Manager\t159\n5.1.5  Pending Intent简介\t160\n5.2  创建Intent Filter和Broadcast\nReceiver\t161\n5.2.1  使用Intent Filter为隐式Intent\n提供服务\t161\n5.2.2  使用Intent Filter作为插件和\n扩展\t170\n5.2.3  监听本地Broadcast Intent\t173\n5.2.4  使用Broadcast Intent监控设备的\n状态变化\t174\n5.2.5  在运行时管理Manifest\nReceiver\t176\n第6章  使用Internet资源\t177\n6.1  下载和分析Internet资源\t177\n6.1.1  连接Internet资源\t178\n6.1.2  使用XML Pull Parser分析\nXML\t179\n6.1.3  创建一个地震查看器\t180\n6.2  使用Download Manager\t186\n6.2.1  下载文件\t186\n6.2.2  自定义Download Manager\nNotification\t187\n6.2.3  指定下载位置\t188\n6.2.4  取消和删除下载\t189\n6.2.5  查询Download Manager\t189\n6.3  使用Internet服务\t192\n6.4  连接到Google App Engine\t192\n6.5  下载数据而不会耗尽电量的\n最佳实践\t194\n第7章  文件、保存状态和首选项\t195\n7.1  保存简单的应用程序数据\t195\n7.2  创建并保存Shared Preference\t196\n7.3  检索Shared Preference\t197\n7.4  为地震查看器创建一个设置\nActivity\t197\n7.5  首选项框架和Preference Activity\n概述\t205\n7.5.1  在XML中定义一个\nPreference Screen布局\t206\n7.5.2  Preference Fragment简介\t208\n7.5.3  使用Preference Header定义\nPreference Fragment的层次\n结构\t208\n7.5.4  Preference Activity简介\t209\n7.5.5  向后兼容性与Preference\nScreen\t210\n7.5.6  找到并使用Preference Screen\n设置的Shared Preference\t210\n7.5.7  Shared Preference Change\nListener简介\t211\n7.6  为地震查看器创建一个标准的\nPreference Activity\t211\n7.7  持久化应用程序实例的状态\t215\n7.7.1  使用Shared Preference保存\nActivity状态\t215\n7.7.2  使用生命周期处理程序保存和\n还原Activity实例\t215\n7.7.3  使用生命周期处理程序保存和\n还原Fragment实例状态\t216\n7.8  将静态文件作为资源添加\t218\n7.9  在文件系统下工作\t218\n7.9.1  文件管理工具\t218\n7.9.2  使用特定于应用程序的文件夹\n存储文件\t219\n7.9.3  创建私有的应用程序文件\t219\n7.9.4  使用应用程序文件缓存\t220\n7.9.5  存储公共可读的文件\t220\n第8章  数据库和Content Provider\t223\n8.1  Android数据库简介\t223\n8.1.1  SQLite数据库简介\t224\n8.1.2  Content Provider简介\t224\n8.2  SQLite简介\t224\n8.3  Content Value和Cursor\t225\n8.4  使用SQLite数据库\t225\n8.4.1  SQLiteOpenHelper简介\t226\n8.4.2  在不使用SQLiteOpenHelper的\n情况下打开和创建数据库\t228\n8.4.3  Android数据库设计注意\n事项\t228\n8.4.4  查询数据库\t228\n8.4.5  从Cursor中提取值\t229\n8.4.6  添加、更新和删除行\t230\n8.5  创建Content Provider\t232\n8.5.1  注册Content Provider\t233\n8.5.2  发布Content Provider的URI\n地址\t233\n8.5.3  创建Content Provide的\n数据库\t234\n8.5.4  实现Content Provider查询\t235\n8.5.5  Content Provider事务\t236\n8.5.6  在Content Provider中存储\n文件\t239\n8.5.7  一个Content Provider的实现\n框架\t240\n8.6  使用Content Provider\t244\n8.6.1  Content Resolver简介\t244\n8.6.2  查询Content Provider\t244\n8.6.3  使用Cursor Loader异步查询\n内容\t247\n8.6.4  添加、删除和更新内容\t249\n8.6.5  访问Content Provider中存储的\n文件\t251\n8.6.6  创建一个To-Do List数据库和\nContent Provider\t253\n8.7  将搜索功能添加到应用程序中\t260\n8.7.1  使Content Provider可搜索\t261\n8.7.2  为应用程序创建一个搜索\nActivity\t261\n8.7.3  将搜索Activity设置为应用\n程序的默认搜索Provider\t263\n8.7.4  使用搜索视图微件\t266\n8.7.5  由Content Provider支持搜索\n建议\t267\n8.7.6  在快速搜索框中显示搜索\n结果\t270\n8.8  创建可搜索的地震Content\nProvider\t270\n8.8.1  创建Content Provider\t270\n8.8.2  使用地震Content Provider\t276\n8.8.3  搜索EarthquakeContent\nProvider\t279\n8.9  本地Android Content Provider\t285\n8.9.1  使用Media StoreContent\nProvider\t285\n8.9.2  使用Contacts Contract Content\nProvider\t286\n8.9.3  使用Calendar Content\nProvider\t293\n第9章  在后台操作\t297\n9.1  Service简介\t298\n9.1.1  创建和控制Service\t298\n9.1.2  将Service绑定到Activity\t302\n9.1.3  地震监控Service示例\t304\n9.1.4  创建前台Service\t308\n9.2  使用后台线程\t309\n9.2.1  使用AsyncTask运行异步任务\t310\n9.2.2  Intent Service简介\t312\n9.2.3  Loader简介\t313\n9.2.4  手动创建线程和GUI线程\n同步\t313\n9.3  使用Alarm\t315\n9.3.1  创建、设置和取消Alarm\t316\n9.3.2  设置重复Alarm\t317\n9.3.3  使用重复Alarm调度网络\n刷新\t318\n9.4  使用Intent Service简化Earthquake\n更新Service\t320\n第10章  扩展用户体验\t323\n10.1  操作栏简介\t324\n10.1.1  自定义操作栏\t325\n10.1.2  自定义操作栏来控制应用\n程序的导航行为\t328\n10.1.3  操作栏操作简介\t333\n10.2  向地震监控程序添加一个\n操作栏\t333\n10.3  创建并使用菜单和操作栏\n操作项\t339\n10.3.1  Android菜单系统简介\t340\n10.3.2  创建菜单\t341\n10.3.3  指定操作栏的操作\t342\n10.3.4  菜单项选项\t343\n10.3.5  添加操作View和操作提供\n程序\t344\n10.3.6  在Fragment中添加菜单项\t345\n10.3.7  使用XML定义菜单层次\n结构\t345\n10.3.8  动态更新菜单项\t347\n10.3.9  处理菜单选择\t347\n10.3.10  子菜单和上下文菜单简介\t348\n10.4  更新地震监控程序\t351\n10.5  全屏显示\t353\n10.6  对话框简介\t355\n10.6.1  创建一个对话框\t356\n10.6.2  使用AlertDialog类\t356\n10.6.3  使用专门的输入对话框\t357\n10.6.4  通过Dialog Fragment管理和\n显示对话框\t358\n10.6.5  通过Activity事件处理程序\n管理和显示对话框\t360\n10.6.6  将Activity用作对话框\t361\n10.7  创建Toast\t361\n10.7.1  自定义Toast\t362\n10.7.2  在工作线程中使用Toast\t364\n10.8  Notification简介\t365\n10.8.1  Notification Manager简介\t366\n10.8.2  创建Notification\t366\n10.8.3  设置和自定义通知托盘UI\t369\n10.8.4  配置持续和连续的\nNotification\t373\n10.8.5  触发、更新和取消\nNotification\t374\n10.9  向地震监控程序中添加\nNotification和对话框\t376\n第11章  高级用户体验\t381\n11.1  为每个屏幕尺寸和分辨率做\n设计\t382\n11.1.1  分辨率无关\t382\n11.1.2  为不同的屏幕大小提供支持和\n优化\t383\n11.1.3  创建可缩放的图形资源\t386\n11.1.4  创建优化的、自适应的、\n动态的设计\t390\n11.1.5  反复测试\t390\n11.2  确保可访问性\t391\n11.2.1  为非触屏设备提供导航\t391\n11.2.2  为每个View提供文本\n描述\t391\n11.3  Android Text-to-Speech简介\t392\n11.4  使用语音识别\t394\n11.4.1  使用语音识别进行语音\n输入\t395\n11.4.2  使用语音识别进行搜索\t396\n11.5  控制设备振动\t396\n11.6  使用动画\t397\n11.6.1  补间View动画\t397\n11.6.2  创建和使用逐帧动画\t400\n11.6.3  插值属性动画\t400\n11.7  强化View\t404\n11.7.1  高级Canvas绘图\t404\n11.7.2  硬件加速\t419\n11.7.3  Surface View简介\t420\n11.7.4  创建交互式控件\t423\n11.8  高级Drawable资源\t428\n11.9  复制、粘贴和剪贴板\t431\n11.9.1  向剪贴板中复制数据\t431\n11.9.2  粘贴剪贴板数据\t431\n第12章  硬件传感器\t433\n12.1  使用传感器和传感器\n管理器\t433\n12.1.1  受支持的Android传感器\t434\n12.1.2  虚拟传感器简介\t435\n12.1.3  查找传感器\t435\n12.1.4  监视传感器\t436\n12.1.5  解释传感器值\t438\n12.2  监视设备的移动和方向\t439\n12.2.1  确定设备的自然方向\t440\n12.2.2  加速计简介\t441\n12.2.3  检测加速度变化\t442\n12.2.4  创建一个重力计\t443\n12.2.5  确定设备方向\t446\n12.2.6  创建一个指南针和人工\n地平仪\t450\n12.2.7  陀螺仪传感器简介\t453\n12.3  环境传感器简介\t454\n12.3.1  使用气压计传感器\t454\n12.3.2  创建气象站\t455\n第13章  地图、地理编码和基于位置的\n服务\t461\n13.1  使用基于位置的服务\t461\n13.2  在模拟器中使用基于位置的\n服务\t462\n13.2.1  更新模拟器位置提供器中的\n位置\t463\n13.2.2  配置模拟器来测试基于位置的\n服务\t463\n13.3  选择一个位置提供器\t464\n13.3.1  查找位置提供器\t464\n13.3.2  通过指定条件查找位置\n提供器\t464\n13.3.3  确定位置提供器的能力\t465\n13.4  确定当前位置\t466\n13.4.1  位置的隐私性\t466\n13.4.2  找出上一次确定的位置\t466\n13.4.3  Where Am I示例\t466\n13.4.4  刷新当前位置\t469\n13.4.5  在Where Am I中跟踪\n位置\t472\n13.4.6  请求单独一次位置更新\t473\n13.5  位置更新的最佳实践\t474\n13.6  使用近距离提醒\t477\n13.7  使用地理编码器\t478\n13.7.1  反向地理编码\t479\n13.7.2  前向地理编码\t480\n13.7.3  对“Where Am I”示例\n进行地理编码\t481\n13.8  创建基于地图的Activity\t482\n13.8.1  MapView和MapActivity\n简介\t482\n13.8.2  获得地图的API key\t483\n13.8.3  创建一个基于地图的\nActivity\t483\n13.8.4  地图和Fragment\t485\n13.8.5  配置和使用MapView\t486\n13.8.6  使用MapController\t486\n13.8.7  对“Where Am I”示例使用\n地图\t487\n13.8.8  创建和使用覆盖(Overlay)\t490\n13.8.9  MyLocationOverlay简介\t497\n13.8.10  ItemizedOverlay和\nOverlayItem简介\t498\n13.8.11  将视图固定到地图和地图的\n某个位置上\t500\n13.9  对Earthquake示例添加地图\n功能\t501\n第14章  个性化主屏幕\t507\n14.1  主屏幕Widget简介\t507\n14.2  创建App Widgets\t509\n14.2.1  创建Widget的XML\n布局资源\t509\n14.2.2  定义Widget设置\t511\n14.2.3  创建Widget Broadcast Receiver\n并将其添加到应用程序的\nmanifest文件中\t512\n14.2.4  AppWidgetManager和\nRemoteView简介\t513\n14.2.5  刷新Widget\t518\n14.2.6  创建并使用Widget配置\nActivity\t521\n14.3  创建地震Widget\t522\n14.4  Collection View Widget简介\t528\n14.4.1  创建Collection View Widget的\n布局\t529\n14.4.2  创建RemoteViewsService\t530\n14.4.3  创建一个RemoteViews-\nFactory\t531\n14.4.4  使用RemoteViewsService\n填充CollectionViewWidget\t533\n14.4.5  向Collection View Widget\n中的项添加交互性\t534\n14.4.6  将Collection View Widget\n绑定到Content Provider\t535\n14.4.7  刷新Collection View\nWidget\t537\n14.4.8  创建Earthquake Collection\nView Widget\t537\n14.5  Live Folder简介\t543\n14.5.1  创建Live Folder\t544\n14.5.2  创建Earthquake Live Folder\t548\n14.6  使用快速搜索框显示应用程序\n搜索结果\t551\n14.6.1  在快速搜索框中显示搜索\n结果\t551\n14.6.2  将Earthquake示例的搜索\n结果添加到快速搜索框中\t552\n14.7  创建Live Wallpaper\t553\n14.7.1  创建Live Wallpaper定义\n资源\t553\n14.7.2  创建Wallpaper Service\t554\n14.7.3  创建Wallpaper Service\n引擎\t555\n第15章  音频、视频以及摄像头的\n使用\t557\n15.1  播放音频和视频\t558\n15.1.1  Media Player简介\t559\n15.1.2  准备音频播放\t559\n15.1.3  准备视频播放\t560\n15.1.4  控制Media Player的\n播放\t564\n15.1.5  管理媒体播放输出\t566\n15.1.6  响应音量控制\t566\n15.1.7  响应Media播放控件\t567\n15.1.8  请求和管理音频焦点\t569\n15.1.9  当音频输出改变时暂停\n播放\t571\n15.1.10  Remote Control Client简介\t572\n15.2  操作原始音频\t574\n15.2.1  使用AudioRecord录制\n声音\t574\n15.2.2  使用AudioTrack播放音频\t575\n15.3  创建一个Sound Pool\t577\n15.4  使用音效\t578\n15.5  使用摄像头拍摄照片\t579\n15.5.1  使用Intent拍摄照片\t579\n15.5.2  直接控制摄像头\t581\n15.5.3  读取并写入 JPEG EXIF图像\n详细信息\t588\n15.6  录制视频\t589\n15.6.1  使用Intent录制视频\t589\n15.6.2  使用MediaRecorder录制\n视频\t590\n15.7  使用媒体效果\t593\n15.8  向媒体库中添加新媒体\t594\n15.8.1  使用媒体扫描仪插入媒体\t594\n15.8.2  手动插入媒体\t595\n第16章  蓝牙、NFC、网络和Wi-Fi\t597\n16.1  使用蓝牙\t597\n16.1.1  管理本地蓝牙设备适配器\t598\n16.1.2  可发现性和远程设备发现\t600\n16.1.3  蓝牙通信\t604\n16.2  管理网络和Internet连接\t609\n16.2.1  Connectivity Manager简介\t609\n16.2.2  支持用户首选项以进行后台\n数据传输\t609\n16.2.3  查找和监视网络连接\t611\n16.3  管理Wi-Fi\t612\n16.3.1  监视Wi-Fi连接\t613\n16.3.2  监视活动的Wi-Fi连接的\n详细信息\t613\n16.3.3  扫描热点\t613\n16.3.4  管理Wi-Fi配置\t614\n16.3.5  创建Wi-Fi网络配置\t615\n16.4  使用Wi-Fi Direct传输数据\t615\n16.4.1  初始化Wi-Fi Direct框架\t615\n16.4.2  启用Wi-Fi Direct并监视其\n状态\t617\n16.4.3  发现对等设备\t618\n16.4.4  连接对等设备\t618\n16.4.5  在对等设备之间传输数据\t620\n16.5  近场通信\t621\n16.5.1  读取NFC标签\t622\n16.5.2  使用前台分派系统\t623\n16.5.3  Android Beam简介\t625\n第17章  电话服务和SMS\t629\n17.1  电话服务的硬件支持\t629\n17.1.1  将电话功能指定为必需的\n硬件功能\t629\n17.1.2  检查电话硬件\t630\n17.2  使用电话服务\t630\n17.2.1  启动电话呼叫\t630\n17.2.2  替换本机拨号程序\t631\n17.2.3  访问电话服务的属性及状态\t632\n17.2.4  使用PhoneStateListener\n监视电话状态的变化\t635\n17.2.5  使用Intent Receiver监视传入的\n电话呼叫\t639\n17.3  SMS和MMS简介\t640\n17.3.1  在应用程序中使用SMS和\nMMS\t640\n17.3.2  使用Intent从应用程序中\n发送SMS和MMS\t640\n17.3.3  使用SMS Manager发送\nSMS消息\t641\n17.3.4  监听传入的SMS消息\t644\n17.3.5  紧急响应程序SMS示例\t646\n17.3.6  自动紧急响应程序\t654\n17.4  SIP和VOIP简介\t662\n第18章  Android高级开发\t663\n18.1  Android的安全性\t664\n18.1.1  Linux内核安全\t664\n18.1.2  权限简介\t664\n18.2  Cloud to Device Messaging简介\t666\n18.2.1  C2DM的局限性\t667\n18.2.2  注册使用C2DM\t667\n18.2.3  在C2DM服务器上注册\n设备\t667\n18.2.4  向设备发送C2DM消息\t670\n18.2.5  接收C2DM消息\t672\n18.3  使用License Verification Library\n实现版权保护\t673\n18.3.1  安装License Verification\nLibrary\t673\n18.3.2  获得License Verification\n公钥\t673\n18.3.3  配置License Validation\nPolicy\t674\n18.3.4  执行许可验证检查\t674\n18.4  应用程序内收费\t675\n18.4.1  应用程序内收费的局限性\t676\n18.4.2  安装IAB库\t676\n18.4.3  获得公钥和定义可购买的\n物品\t676\n18.4.4  开始IAB交易\t677\n18.4.5  处理IAB购买请求的响应\t678\n18.5  使用Wake Lock\t679\n18.6  使用AIDL支持Service的\nIPC\t680\n18.7  处理不同硬件和软件的可用性\t686\n18.7.1  指定硬件的要求\t686\n18.7.2  确认硬件可用性\t687\n18.7.3  构建向后兼容的应用程序\t687\n18.8  利用STRICT模式优化UI\n性能\t689\n第19章  推广和发布应用程序并从中\n获利\t691\n19.1  签名和发布应用程序\t691\n19.2  发布应用程序\t693\n19.2.1  Google Play简介\t693\n19.2.2  开始使用Google Play\t694\n19.2.3  发布应用程序\t695\n19.2.4  开发者控制台上的应用程序\n报告\t697\n19.2.5  查看应用程序错误报告\t697\n19.3  如何通过应用程序赚钱\t698\n19.4  应用程序销售、推广和分发的\n策略\t699\n19.4.1  应用程序的起步策略\t699\n19.4.2  在Google Play上推广\t700\n19.4.3  国际化\t700\n19.5  分析数据和跟踪推荐人\t701\n19.5.1  使用移动应用程序的Google\nAnalytics\t702\n19.5.2  使用Google Analytics追踪\n推荐\t703",
      "pages": "703",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s26343747.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s26343747.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s26343747.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/24153574\/",
      "id": "24153574",
      "publisher": "清华大学出版社",
      "isbn10": "7302315582",
      "isbn13": "9787302315582",
      "title": "Android 4高级编程",
      "url": "http:\/\/api.douban.com\/v2\/book\/24153574",
      "alt_title": "Professional Android 4 Application Development",
      "author_intro": "Reto Meier 目前是Google Android 团队的一名Android 开发人员倡导者，帮助Android 开发人员创建最优秀的应用程序。Reto 是一位经验丰富的软件开发人员，拥有逾10 年的GUI 应用程序开发经验。进入Google 之前，他曾在多种行业中工作过，包括海洋石油、天然气以及金融业。\nReto 始终不渝地追求掌握新技术，从2007 年Android 发布之初Reto 就迷恋上了此项技术。在Reto 的个人网站Radioactive Yak(http:\/\/blog. radioactiveyak.com) 上可以了解Reto 的兴趣和爱好。他还在Google+(http:\/\/profiles.google.com\/reto.meier) 和Twitter(www.twitter.com\/retomeier) 上分享各种信息。\n技术编辑简介\nDan Ulery 是一名软件工程师，具有.NET、Java 和PHP 的开发经验，并且十分熟悉软件部署。他毕业于爱达荷大学，获得了计算机科学学士学位，并且辅修了数学专业。",
      "summary": "《Android 4高级编程(第3版)》由Android权威专家编写，涵盖了所有最新的内容，是学习使用Android 4 SDK开发移动应用程序的理想指南。本书见解深刻，帮助经验丰富的Android开发人员充分挖掘Android 4的新特性的潜力，同时讲解了Android开发的基础知识，使初学者也可以借助本书入门。作为一本以实用性为目的的指导图书，本书带领您逐步完成复杂程度越来越高的Android项目，每个项目中都引入一种新的Android平台特性，并着重指出有助于编写引人入胜的应用程序的技术和最佳实践。\n本书特色\n◆ 深入分析了Android应用程序的组件和生命周期\n◆ 探讨了Android的UI原理、设计理念和UI API，使用户界\n面在手机、平板电脑和电视上都引人注目\n◆ 介绍了创建基于地图的应用程序和使用基于位置的服务\n的相关知识\n◆ 解释了如何创建后台服务、通知和Cloud to Device Messaging\n◆ 演示了如何创建动态的、交互式的主屏幕微件和Live\nWallpaper\n◆ 探索了硬件和通信API，包括蓝牙、电话、Wi-Fi Direct、\nNFC和Android Beam\n◆ 讲解了摄像头和硬件传感器的使用\n◆ 详述了新的动画框架和其他增强用户体验的特性，包括\n拖放、Action Bar和Fragment\n◆ 新增了关于应用程序发布的一章内容\n◆ 介绍了License Verification和应用程序内收费服务",
      "price": "98.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 85,
        "average": "6.7",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "E2ECloud"
      ],
      "pubdate": "2009-8",
      "tags": [
        {
          "count": 66,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 16,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 8,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 8,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 3,
          "name": "深入浅出Android",
          "title": "深入浅出Android"
        },
        {
          "count": 3,
          "name": "入门",
          "title": "入门"
        },
        {
          "count": 3,
          "name": "mobiledev",
          "title": "mobiledev"
        },
        {
          "count": 2,
          "name": "互联网",
          "title": "互联网"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s3879809.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第1章　千呼万唤始出来——android的前世今生\t1\n1.1　android的诞生\t1\n1.2　android的优点\t3\n1.2.1　开放性\t3\n1.2.2　应用程序平等\t3\n1.2.3　应用程序间无界限\t4\n1.2.4　快速方便的应用程序开发\t5\n1.3　android系统架构\t6\n1.3.1　应用程序\t6\n1.3.2　应用程序框架\t7\n1.3.3　android运行时\t8\n1.3.4　系统库\t9\n1.3.5　linux内核\t10\n1.4　android与移动因特网\t10\n1.4.1　诺基亚的“四大支柱”\t10\n1.4.2　苹果公司的“大超市”\t11\n1.4.3　google的“云”\t12\n1.5　android的发展\t12\n1.5.1　android开源应用\t12\n1.5.2　android设备\t13\n.1.5.3　android平台\t14\n1.6　小结\t15\n第2章　而今迈步从头越——构建android开发环境\t16\n2.1　系统需求\t16\n2.2　安装软件\t17\n2.2.1　安装jdk\t17\n2.2.2　安装android sdk\t17\n2.2.3　安装eclipse以及adt\t18\n2.2.4　创建avd\t22\n2.3　android sdk 1.5初体验\t23\n2.4　构建第一个android程序\t26\n2.5　解析hello android\t29\n2.5.1　应用程序构成\t30\n2.5.2　代码分析\t31\n2.6　调试程序\t34\n2.7　小结\t38\n第3章　一片冰心在玉壶——剖析android应用程序核心\t39\n3.1　应用程序的基本组件\t39\n3.1.1　activity简介\t41\n3.1.2　service简介\t42\n3.1.3　broadcastreceiver简介\t43\n3.1.4　contentprovider简介\t43\n3.1.5　intent——连接组件的纽带\t44\n3.2　应用程序的生命周期\t44\n3.3　近看activity及其生命周期\t48\n3.3.1　创建activity\t48\n3.3.2　activity的生命周期\t49\n3.4　资源\t57\n3.4.1　创建、管理资源\t58\n3.4.2　使用资源\t58\n3.5　androidmanifest.xml文件\t61\n3.5.1　androidmanifest.xml文件的结构\t61\n3.5.2　在androidmanifest.xml中声明权限\t62\n3.6　小结\t64\n第4章　淡汝浓抹总相宜——创建用户界面\t65\n4.1　android用户界面初体验\t65\n4.1.1　view与viewgroup\t65\n4.1.2　可视化控件\t66\n4.1.3　布局\t69\n4.1.4　音乐播放器用户界面（1）..\t82\n4.2　菜单和对话框\t85\n4.2.1　菜单\t85\n4.2.2　对话框\t91\n4.2.3　音乐播放器用户界面（2）\t97\n4.3　进阶\t99\n4.3.1　响应用户界面的事件\t99\n4.3.2　用户界面的数据绑定\t104\n4.3.3　更改控件外观\t109\n4.3.4　音乐播放器用户界面（3）\t112\n4.4　小结\t114\n第5章　青鸟殷勤为探看——电话与短信应用\t115\n5.1　什么是intent\t115\n5.2　解析intent\t118\n5.2.1　显式intent和隐式intent\t119\n5.2.2　intentfilter\t119\n5.3　用intent激活电话拨号程序\t121\n5.3.1　拨号程序雏形\t121\n5.3.2　可输入电话号码的拨号程序\t125\n5.3.3　使用intentfilter的拨号程序\t128\n5.4　用intent实现一个简单的短信程序\t129\n5.4.1　创建tinysms界面\t129\n5.4.2　设置权限\t131\n5.4.3　发送短信\t131\n5.5　android中电话和短信服务的包\t133\n5.6　小结\t133\n第6章　仙乐风飘处处闻——构建你的音乐播放器\t134\n6.1　service简介\t134\n6.2　使用broadcastreceiver\t138\n6.3　让tinyplayer播放音乐\t140\n6.3.1　service部分\t140\n6.3.2　activity部分\t144\n6.4　小结\t146\n第7章　乱花渐欲迷人眼——使用外部数据和服务\t147\n7.1　实例1：通过url获取网络资源\t147\n7.2　实例2：用http post提交表单\t150\n7.3　实例3：用sax解析xml文件\t153\n7.4　实例4：利用google api完成天气预报\t162\n7.4.1　用户界面设计与实现\t163\n7.4.2　解析天气信息\t165\n7.5　实例5：用dom解析xml文件——构建实时地震信息列表\t170\n7.5.1　xml解析器：dom和sax\t170\n7.5.2　通过dom构建实时地震信息列表\t171\n7.5.3　使用dom解析\t176\n7.6　小结\t179\n第8章　日暮乡关何处是——使用位置服务和地图api\t180\n8.1　位置服务\t180\n8.1.1　获取位置信息\t180\n8.1.2　构造locationprovider查询条件\t183\n8.1.3　跟踪位置变化\t183\n8.2　基于地图的应用\t186\n8.2.1　获取map api密钥\t187\n8.2.2　使用mapview下载显示地图\t189\n8.2.3　在地图上标记当前位置\t191\n8.3　用地图显示地震信息\t197\n8.4　小结\t201\n第9章　为有源头活水来——使用sqlite、contentprovider与\npreferences处理数据\t202\n9.1　文件i\/o\t202\n9.2　sqlite数据库\t206\n9.2.1　sqlite数据库介绍\t206\n9.2.2　创建\/打开sqlite数据库\t207\n9.2.3　利用sqlitedatabase对象操作数据库\t210\n9.2.4　cursor的使用\t216\n9.3　contentprovider\t220\n9.3.1　定义contentprovider\t220\n9.3.2　使用contentresolver查询、更改数据\t227\n9.4　使用preferences存储应用程序数据\t230\n9.5　让tinyplayer播放本地音乐文件\t233\n9.6　小结\t236\n第10章　珠箔银屏迤逦开——桌面组件的开发\t237\n10.1　桌面组件简介\t237\n10.2　快捷方式\t238\n10.2.1　在应用程序中添加快捷方式\t238\n10.2.2　在launcher添加应用程序的快捷方式\t242\n10.3　实时文件夹\t245\n10.3.1　定义创建实时文件夹的activity\t245\n10.3.2　定义支持实时文件夹的contentprovider\t248\n10.4　桌面部件\t251\n10.5　小结\t256\n第11章　欲书花叶寄朝云——虚拟软键盘与输入法\t257\n11.1　软键盘输入法简介\t257\n11.2　创建软键盘输入法\t259\n11.2.1　软键盘输入法的androidmanifest.xml\t259\n11.2.2　输入法和软键盘的核心类\t260\n11.2.3　输入法\t264\n11.2.4　根据目标输入类型调整输入法布局\t264\n11.2.5　获取输入内容\t266\n11.2.6　截获硬键盘按键事件\t267\n11.2.7　输入候选view\t267\n11.3　小结\t268\n第12章　试借君王玉马鞭——准备发布应用程序\t269\n12.1　android应用程序发布概览\t269\n12.2　最终用户许可协议\t269\n12.3　应用程序签名\t274\n12.3.1　概述\t274\n12.3.2　签名策略\t275\n12.3.3　为应用程序签名\t275\n12.4　应用程序版本\t277\n12.4.1　版本管理\t277\n12.4.2　应用程序升级\t278\n12.5　小结\t279\n第13章　书中自有黄金屋——销售android应用程序\t280\n13.1　sun开发人员的苹果app store传奇\t280\n13.2　android market简介\t280\n13.2.1　android market是什么\t281\n13.2.2　android market的优势\t281\n13.2.3　在android market上发布应用程序\t282\n13.3　发布android应用程序的其他途径\t284\n13.4　小结\t285\n附录A 常用的android常量\t286\n附录B adb的使用\t291\n附录C 在模拟器中虚拟sd卡  293",
      "pages": "304",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s3879809.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s3879809.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s3879809.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/3851892\/",
      "id": "3851892",
      "publisher": "人民邮电出版社",
      "isbn10": "7115200696",
      "isbn13": "9787115200693",
      "title": "深入浅出Google Android",
      "url": "http:\/\/api.douban.com\/v2\/book\/3851892",
      "alt_title": "",
      "author_intro": "E2ECloud工作室是国内最早的Android开发团队之一，专注于实现云计算与手机用户的连接。该团队成员在移动行业有着人均超过10年的开发经验，对移动应用开发有着深刻的理解。自Android平台发布之日，E2ECloud工作室就开始了在Android平台的工作，如发布S-Dialer、NBA Widget等Android应用，参加Android SDK的中文翻译，在网上发布Android的开发视频，短短时间内就上万人观看与学习。\n关于此团队的更多信息和图书进展，请访问http:\/\/www.5billion.com.cn\/ 或 http:\/\/www.e2ecloud.com",
      "summary": "随着越来越多的手机厂商和移动运营商加入了开放手机联盟，Android平台日益受到广大开发者的关注和推崇。\n本书是国内最早的Android开发团队的集体智慧结晶，真正完全基于Android最新的SDK 1.5，内容详实，示例生动丰富，包含大量示例代码，可操作性强。它不仅涵盖了Android平台从基础概念到高级应用的所有主题，而且深入浅出地介绍了几种常见的Android项目，具有很强的参考价值。特别是在本书的第10、11章重点介绍了Android SDK 1.5引入的最为重要的三个特性，即桌面部件、实时文件夹、虚拟键盘与输入法应用的开发方法。\n通过本书，读者可以迅速掌握Android平台来构建应用程序，成为Android开发高手，跻身新技术的弄潮儿。\nhttp:\/\/www.5billion.com.cn\/上提供了有关免费的在线视频教程。",
      "price": "49.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 54,
        "average": "7.8",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Sayed Y. Hashimi"
      ],
      "pubdate": "2010-1-29",
      "tags": [
        {
          "count": 98,
          "name": "android",
          "title": "android"
        },
        {
          "count": 26,
          "name": "开发",
          "title": "开发"
        },
        {
          "count": 18,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 15,
          "name": "手机",
          "title": "手机"
        },
        {
          "count": 11,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 7,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 5,
          "name": "Apress",
          "title": "Apress"
        },
        {
          "count": 5,
          "name": "教程",
          "title": "教程"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s4698312.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "736",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4698312.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4698312.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4698312.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4042752\/",
      "id": "4042752",
      "publisher": "Apress",
      "isbn10": "1430226595",
      "isbn13": "9781430226598",
      "title": "Pro Android 2",
      "url": "http:\/\/api.douban.com\/v2\/book\/4042752",
      "alt_title": "",
      "author_intro": "",
      "summary": "Pro Android 2 shows you how to build real-world and fun mobile applications using Google's latest Android software development kit. This new edition is updated for Android 2, covering everything from the fundamentals of building applications for embedded devices to advanced concepts such as custom 3D components, OpenGL, and touchscreens including gestures. While other Android development guides simply discuss topics, Pro Android 2 offers the combination of expert insight and real sample applications that work. * Discover the design and architecture of the Android SDK through practical examples, and how to build mobile applications using the Android SDK. * Explore and use the Android APIs, including those for media and Wi-Fi. * Learn about Android 2's integrated local and web search, handwriting gesture UI, Google Translate, and text-to-speech features. Pro Android 2 dives deep, providing you with all the knowledge and techniques you need to build mobile applications ranging from games to Google apps, including add-ons to Google Docs. You'll be able to extend and run the new Google Chrome APIs on the G1, the G2, and other next-generation Google phones and Android-enabled devices. What you'll learn * How to use Android to build Java-based mobile applications for Google phones with a touch screen or keyboard (thanks to Cupcake's inclusion as of Android 1.5) * How to design and architect using Google's latest Android SDK * How to use the Android SDK to write mobile applications for embedded devices * How to create 3D graphics with OpenGL and custom components * How to build multimedia and game apps using Android's Media APIs and OpenGL * How to use Android's location-based services, networking (Wi-Fi APIs), and security * How to create and allow for more integrated local and web searches * How to build handwriting gesture UIs * How to incorporate Google Translate into your Android applications Who this book is for This book is for professional software engineers\/programmers looking to move their ideas and applications into the mobile space with Android. It assumes that readers have a passable understanding of Java, including being able to write classes and handle basic inheritance structures. This book also targets hobbyists. Table of Contents * Introducing the Android Computing Platform * Getting Your Feet Wet * Using Resources, Content Providers, and Intents * Building User Interfaces and Using Controls * Working with Menus and Dialogs * Unveiling 2D Animation * Exploring Security and Location-Based Services * Building and Consuming Services * Using the Media Framework and Telephony APIs * Programming 3D Graphics with OpenGL * Managing and Organizing Preferences * Exploring Live Folders * Home Screen Widgets * Android Search * Exploring Text to Speech and Translate APIs * Touchscreens * Titanium Mobile: A WebKit-Based Approach to Android Development * Working with Android Market * Outlook and Resources",
      "price": "USD 49.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 30,
        "average": "7.1",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "李雪飞",
        "吴明晖"
      ],
      "pubdate": "2010-12",
      "tags": [
        {
          "count": 85,
          "name": "android",
          "title": "android"
        },
        {
          "count": 34,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 25,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 15,
          "name": "移动开发",
          "title": "移动开发"
        },
        {
          "count": 13,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 11,
          "name": "开发",
          "title": "开发"
        },
        {
          "count": 10,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 8,
          "name": "软件",
          "title": "软件"
        }
      ],
      "origin_title": "Beginning Android 2",
      "image": "https://img1.doubanio.com\/mpic\/s4532717.jpg",
      "binding": "平装",
      "translator": [
        "Mark Murphy"
      ],
      "catalog": "第1章 Android开发概述\t1\n1.1 智能手机编程的挑战\t1\n1.2 Android由哪些部分构成\t2\n1.3 你能够控制什么\t3\n第2章 项目和目标\t4\n2.1 基本概念\t4\n2.2 创建项目\t5\n2.3 项目结构\t5\n2.3.1 根目录\t5\n2.3.2 主Activity\t6\n2.3.3 资源\t6\n2.3.4 编译结果\t7\n2.4 AndroidManifest.xml文件\t7\n2.4.1 一开始是根元素\t8\n2.4.2 权限、编排和应用程序\t8\n2.4.3 应用程序总要做点什么\t9\n2.4.4 确保最大兼容性\t10\n2.4.5 版本＝控制\t10\n2.5 模拟器和目标\t11\n2.5.1 虚拟设备\t11\n2.5.2 设定目标\t13\n第3章 简单的应用程序\t14\n3.1 创建项目\t14\n3.2 剖析Activity\t15\n3.3 构建和运行Activity\t17\n第4章 基于XML的布局\t18\n4.1 何谓基于XML的布局\t18\n4.2 为什么使用基于XML的布局\t18\n4.3 举个例子\t19\n4.4 什么时候加@符号\t20\n4.5 怎样在Java中使用布局文件\t20\n4.6 把故事讲完\t20\n第5章 使用基本的部件\t22\n5.1 标签\t22\n5.2 按钮\t23\n5.3 图像\t23\n5.4 字段\t24\n5.5 复选框\t25\n5.6 单选按钮\t27\n5.7 视图\t28\n5.7.1 特性\t28\n5.7.2 方法\t29\n5.7.3 颜色\t29\n第6章 使用容器\t30\n6.1 线性布局\t30\n6.1.1 LinearLayout的概念和特性\t30\n6.1.2 LinearLayout示例\t33\n6.2 相对布局\t36\n6.2.1 RelativeLayout的概念和属性\t36\n6.2.2 RelativeLayout示例\t37\n6.3 表格布局\t40\n6.3.1 TableLayout的概念和特性\t40\n6.3.2 TableLayout示例\t42\n6.4 滚动\t42\n第7章 使用选择部件\t45\n7.1 适配器\t45\n7.2 列表\t46\n7.3 微调控件\t49\n7.4 网格\t51\n7.5 自动完成字段（至少减少35%的输入）\t53\n7.6 画廊\t55\n第8章 使用列表\t57\n8.1 初步改进\t57\n8.2 动态列表\t58\n8.3 更好，更快，更强\t60\n8.3.1 使用convertView\t61\n8.3.2 使用持有者模式\t62\n8.4 交互式列表\t64\n8.5 可重用列表\t68\n8.6 选用其他适配器\t74\n第9章 高级部件和容器\t75\n9.1 选择日期和时间\t75\n9.2 时钟\t78\n9.3 进度条\t79\n9.4 滑动选择\t79\n9.5 选项卡\t80\n9.5.1 构建\t80\n9.5.2 规则\t80\n9.5.3 使用\t81\n9.5.4 增强\t83\n9.5.5 Intent和View\t84\n9.6 翻转\t85\n9.6.1 手工翻转\t86\n9.6.2 动态添加内容\t87\n9.6.3 自动翻转\t88\n9.7 滑动的抽屉\t89\n9.8 其他容器\t91\n第10章 输入法框架\t92\n10.1 键盘，硬还是软\t92\n10.2 按需定制\t92\n10.3 修改附属键\t95\n10.4 适应布局\t96\n10.5 释放创造力\t97\n第11章 使用菜单\t98\n11.1 选项菜单\t98\n11.1.1 创建选项菜单\t98\n11.1.2 添加菜单项和子菜单\t99\n11.2 上下文菜单\t100\n11.3 简单的示例\t100\n11.4 扩展的示例\t104\n11.4.1 菜单的XML结构\t104\n11.4.2 菜单项与XML\t105\n11.4.3 创建菜单\t106\n第12章 字体\t107\n12.1 珍惜已有字体\t107\n12.2 更多字体\t108\n12.3 字形介绍\t109\n第13章 嵌入WebKit浏览器\t111\n13.1 小型浏览器\t111\n13.2 加载内容\t112\n13.3 导航内容\t113\n13.4 扩展应用程序\t114\n13.5 设置、首选项和选项\t115\n第14章 显示弹出消息\t116\n14.1 弹出Toast\t116\n14.2 提醒框\t117\n14.3 检查效果\t117\n第15章 处理线程\t120\n15.1 了解处理程序\t120\n15.1.1 消息\t120\n15.1.2 Runnable\t123\n15.2 就地运行\t123\n15.3 我的UI线程到哪去了\t123\n15.4 异步观感\t123\n15.4.1 原理\t124\n15.4.2 AsyncTask、泛型和Vararg\t124\n15.4.3 AsyncTask的各个阶段\t125\n15.4.4 示例任务\t125\n15.5 附加说明\t129\n第16章 处理Activity生命周期事件\t130\n16.1 Activity的状态\t130\n16.2 Activity的生命周期\t131\n16.2.1 onCreate()和\nonDestroy()\t131\n16.2.2 onStart()、onRestart()和onStop()\t131\n16.2.3 onPause()和onResume()\t131\n16.3 优美的状态\t132\n第17章 创建Intent过滤器\t133\n17.1 你有什么意图\t133\n17.1.1 Intent组成\t133\n17.1.2 Intent路由\t134\n17.2 叙述Intent\t135\n17.3 缩小接收器范围\t136\n17.4 暂停警告\t137\n第18章 启动活动和子活动\t138\n18.1 对等活动和子活动\t138\n18.2 启动\t139\n18.2.1 制作Intent\t139\n18.2.2 进行调用\t139\n18.3 多标签浏览\t142\n第19章 处理旋转\t145\n19.1 销毁问题\t145\n19.2 异同\t145\n19.3 更多保存\t149\n19.4 DIY旋转\t151\n19.5 强制解决问题\t152\n19.6 综述\t154\n第20章 处理资源\t156\n20.1 资源\t156\n20.2 字符串理论\t156\n20.2.1 纯文本字符串\t157\n20.2.2 字符串格式\t157\n20.2.3 样式文本\t157\n20.2.4 样式字符串格式\t158\n20.3 获取图片\t160\n20.4 XML：资源之路\t162\n20.5 杂项\t164\n20.5.1 维度\t164\n20.5.2 颜色\t165\n20.5.3 数组\t165\n20.5.4 因人而异\t166\n第21章 使用首选项\t171\n21.1 获取想要的内容\t171\n21.2 编辑首选项\t172\n21.3 目前的框架\t172\n21.4 让用户自己选择\t173\n21.5 添加“分层”结构\t176\n21.6 弹出对话框\t177\n第22章 管理和访问本地数据库\t180\n22.1 数据库示例\t180\n22.2 SQLite快速入门\t181\n22.3 从头开始\t182\n22.4 设置表\t184\n22.5 数据\t184\n22.6 有因必有果\t185\n22.6.1 Raw查询\t186\n22.6.2 常规查询\t186\n22.6.3 使用构造器进行构建\t186\n22.6.4 使用Cursor\t187\n22.7 无所不在的数据\t188\n第23章 访问文件\t190\n23.1 使用的数据\t190\n23.2 读取与写入\t192\n第24章 充分利用Java库\t196\n24.1 外部限制\t196\n24.2 Ant和JAR\t197\n24.3 参照脚本\t197\n24.4 滴酒不沾\t200\n24.5 评审脚本\t200\n第25章 通过Internet进行通信\t201\n25.1 REST和Relaxation\t201\n25.2 通过Apache HttpClient操作HTTP\t201\n25.3 解析响应\t203\n25.4 要考虑的问题\t205\n第26章 使用内容提供程序\t206\n26.1 数据片段\t206\n26.2 获得句柄\t207\n26.3 查询\t207\n26.4 适应环境\t208\n26.5 舍与得\t209\n26.6 感知BLOB\t210\n第27章 构建内容提供程序\t211\n27.1 剖析\t211\n27.2 类型\t212\n27.3 创建内容提供程序\t212\n27.3.1 第一步：创建提供程序类\t212\n27.3.2 第二步：提供URI\t217\n27.3.3 第三步：声明属性\t218\n27.3.4 第四步：更新清单文件\t218\n27.4 更改通知支持\t219\n第28章 请求和要求许可\t220\n28.1 请求许可\t220\n28.2 声明许可\t221\n28.2.1 通过清单文件强制实施\n许可\t222\n28.2.2 在其他地方强制实施许可\t222\n28.3 别忘了文档\t223\n第29章 创建服务\t224\n29.1 通过类创建服务\t224\n29.2 单例\t225\n29.3 清单文件的作用\t226\n29.4 事件提醒\t227\n29.4.1 回调\t227\n29.4.2 广播Intent\t228\n29.5 远程服务与其他代码\t229\n第30章 调用服务\t230\n30.1 联系的纽带\t230\n30.2 接收广播内容\t232\n第31章 利用通知提醒用户\t234\n31.1 发布通知的类型\t234\n31.1.1 硬件通知\t235\n31.1.2 图标\t235\n31.2 查看运行中的通知发布\t235\n第32章 访问基于位置的服务\t238\n32.1 位置提供程序：它们知道你藏在哪里\t238\n32.2 自我定位\t239\n32.3 移动\t240\n32.4 我们到了吗\t241\n32.5 测试\t241\n第33章 使用MapView和MapActivity显示地图\t242\n33.1 条款无情\t242\n33.2 添加项问题\t242\n33.3 基本要素\t243\n33.4 练习控制\t244\n33.4.1 缩放\t244\n33.4.2 居中\t245\n33.5 地形起伏\t245\n33.6 层上加层\t245\n33.6.1 Overlay类\t246\n33.6.2 绘制ItemizedOverlay\t246\n33.6.3 处理屏幕单击\t247\n33.7 MyLocationOverlay\t248\n33.8 关键所在\t249\n第34章 呼叫处理\t250\n34.1 向管理者报告\t250\n34.2 亲自进行呼叫\t250\n第35章 开发工具\t253\n35.1 层次结构管理\t253\n35.2 令人愉快的Dalvik调试详细演示\t257\n35.2.1 日志记录\t259\n35.2.2 文件推拉\t259\n35.2.3 屏幕截图\t260\n35.2.4 位置更新\t260\n35.2.5 接入呼叫和消息\t261\n35.3 存储卡\t262\n35.3.1 创建卡的映像\t262\n35.3.2 插入卡\t263\n第36章 处理多种屏幕尺寸\t264\n36.1 默认设置\t264\n36.2 多合一\t265\n36.2.1 考虑规则，而不是位置\t265\n36.2.2 考虑物理尺寸\t266\n36.2.3 避免使用实际像素\t266\n36.2.4 选择可缩放的Drawable\t266\n36.3 量身定制\t267\n36.3.1 添加<supports-screens>\t267\n36.3.2 资源和资源集\t268\n36.3.3 查找尺寸\t268\n36.4 一切都是模拟的\t269\n36.4.1 密度不同\t269\n36.4.2 调整密度\t270\n36.4.3 访问实际设备\t270\n36.5 充分利用形势\t271\n36.5.1 用按钮代替菜单\t271\n36.5.2 使用简单的Activity代替选项卡\t271\n36.5.3 整合多个Activity\t272\n36.6 示例：EU4You\t272\n36.6.1 第一个版本\t272\n36.6.2 固定字体大小\t277\n36.6.3 固定大小的图标\t278\n36.6.4 使用空间\t278\n36.6.5 不是浏览器会怎样\t279\n36.7 合作伙伴的错误有哪些\t280\n第37章 手机的处理\t281\n37.1 该应用程序包含显式指令\t281\n37.2 按钮\t282\n37.3 有保障的市场\t282\n37.4 细枝末节\t283\n37.4.1 Archos 5 Android Internet Tablet\t283\n37.4.2 Motorola CLIQ\/DEXT\t284\n37.4.3 Motorola DROID\/Milestone\t284\n37.4.4 Google\/HTC Nexus One\t284\n37.4.5 Motorola BACKFLIP\t284\n第38章 处理平台变更\t285\n38.1 品牌管理\t285\n38.2 让人头疼的更多问题\t286\n38.2.1 视图层次结构\t286\n38.2.2 变更资源\t287\n38.3 处理API变更\t287\n38.3.1 检测版本\t287\n38.3.2 包装API\t287\n第39章 未来何去何从\t292\n39.1 问题——部分答案\t292\n39.2 源代码\t292\n39.3 获得最新的信息\t293",
      "pages": "308",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4532717.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4532717.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4532717.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/5353163\/",
      "id": "5353163",
      "publisher": "人民邮电出版社",
      "isbn10": "7115241163",
      "isbn13": "9787115241160",
      "title": "Android开发入门教程",
      "url": "http:\/\/api.douban.com\/v2\/book\/5353163",
      "alt_title": "Beginning Android 2",
      "author_intro": "Mark L. Murphy是著名Android学习社区CommonsWare的创始人，畅销书Busy Coder’s Guide to Android Development的作者。拥有25年软件开发经验，从1970年代末的TRS-80到21世纪最新的移动设备，都留下了他开发实践的足迹。三次创业的经历，让Mark拥有丰富的社会阅历，曾为财富500强公司提供应用程序开发方面的咨询服务。Mark除了作为相关会议及培训方面的头面人物之外，还为著名Android博客AndroidGuys和专业IT杂志NetworkWorld的专栏写作。他也是文集Rebooting America（Personal Democracy Press，2008）的作者之一。",
      "summary": "欢迎进入神秘的Android世界！自2008年相关设备进入市场以来，Android的发展日新月异，Android设备日益繁盛，而其背后开发应用潜藏的经济效益也展露无遗！\n本书将引领大家开发引人入胜的Android 2.x应用，包括如何设计GUI、如何使用GPS和访问Web服务，以及如何将理念转换成实际应用！ 本书包含大量即时可用的简单示例，自此之后，构建实际、流行的应用将不再困难，只要你投入时间，发挥出创造力。\n通读本书，你将了解以下内容：\n        应用Android为各种手机和设备构建基于Java的移动应用\n        同时使用Android部件框架和内置的WebKit驱动的Web浏览器组件创建UI\n        使用Android引擎特性，包括位置跟踪、地图、因特网访问\n        使用和创建整合了活动、服务、内容提供程序和广播接收器的Android应用\n        支持Android 1.5、1.6和2.0 设备，包括处理多个版本的Android OS、多种屏幕尺寸和其他特定于设备的特性",
      "series": {
        "id": "660",
        "title": "图灵程序设计丛书"
      },
      "price": "59.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 20,
        "average": "8.0",
        "min": 0
      },
      "subtitle": "卷II",
      "author": [
        "邓凡平"
      ],
      "pubdate": "2012-8",
      "tags": [
        {
          "count": 70,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 27,
          "name": "android",
          "title": "android"
        },
        {
          "count": 18,
          "name": "源码分析",
          "title": "源码分析"
        },
        {
          "count": 14,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 9,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 7,
          "name": "程序员",
          "title": "程序员"
        },
        {
          "count": 6,
          "name": "移动开发",
          "title": "移动开发"
        },
        {
          "count": 6,
          "name": "，android，内核",
          "title": "，android，内核"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s11162474.jpg",
      "binding": "",
      "translator": [],
      "catalog": "前　言\n第1章　搭建Android源码工作环境 \/ 1\n1.1　Android系统架构 \/ 2\n1.2　搭建开发环境 \/ 3\n1.2.1　下载源码 \/ 3\n1.2.2　编译源码 \/ 4\n1.2.3　利用Eclipse调试system_process \/ 5\n1.3　本章小结 \/ 11\n第2章　深入理解Java Binder和MessageQueue \/ 12\n2.1　概述 \/ 13\n2.2　Java层中的Binder架构分析 \/ 13\n2.2.1　Binder架构总览 \/ 13\n2.2.2　初始化Java层Binder框架 \/ 14\n2.2.3　addService实例分析 \/ 17\n2.2.4　Java层Binder架构总结 \/ 26\n2.3　心系两界的MessageQueue \/ 27\n2.3.1　MessageQueue的创建 \/ 27\n2.3.2　提取消息 \/ 28\n2.3.3　nativePollOnce函数分析 \/ 31\n2.3.4　MessageQueue总结 \/ 41\n2.4　本章小结 \/ 42\n第3章　深入理解SystemServer \/ 44\n3.1  概述 \/ 45\n3.2　SystemServer分析 \/ 45\n3.2.1　main函数分析 \/ 45\n3.2.2　Service群英会 \/ 48\n3.3　EntropyService分析 \/ 49\n3.4　DropBoxManagerService分析 \/ 50\n3.4.1　DBMS构造函数分析 \/ 51\n3.4.2　dropbox日志文件的添加 \/ 51\n3.4.3　DBMS和settings数据库 \/ 56\n3.5　DiskStatsService和DeviceStorageMonitorService分析 \/ 56\n3.5.1　DiskStatsService分析 \/ 56\n3.5.2　DeviceStorageManagerService分析 \/ 58\n3.6　SamplingProfilerService分析 \/ 60\n3.6.1　SamplingProfilerService构造函数分析 \/ 61\n3.6.2　SamplingProfilerIntegration分析 \/ 62\n3.7　ClipboardService分析 \/ 64\n3.7.1　复制数据到剪贴板  \/ 64\n3.7.2　从剪切板粘贴数据 \/ 67\n3.7.3　CBS中的权限管理 \/ 69\n3.8  本章小结 \/ 73\n第4章　深入理解PackageManagerService \/ 74\n4.1　概述 \/ 75\n4.2　初识PackageManagerService \/ 76\n4.3　PKMS的main函数分析 \/ 77\n4.3.1　构造函数分析之前期准备工作 \/ 78\n4.3.2　构造函数分析之扫描Package \/ 90\n4.3.3　构造函数分析之扫尾工作 \/ 105\n4.3.4　PKMS构造函数总结 \/ 105\n4.4　APK Installation分析 \/ 105\n4.4.1　adb install分析 \/ 105\n4.4.2　pm分析 \/ 107\n4.4.3　installPackageWithVerification函数分析 \/ 109\n4.4.4　APK 安装流程总结 \/ 121\n4.4.5　Verification介绍 \/ 122\n4.5　queryIntentActivities分析 \/ 124\n4.5.1　Intent及IntentFilter介绍 \/ 124\n4.5.2　Activity信息的管理 \/ 125\n4.5.3　Intent 匹配查询分析 \/ 128\n4.5.4　queryIntentActivities总结 \/ 131\n4.6　installd及UserManager介绍 \/ 131\n4.6.1　installd介绍 \/ 131\n4.6.2　UserManager介绍 \/ 136\n4.7　本章学习指导 \/ 138\n4.8　本章小结 \/ 138\n第5章　深入理解PowerManagerService \/ 139\n5.1　概述 \/ 140\n5.2　初识PowerManagerService \/ 140\n5.2.1　PMS构造函数分析 \/ 141\n5.2.2　init分析 \/ 141\n5.2.3　systemReady分析 \/ 147\n5.2.4　BootComplete处理 \/ 148\n5.2.5　初识PowerManagerService总结 \/ 149\n5.3　PMS WakeLock分析 \/ 149\n5.3.1　WakeLock客户端分析 \/ 149\n5.3.2　PMS acquireWakeLock分析 \/ 151\n5.3.3　Power类及LightService类介绍 \/ 160\n5.3.4　WakeLock总结 \/ 163\n5.4　userActivity及Power按键处理分析 \/ 164\n5.4.1　userActivity分析 \/ 164\n5.4.2　Power按键处理分析 \/ 167\n5.5　BatteryService及BatteryStatsService分析 \/ 168\n5.5.1　BatteryService分析 \/ 169\n5.5.2　BatteryStatsService分析 \/ 172\n5.5.3　BatteryService及BatteryStatsService总结 \/ 182\n5.6　本章学习指导 \/ 183\n5.7　本章小结 \/ 183\n第6章　深入理解ActivityManagerService \/ 184\n6.1　概述 \/ 185\n6.2　初识ActivityManagerService \/ 186\n6.2.1　ActivityManagerService的main函数分析 \/ 187\n6.2.2　AMS的 setSystemProcess分析 \/ 197\n6.2.3　AMS的 installSystemProviders函数分析 \/ 202\n6.2.4　AMS的 systemReady分析 \/ 211\n6.2.5　初识ActivityManagerService总结 \/ 218\n6.3　startActivity分析 \/ 219\n6.3.1　从am说起 \/ 219\n6.3.2　AMS的startActivityAndWait函数分析 \/ 221\n6.3.3　startActivityLocked分析 \/ 230\n6.4　Broadcast和BroadcastReceiver分析 \/ 265\n6.4.1　registerReceiver流程分析 \/ 267\n6.4.2　sendBroadcast流程分析 \/ 272\n6.4.3　BROADCAST_INTENT_MSG消息处理函数 \/ 276\n6.4.4　应用进程处理广播分析 \/ 282\n6.4.5　广播处理总结 \/ 284\n6.5　startService之按图索骥 \/ 285\n6.5.1　Service知识介绍 \/ 285\n6.5.2　startService流程图 \/ 286\n6.6　AMS中的进程管理 \/ 287\n6.6.1　Linux进程管理介绍 \/ 287\n6.6.2　关于Android中的进程管理的介绍 \/ 289\n6.6.3　AMS进程管理函数分析 \/ 294\n6.6.4　AMS进程管理总结 \/ 305\n6.7　App的 Crash处理 \/ 305\n6.7.1　应用进程的Crash处理 \/ 306\n6.7.2　AMS的handleApplicationCrash分析 \/ 306\n6.7.3　AppDeathRecipient binderDied分析 \/ 309\n6.7.4　App的Crash处理总结 \/ 313\n6.8　本章学习指导 \/ 314\n6.9　本章小结 \/ 315\n第7章　深入理解ContentProvider \/ 316\n7.1　概述 \/ 317\n7.2　MediaProvider的启动及创建 \/ 318\n7.2.1　Context的getContentResolver函数分析 \/ 318\n7.2.2　MediaStore.Image.Media的query函数分析 \/ 319\n7.2.3　MediaProvider的启动及创建总结 \/ 329\n7.3　SQLite创建数据库分析  \/ 330\n7.3.1　SQLite及SQLiteDatabase家族 \/ 330\n7.3.2　MediaProvider创建数据库分析 \/ 335\n7.3.3　SQLiteDatabase创建数据库的分析总结 \/ 344\n7.4　Cursor 的query函数的实现分析 \/ 345\n7.4.1　提取query关键点 \/ 346\n7.4.2　MediaProvider 的query分析 \/ 349\n7.4.3　query关键点分析 \/ 356\n7.4.4　Cursor query实现分析总结 \/ 368\n7.5　Cursor close函数实现分析 \/ 368\n7.5.1　客户端close的分析 \/ 369\n7.5.2　服务端close的分析 \/ 371\n7.5.3　finalize函数分析 \/ 372\n7.5.4　Cursor close函数总结 \/ 373\n7.6　ContentResolver openAssetFileDescriptor函数分析 \/ 373\n7.6.1　openAssetFileDescriptor之客户端调用分析 \/ 374\n7.6.2　ContentProvider的 openTypedAssetFile函数分析 \/ 376\n7.6.3　跨进程传递文件描述符的探讨 \/ 379\n7.6.4　openAssetFileDescriptor函数分析总结 \/ 384\n7.7　本章学习指导 \/ 384\n7.8　本章小结 \/ 385\n第8章　深入理解ContentService和AccountManagerService \/ 386\n8.1　概述 \/ 387\n8.2　数据更新通知机制分析 \/ 387\n8.2.1　初识ContentService \/ 388\n8.2.2　ContentResovler 的registerContentObserver分析 \/ 389\n8.2.3　ContentResolver的 notifyChange分析 \/ 391\n8.2.4　数据更新通知机制总结和深入探讨 \/ 393\n8.3　AccountManagerService分析 \/ 395\n8.3.1　初识AccountManagerService \/ 396\n8.3.2　AccountManager addAccount分析 \/ 402\n8.3.3　AccountManagerService的分析总结 \/ 414\n8.4　数据同步管理SyncManager分析 \/ 415\n8.4.1　初识SyncManager \/ 415\n8.4.2　ContentResolver 的requestSync分析 \/ 424\n8.4.3　数据同步管理SyncManager分析总结 \/ 436\n8.5　本章学习指导 \/ 437\n8.6　本章小结 \/ 437\n“深入理解Android”系列书籍的规划路线图 \/ 438",
      "ebook_url": "http:\/\/read.douban.com\/ebook\/15169794\/",
      "pages": "440",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s11162474.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s11162474.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s11162474.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/11542973\/",
      "id": "11542973",
      "publisher": "机械工业出版社",
      "isbn10": "7111389182",
      "isbn13": "9787111389187",
      "title": "深入理解Android",
      "url": "http:\/\/api.douban.com\/v2\/book\/11542973",
      "alt_title": "",
      "author_intro": "邓凡平 资深Android开发工程师和系统工程师，热衷于Android源代码的研究，对Android的架构设计和实现原理有非常深刻的认识和理解，应用开发经验也十分丰富。《深入理解Android：卷I》的作者，同时也是“深入理解Andriod”系列图书的总策划。目前就职于国内领先的Android企业中科创达（ThunderSoft），负责Android Framework的开发和维护。喜欢钻研，乐于分享，活跃于CSDN、51CTO和开源中国等专业技术社区，撰写的Android Framework源码分析的系列文章深受读者欢迎。此外，他对Linux内核、C\/C++\/Python相关的技术，以及高性能网络服务器和多核并行开发等也有一定的研究。",
      "summary": "《深入理解Android:卷2》是“深入理解Android”系列的第2本，第1本书上市后获得广大读者高度评价，在Android开发者社群内口口相传。《深入理解Android:卷2》不仅继承了第1本书的优点并改正了其在细微处存在的一些不足，而且还在写作的总体思想上进行了创新，更强调从系统设计者的角度去分析Android系统中各个模块内部的实现原理和工作机制。从具体内容上讲，重点是Android Framework的Java层，对Java层涉及的核心模块和服务进行了深入而细致的分析。通过《深入理解Android:卷2》，读者不仅能对Android系统本身有更深入的理解，而且还能掌握分析大型复杂源代码的能力。\n《深入理解Android:卷2》共8章：第1章介绍了阅读本书所需要做的准备工作，包括Android 4.0源码的下载和编译、Eclipse环境的搭建，以及Android系统进程（system_process）的调试等；第2章对Java Binder和MessageQueue的实现进行了深入分析；第3章仔细剖析了SystemServer的工作原理，这些服务包括EntropyService、DropboxManagerService、DiskStatsService、DeviceStorageMonitorService、SamplingProfilerService和ClipboardService；第4章对系统中负责Package信息查询和APK安装、卸载、更新等工作的服务PackageManagerService进行了详细分析；第5章则对Android系统中负责电源管理的核心服务 PowerManagerService的原理进行了一番深入的分析；第6章以ActivityManagerService为分析重点，它的启动、Activity的创建和启动、BroadcastReceiver的工作原理、Android中的进程管理等内容展开了较为深入的研究；第7章对ContentProvider的创建和启动、SQLite、Cursor query和close的实现等进行了深入分析；第8章以ContentService和AccountManagerService为分析对象，介绍了数据更新通知机制的实现，以及账户管理和数据同步等相关知识。\n\n海报：",
      "ebook_price": "25.00",
      "series": {
        "id": "28292",
        "title": "深入理解Android"
      },
      "price": "79.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 44,
        "average": "7.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Sayed Hashimi"
      ],
      "pubdate": "2010-12-5",
      "tags": [
        {
          "count": 84,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 20,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 17,
          "name": "精通Android",
          "title": "精通Android"
        },
        {
          "count": 15,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 11,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 9,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 7,
          "name": "android",
          "title": "android"
        },
        {
          "count": 3,
          "name": "人民邮电出版社",
          "title": "人民邮电出版社"
        }
      ],
      "origin_title": "Pro Android 2",
      "image": "https://img1.doubanio.com\/mpic\/s4546847.jpg",
      "binding": "平装",
      "translator": [
        "杨越"
      ],
      "catalog": "第1章 Android计算平台简介\t1\n1.1 面向新PC的全新平台\t1\n1.2 Android的历史\t2\n1.3 Dalvik VM剖析\t4\n1.4 比较Android与Java ME\t5\n1.5 理解Android软件栈\t8\n1.6 使用Android SDK开发最终用户应用程序\t9\n1.6.1 Android模拟器\t9\n1.6.2 Android UI\t10\n1.6.3 Android基础组件\t10\n1.6.4 高级UI概念\t11\n1.6.5 Android Service组件\t13\n1.6.6 Android媒体和电话组件\t13\n1.6.7 Android Java包\t15\n1.7 利用Android源代码\t18\n1.8 小结\t19\n第2章 初识Android\t20\n2.1 安装环境\t20\n2.1.1 下载JDK 6\t20\n2.1.2 下载Eclipse 3.5\t21\n2.1.3 下载Android SDK\t21\n2.1.4 安装ADT\t22\n2.2 了解基本组件\t24\n2.2.1 View\t24\n2.2.2 Activity\t24\n2.2.3 Intent\t25\n2.2.4 ContentProvider\t25\n2.2.5 Service\t25\n2.2.6 AndroidManifest.xml\t25\n2.2.7 AVD\t26\n2.3 Hello World!\t26\n2.4 AVD\t30\n2.5 剖析Android应用程序的结构\t32\n2.6 分析Notepad应用程序\t33\n2.6.1 加载和运行Notepad应用程序\t34\n2.6.2 分解应用程序\t35\n2.7 了解应用程序生命周期\t41\n2.8 调试应用程序\t43\n2.9 小结\t44\n第3章 使用资源、ContentProvider和Intent\t45\n3.1 资源\t46\n3.1.1 字符串资源\t46\n3.1.2 布局资源\t48\n3.1.3 资源引用语法\t49\n3.1.4 定义资源ID供以后使用\t50\n3.1.5 已编译和未编译的Android资源\t51\n3.1.6 Android关键资源\t52\n3.1.7 使用任意XML资源文件\t58\n3.1.8 使用原始资源\t59\n3.1.9 使用资产\t60\n3.1.10 了解资源目录结构\t60\n3.2 ContentProvider\t61\n3.2.1 探索Android内置的ContentProvider\t62\n3.2.2 ContentProvider的架构\t67\n3.2.3 实现ContentProvider\t78\n3.3 Intent\t88\n3.3.1 Android中可用的Intent\t89\n3.3.2 Intent和数据URI\t90\n3.3.3 一般操作\t91\n3.3.4 使用extra信息\t92\n3.3.5 使用组件直接调用活动\t93\n3.3.6 组件设计人员最佳实践\t94\n3.3.7 Intent类别\t95\n3.3.8 将Intent解析为组件的规则\t97\n3.3.9 练习使用ACTION_PICK\t97\n3.3.10 练习使用GET_CONTENT操作\t99\n3.4 本章的更多资源\t100\n3.5 小结\t101\n第4章 构建用户界面和使用控件\t102\n4.1 Android中的UI开发\t102\n4.2 Android中的常见控件\t107\n4.2.1 文本控件\t107\n4.2.2 按钮控件\t110\n4.2.3 列表控件\t116\n4.2.4 网格控件\t119\n4.2.5 日期和时间控件\t121\n4.3 Android中其他有趣的控件\t122\n4.3.1 MapView控件\t123\n4.3.2 Gallery控件\t123\n4.3.3 Spinner控件\t123\n4.4 布局管理器\t124\n4.4.1 LinearLayout布局管理器\t124\n4.4.2 TableLayout布局管理器\t127\n4.4.3 RelativeLayout布局管理器\t131\n4.4.4 FrameLayout布局管理器\t132\n4.4.5 为各种设备配置自定义布局\t134\n4.5 适配器\t136\n4.5.1 SimpleCursorAdapter\t137\n4.5.2 了解ArrayAdapter\t137\n4.5.3 创建自定义适配器\t138\n4.6 使用Hierarchy Viewer调试和\n优化布局\t138\n4.7 小结\t141\n第5章 使用菜单和对话框\t142\n5.1 Android菜单\t142\n5.1.1 创建菜单\t143\n5.1.2 使用菜单组\t144\n5.1.3 响应菜单项\t145\n5.1.4 创建测试工具来测试菜单\t146\n5.2 使用其他菜单类型\t152\n5.2.1 展开的菜单\t152\n5.2.2 使用图标菜单\t152\n5.2.3 使用子菜单\t153\n5.2.4 配置系统菜单\t154\n5.2.5 使用上下文菜单\t154\n5.2.6 使用交替菜单\t157\n5.2.7 使用菜单响应数据变化\t160\n5.3 通过XML文件加载菜单\t160\n5.3.1 XML菜单资源文件的结构\t160\n5.3.2 填充XML菜单资源文件\t161\n5.3.3 响应基于XML的菜单项\t161\n5.3.4 其他XML菜单标记简介\t162\n5.4 使用Android中的对话框\t163\n5.4.1 设计提醒对话框\t164\n5.4.2 设计提示对话框\t166\n5.4.3 Android对话框的特性\t170\n5.4.4 重新设计提示对话框\t170\n5.5 使用托管对话框\t171\n5.5.1 理解托管对话框协议\t171\n5.5.2 将非托管对话框转换为托管\n对话框\t172\n5.5.3 简化托管对话框协议\t173\n5.6 小结\t180\n第6章 2D动画揭秘\t181\n6.1 逐帧动画\t181\n6.1.1 计划逐帧动画\t182\n6.1.2 创建活动\t183\n6.1.3 将动画添加到活动\t184\n6.2 布局动画\t186\n6.2.1 基本的补间动画类型\t187\n6.2.2 计划布局动画测试工具\t188\n6.2.3 创建活动和ListView\t188\n6.2.4 将ListView制作成动画\t190\n6.2.5 使用插值器\t193\n6.3 视图动画\t195\n6.3.1 理解视图动画\t195\n6.3.2 添加动画\t197\n6.3.3 使用Camera实现2D图像的\n深度效果\t200\n6.3.4 探索AnimationListener类\t201\n6.3.5 关于变换矩阵的一些说明\t202\n6.4 小结\t203\n第7章 探索安全性和基于位置的服务\t204\n7.1 理解Android安全性模型\t204\n7.1.1 安全性概念概述\t204\n7.1.2 为部署签名应用程序\t205\n7.2 执行运行时安全性检查\t209\n7.2.1 进程边界上的安全性\t209\n7.2.2 声明和使用权限\t209\n7.2.3 理解和使用自定义权限\t211\n7.2.4 理解和使用URI权限\t216\n7.3 使用基于位置的服务\t216\n7.3.1 地图包\t216\n7.3.2 位置包\t226\n7.4 小结\t241\n第8章 构建和使用服务\t242\n8.1 使用HTTP服务\t242\n8.1.1 将HttpClient用于HTTP GET\n请求\t242\n8.1.2 将HttpClient用于HTTP POST请求\t244\n8.1.3 处理异常\t247\n8.1.4 解决多线程问题\t249\n8.2 执行进程间通信\t252\n8.2.1 创建简单服务\t252\n8.2.2 Android中的服务\t253\n8.2.3 本地服务\t254\n8.2.4 AIDL服务\t258\n8.2.5 在AIDL中定义服务接口\t258\n8.2.6 实现AIDL接口\t261\n8.2.7 从客户端应用程序调用服务\t262\n8.2.8 向服务传递复杂的类型\t266\n8.3 小结\t274\n第9章 使用媒体框架和电话API\t275\n9.1 使用媒体API\t275\n9.1.1 了解和使用SD卡\t275\n9.1.2 播放音频内容\t278\n9.1.3 setDataSource方法\t281\n9.1.4 播放视频内容\t282\n9.1.5 MediaPlayer的一些注意事项\t284\n9.1.6 音频录制\t284\n9.1.7 视频录制\t288\n9.1.8 MediaStore类\t293\n9.1.9 将媒体内容添加到媒体存储\t297\n9.2 使用电话API\t299\n9.2.1 使用SMS\t299\n9.2.2 使用电话管理器\t305\n9.3 小结\t306\n第10章 使用OpenGL进行3D图形\n编程\t307\n10.1 了解OpenGL的历史和背景\t308\n10.1.1 OpenGL ES\t308\n10.1.2 OpenGL ES与Java ME\t309\n10.1.3 M3G：另一种Java ME 3D\n图形标准\t310\n10.2 OpenGL的基本原理\t310\n10.2.1 使用OpenGL ES进行基本\n绘制\t311\n10.2.2 OpenGL照相机和坐标\t315\n10.3 在Android中使用OpenGL ES\t318\n10.3.1 使用GLSurfaceView和相关类\t319\n10.3.2 绘制三角形的简单测试框架\t320\n10.3.3 更改照相机设置\t324\n10.3.4 使用索引添加另一个三角形\t325\n10.3.5 为简单的OpenGL三角形\n制作动画\t326\n10.4 OpenGL的运用：形状和纹理\t329\n10.4.1 演示中使用的简单菜单技巧\t329\n10.4.2 绘制矩形\t333\n10.4.3 使用形状\t335\n10.4.4 使用纹理\t345\n10.4.5 绘制多个图形\t349\n10.4.6 OpenGL资源\t352\n10.5 小结\t353\n第11章 管理和组织首选项\t354\n11.1 探索首选项框架\t354\n11.1.1 ListPreference\t354\n11.1.2 以编程方式操作首选项\t361\n11.1.3 CheckBoxPreference\t361\n11.1.4 EditTextPreference\t363\n11.1.5 RingtonePreference\t365\n11.2 组织首选项\t366\n11.3 小结\t368\n第12章 活动文件夹\t369\n12.1 探索活动文件夹\t369\n12.1.1 用户如何使用活动文件夹\t370\n12.1.2 构建活动文件夹\t372\n12.2 小结\t382\n第13章 主屏幕部件\t383\n13.1 主屏幕部件的架构\t383\n13.1.1 什么是主屏幕部件\t383\n13.1.2 主屏幕部件的用户体验\t384\n13.1.3 部件的生命周期\t386\n13.2 示例部件应用程序\t390\n13.2.1 定义部件提供程序\t391\n13.2.2 定义部件尺寸\t392\n13.2.3 与部件布局相关的文件\t394\n13.2.4 实现部件提供程序\t395\n13.2.5 实现部件模型\t397\n13.2.6  实现部件配置活动\t403\n13.3 部件局限性和扩展\t407\n13.4 资源\t407\n13.5 小结\t408\n第14章 Android搜索\t409\n14.1 Android搜索体验\t409\n14.1.1 探索Android全局搜索\t410\n14.1.2 为全局搜索启用建议提供\n程序\t413\n14.1.3 QSB与建议提供程序交互\t415\n14.2 活动与搜索键交互\t416\n14.2.1 常规活动上的搜索键行为\t417\n14.2.2 禁用了搜索的活动的行为\t422\n14.2.3 通过菜单调用搜索\t423\n14.2.4 本地搜索和相关活动\t425\n14.2.5 启用键入搜索\t429\n14.3 实现简单建议提供程序\t430\n14.3.1 计划简单建议提供程序\t431\n14.3.2 简单建议提供程序实现文件\t431\n14.3.3 实现SimpleSuggestion- Provider类\t431\n14.3.4 简单建议提供程序搜索活动\t434\n14.3.5 搜索调用方活动\t438\n14.3.6 简单建议提供程序用户体验\t439\n14.4 实现自定义建议提供程序\t441\n14.4.1 计划自定义建议提供程序\t442\n14.4.2 SuggestURLProvider项目\n实现文件\t442\n14.4.3 实现SuggestUrlProvider类\t443\n14.4.4 实现自定义建议提供程序\n的搜索活动\t450\n14.4.5 自定义建议提供程序描述\n文件\t454\n14.4.6 自定义建议用户体验\t455\n14.5 使用操作键和应用程序特有的搜索数据\t458\n14.5.1 在Android搜索中使用\n操作键\t458\n14.5.2 使用应用程序特定的搜索\n上下文\t460\n14.6 资源\t461\n14.7 小结\t462\n第15章 文本到语音转换和\n翻译API\t463\n15.1 Android中的文本到语音转换\t463\n15.2 使用语段跟踪语音\t467\n15.3 使用音频文件代替话音\t468\n15.4 TTS引擎的高级功能\t474\n15.4.1 设置音频流\t475\n15.4.2 使用耳标\t475\n15.4.3 播放静音\t476\n15.4.4 使用语言方法\t476\n15.5 将文本翻译为不同语言\t477\n15.6 小结\t486\n第16章 触摸屏\t487\n16.1 了解MotionEvent\t487\n16.1.1 使用VelocityTracker\t498\n16.1.2 探索拖放操作\t499\n16.2 多点触摸\t502\n16.3 触摸地图\t508\n16.4 手势\t510\n16.5 小结\t516\n第17章 Titanium Mobile：基于WebKit\n的Android开发方法\t517\n17.1 Titanium Mobile概述\t518\n17.1.1 架构\t518\n17.1.2 Titanium生态系统\t521\n17.1.3 下载和安装Titanium\nDeveloper\t521\n17.2 熟悉规则：第一个项目\t528\n17.2.1 创建Titanium Mobile项目\t528\n17.2.2 设计“Hello World”\t530\n17.2.3 配置应用程序以供调试\t531\n17.2.4 封装应用程序\t533\n17.2.5 将.apk文件安装到自己的\n模拟器上\t535\n17.3 规划真实的应用程序\t536\n17.3.1 JQuery必备知识\t536\n17.3.2 高级JavaScript的必备知识\t539\n17.3.3 理解微型模板引擎\t541\n17.3.4 其他Titanium Mobile API\t544\n17.4 小结\t544\n第18章 使用Android Market\t546\n18.1 成为发布者\t546\n18.1.1 遵守规则\t547\n18.1.2 开发人员控制台\t548\n18.2 准备销售应用程序\t549\n18.2.1 针对不同设备进行测试\t549\n18.2.2 支持不同的屏幕尺寸\t549\n18.2.3 准备上传\nAndroidManifest.xml\t550\n18.2.4 本地化应用程序\t550\n18.2.5 准备应用程序图标\t551\n18.2.6 付费应用程序考虑因素\t551\n18.2.7 将用户引导至Market\t552\n18.2.8 准备上传.apk文件\t552\n18.3 上传应用程序\t553\n18.4 Android Market上的用户体验\t554\n18.5 小结\t556\n第19章 前景展望和资源\t557\n19.1 Android的最新状态\t557\n19.1.1 基于Android的移动设备\n制造商\t557\n19.1.2 Android应用程序商店\t559\n19.2 Android前景展望\t560\n19.2.1 移动操作系统概览\t560\n19.2.2 对比Android与其他移动\n操作系统\t562\n19.2.3 HTML 5支持及其意义\t563\n19.3 Android资源\t564\n19.3.1 核心Android资源\t564\n19.3.2 与Android新闻相关的资源\t564\n19.4 小结\t565\n",
      "pages": "580",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4546847.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4546847.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4546847.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/5367372\/",
      "id": "5367372",
      "publisher": "人民邮电出版社",
      "isbn10": "7115241732",
      "isbn13": "9787115241733",
      "title": "精通Android 2",
      "url": "http:\/\/api.douban.com\/v2\/book\/5367372",
      "alt_title": "Pro Android 2",
      "author_intro": "\nSayed Y. Hashimi：\n佛罗里达大学工程学硕士。具有医疗、金融、物流和面向服务的架构等多个领域的软件开发经验，使用各种编程语言和平台（包括C\/C++、MFC、J2EE和.NET）开发过大规模的分布式应用程序。他在重要软件杂志上发表过许多文章，还为Apress撰写了其他广受欢迎的书籍。个人主页为www.sayedhashimi.com。\nSatya Komatineni：\n印度理工大学电子工程专业硕士。有20多年的程序设计经验，开发过用于Java Web开发的简单开源工具AspireWeb（www.activeintellect.com\/aspire）以及开源个人Web 操作系统——Aspire Knowledge Central（www.knowledgefolders.com）。擅长使用Java、.NET和数据库技术进行Web开发，发表过30多篇这方面的文章。他经常在与创新技术相关的行业大会上发言，并为java.net上的网络博客撰稿。\nDave MacLean：\n滑铁卢大学系统设计工程专业学士。早在1980年就从事软件开发工作，使用过多种语言进行编程，曾开发机器人自动化、数据仓库、Web自助服务应用程序、EDI事务处理器等系统。Dave曾在Sun、IBM、Trimble Navigation、通用汽车等公司工作。",
      "summary": "Android是Google的开源移动开发平台，业已成为主流的移动平台系统。\n本书是备受推崇的Android参考书，涵盖了为嵌入式设备构建应用程序所需的全部基础知识，并论述了一些高级主题，如自定义3D组件、OpenGL、触摸屏、手势等。本书强调实用，突出趣味，寓教于乐。作者通过妙趣横生、切实可行的示例，向读者展示了如何使用Google最新的Android SDK来构建应用程序，深入全面地介绍了从游戏到Google应用程序（如Google Docs的插件）等移动应用程序的构建过程。\n本书是移动开发大师的真知灼见与实际应用程序相结合的产物。如果你对Android移动开发感兴趣，那么本书不可错过。",
      "series": {
        "id": "660",
        "title": "图灵程序设计丛书"
      },
      "price": "89.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 43,
        "average": "7.2",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "W.Frank Ableson",
        "Charlie Collins",
        "Robi Sen"
      ],
      "pubdate": "2010-3",
      "tags": [
        {
          "count": 69,
          "name": "android",
          "title": "android"
        },
        {
          "count": 14,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 9,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 6,
          "name": "计算机科学",
          "title": "计算机科学"
        },
        {
          "count": 5,
          "name": "Google",
          "title": "Google"
        },
        {
          "count": 5,
          "name": "移动开发",
          "title": "移动开发"
        },
        {
          "count": 4,
          "name": "Java",
          "title": "Java"
        },
        {
          "count": 4,
          "name": "手机开发",
          "title": "手机开发"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s4205363.jpg",
      "binding": "平装",
      "translator": [
        "张波",
        "高朝勤",
        "杨越"
      ],
      "catalog": "",
      "pages": "342",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4205363.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4205363.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4205363.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4320723\/",
      "id": "4320723",
      "publisher": "人民邮电出版社",
      "isbn10": "7115222517",
      "isbn13": "9787115222510",
      "title": "Google Android揭秘",
      "url": "http:\/\/api.douban.com\/v2\/book\/4320723",
      "alt_title": "Unlocking Android: a developer's guide",
      "author_intro": "",
      "summary": "这是一本全面介绍Android 相关知识的图书，全书分为三个部分，由浅入深，从Android 初级知识，讲到一些关于核心编程的实用示例，最后还讨论了一些高级应用程序的话题。在介绍Android 编程的时候，各主题都使用了独立的示例来演示，这些示例也都可单独作为想在Android 编程中大展拳脚的编程新手或资深开发者的参考。\n本书适合Android 开发人员和技术爱好者阅读。如果能从头到尾读完本书，读者将对Android 有深入的了解，从而能在Android 开发中大显身手。",
      "series": {
        "id": "660",
        "title": "图灵程序设计丛书"
      },
      "price": "59.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 34,
        "average": "8.4",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "[韩]金泰延",
        "宋亨周",
        "朴知勋",
        "李白",
        "林起永"
      ],
      "pubdate": "2012-4",
      "tags": [
        {
          "count": 86,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 31,
          "name": "框架",
          "title": "框架"
        },
        {
          "count": 20,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 14,
          "name": "android",
          "title": "android"
        },
        {
          "count": 9,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 6,
          "name": "Programming",
          "title": "Programming"
        },
        {
          "count": 5,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 5,
          "name": "Linux\/Unix",
          "title": "Linux\/Unix"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s26553749.jpg",
      "binding": "",
      "translator": [],
      "catalog": "",
      "pages": "424",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s26553749.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s26553749.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s26553749.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/10570841\/",
      "id": "10570841",
      "publisher": "",
      "isbn10": "7115274762",
      "isbn13": "9787115274762",
      "title": "Android框架揭秘",
      "url": "http:\/\/api.douban.com\/v2\/book\/10570841",
      "alt_title": "",
      "author_intro": "",
      "summary": "《Android框架揭秘》通过对Android系统源代码的分析，主要介绍Android框架的初始化过程及主要组件的工作原理。作者直接分析和整理了Android框架的主要源代码，并详细讲解了理解框架工作原理所需的各种基础知识和构成实际Android平台骨干的服务框架。其中的主要内容包括：通过启动程序了解Android框架的概要，移植Android以及如何开发适合各种机器的应用程序，分析Android框架所需的基础知识，JNI(Java Native Interface)与Binder基础知识，Zygote、Service Manager、Service Server等Android核心组件，Android服务框架的结构与理解，通过Camera Service、Activity Manager Service等服务分析实际的Android服务等。",
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 56,
        "average": "7.2",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "[美] Rick Rogers"
      ],
      "pubdate": "2010-9",
      "tags": [
        {
          "count": 44,
          "name": "android",
          "title": "android"
        },
        {
          "count": 23,
          "name": "移动开发",
          "title": "移动开发"
        },
        {
          "count": 17,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 10,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 7,
          "name": "入门",
          "title": "入门"
        },
        {
          "count": 6,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 4,
          "name": "工具书",
          "title": "工具书"
        },
        {
          "count": 4,
          "name": "编程",
          "title": "编程"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s11309162.jpg",
      "binding": "",
      "translator": [
        "李耀亮"
      ],
      "catalog": "第1部分：开发环境概览第1章  Android操作系统概述  1.1  为什么选择Android  1.2  开放式手机联盟  1.3  Android运行环境  1.4  Android应用程序的组成部分  1.5  Android活动的生命周期  1.6  Android服务的生命周期  1.7  本书的组织结构第2章  搭建Android开发环境  2.1  搭建开发环境  2.2  “Hello Android”程序    2.2.1  目标    2.2.2  创建一个新的Android应用程序：Hello World    2.2.3  Hello World程序代码    2.2.4  运行Hello World程序第3章  使用Android开发环境  3.1  MicroJobs：本书中最主要的程序示例  3.2  Androld和社交网络  3.3  下载MJAndroid源代码  3.4  简单浏览一下MJAndroid的代码结构    3.4.1  项目的主目录    3.4.2  源代码目录    3.4.3  资源文件目录  3.5  第一步：编译和运行MicroJobs程序    3.5.1  Eclipse和ADT插件    3.5.2  加载和启动Android应用程序    3.5.3  更进一步：哪里可能会出错    3.5.4  在Android手机上运行程序  3.6  小结第4章  MJAndroid程序的初始化过程  4.1  AndroidManifest.xml文件中的初始化参数  4.2  MicroJobs.Java中的初始化代码  4.3  MicroJobs.java中的更多初始化代码  4.4  小结第5章  Android应用程序的调试  5.1  工具  5.2  EclipseJava编辑器    5.2.1  Java语言错误    5.2.2  Eclipse调试器    5.2.3  Logcat    5.2.4  Android Debug Bridge(adb)    5.2.5  DDMS：Dalvik调试监控服务    5.2.6  Traceview  5.3  小结第6章  ApiDemos示例程序  6.1  ApiDemos的清单文件  6.2  查找某个范例的源代码    6.2.1  自定义标题范例    6.2.2  Linkify范例  6.3  向ApiDemos中添加范例第7章  应用程序的签名和发布  7.1  测试程序  7.2  添加最终用户许可协议  7.3  创建并使用程序的图标和标签  7.4  程序发布前的收尾工作  7.5  程序的版本管理  7.6  获取数字签名证书和API Key    7.6.1  为自己的应用程序创建一份数字签名证书    7.6.2  在程序的调试阶段获取数字签名证书  7.7  对程序进行数字签名  7.8  重新测试一遍签过名的应用程序  7.9  在Android电子市场上发布应用程序    7.9.1  注册成为Android开发者    7.9.2  上传应用程序    第2部分：Android程序设计第8章  SQLite数据库和内容提供器  8.1  数据库    8.1.1  MicroJobsDatabase类的基本结构    8.1.2  从数据库中读取数据    8.1.3  修改数据库  8.2  内容提供器    8.2.1  NotePad简介    8.2.2  内容提供器    8.2.3  使用内容提供器第9章  定位和地图  9.1  基于定位的服务  9.2  地图  9.3  Google Maps活动  9.4  MapView和MapActivity  9.5  MapView详解    9.5.1  MapVieW和MyLocationOvetlay的初始化    9.5.2  MapActivity的暂停和继续    9.5.3  通过菜单按钮控制地图    9.5.4  通过手机上的按键控制地图  9.6  不显示地图情况下的定位    9.6.1  清单和布局文件    9.6.2  连接到定位功能模块并且获取位置更新    9.6.3  设定虚拟位置信息第10章  创建用户界面  10.1  Android图形用户界面系统架构    10.1.1  模型    10.1.2  视图    10.1.3  控制器    10.1.4  将各部分组合起来  10.2  创建图形用户界面  10.3  连接到控制器    10.3.1  模型的监听    10.3.2  监听触摸屏事件    10.3.3  监听按键事件    10.3.4  事件处理的其他方法    10.3.5  更进一步：焦点和线程  10.4  菜单第11章  常用的用户界面组件  11.1  Android常用用户界面组件    11.1.1  TextView组件和EditView组件    11.1.2  Button和ImageButton    11.1.3  Adapters接口和AdaptarViews组件    11.1.4  复选框组件，单选框组件和下拉列表组件  11.2  容器组件    11.2.1  Gallery组件和GridView组件    11.2.2  ListView容器组件和ListActivity活动    11.2.3  ScrollView容器组件    11.2.4  TabHost组件  11.3  布局    11.3.1  框架布局    11.3.2  线性布局    11.3.3  表格布局    11.3.4  绝对位置布局    11.3.5  相对位置布局第12章  二维和三维绘图  12.1  编写用户自己的组件    12.1.1  布局    12.1.2  绘制画布    12.1.3  Drawables对象    12.1.4  位图  12.2  特效    12.2.1  阴影、渐变和滤镜    12.2.2  动画    12.2.3  OpenGL绘图第13章  进程间通信  13.1  意图：简单、低成本的进程间通信    13.1.1  进程问通信中使用的意图对象    13.1.2  Activity对象和用户界面导航    13.1.3  使用意图对象的一个例子    13.1.4  通过进程间通信机制获取结果  13.2  远程方法和AIDL    13.2.1  Android接口定义语言    13.2.2  AIDL所生成的代码    13.2.3  发布接口    13.2.4  Android进程间通信和JNI的比较    13.2.5  Binder不能完成的工作    13.2.6  Binder和Linux操作系统第14章  电话操作  14.1  发起通话的简便方式    14.1.1  创建使用call方法的应用程序    14.1.2  将call方法嵌入到程序中  14.2  通过Eclipse调试器考察代码    14.2.1  创建一个Intent对象实例    14.2.2  向Intent对象中添加数据    14.2.3  发起一个通话  14.3  意外的处理  14.4  Android系统中程序级别的模块化和电话功能第15章  通话状态和Android电话类  15.1  由android.telephony包提供的功能    15.1.1  android.telephony包概述    15.1.2  应用程序的访问限制    15.1.3  监控当前通话状态的一个示例  15.2  深入Android电话功能内部    15.2.1  android.internal.telephony包中的进程间通信和AIDL    15.2.2  android.internal.telephony包的概述    15.2.3  android.internal.telephony.gsm包概述    15.2.4  深入了解Android电话模块  15.3  Android和VoIP技术",
      "pages": "295",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s11309162.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s11309162.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s11309162.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/5250774\/",
      "id": "5250774",
      "publisher": "人民邮电出版社",
      "isbn10": "7115230218",
      "isbn13": "9787115230218",
      "title": "Android应用开发",
      "url": "http:\/\/api.douban.com\/v2\/book\/5250774",
      "alt_title": "",
      "author_intro": "Rick Rogers，专业的嵌入式软件工程师，有着30多年的工作经历，当前是Wind River Systems公司的移动解决方案架构师。",
      "summary": "《Android应用开发》通过丰富而翔实的实例展示了在Android平台下开发手机应用软件所必需的概念和技术。书中不仅对Android应用程序的开发环境和调试方法进行了详细介绍，而且对Android软件开发的一些关键技术和API进行了讲解，包括数据库、定位和地图、图形用户界面、进程间通信以及手机通话等相关内容。《Android应用开发》还对Android平台下开发环境的搭建、程序的签名和发布以及程序调试和性能优化所用到的工具和方法等进行了讲解。\n《Android应用开发》适合有一定程序设计基础并致力于从事Android平台应用软件开发的读者阅读。",
      "price": "49.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 39,
        "average": "7.0",
        "min": 0
      },
      "subtitle": "Android与 iOS应用测试指南",
      "author": [
        "陈晔"
      ],
      "pubdate": "2014-7-7",
      "tags": [
        {
          "count": 62,
          "name": "软件测试",
          "title": "软件测试"
        },
        {
          "count": 51,
          "name": "移动测试",
          "title": "移动测试"
        },
        {
          "count": 19,
          "name": "测试",
          "title": "测试"
        },
        {
          "count": 18,
          "name": "互联网",
          "title": "互联网"
        },
        {
          "count": 14,
          "name": "大话移动APP测试：Android与",
          "title": "大话移动APP测试：Android与"
        },
        {
          "count": 10,
          "name": "移动",
          "title": "移动"
        },
        {
          "count": 10,
          "name": "IT",
          "title": "IT"
        },
        {
          "count": 6,
          "name": "Android",
          "title": "Android"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s27635237.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "《大话移动app测试：android与 ios应用测试指南》\n第1章 移动互联网面试 1\n1.1 为什么要面试 2\n1.2 面试的流程 2\n1.3 面试的频率 3\n1.4 面试实战 3\n1.5 如何正确地招聘测试人员 8\n1.6 移动互联网测试招聘现状 12\n1.7 大公司和小公司 13\n1.7.1 故事一 14\n1.7.2 故事二 15\n1.8 测试外包 16\n1.9 小结 17\n第2章 病态的现状 19\n2.1 全民挖金 20\n2.2 别人的嫁衣 22\n2.2.1 talkbox 23\n2.2.2 米聊 23\n2.2.3 飞信 24\n2.3 超越光速的迭代 25\n2.4 可怜的测试团队 27\n2.5 敏捷中毒 28\n2.6 无力的测试 29\n2.7 浮躁的测试工程师们 31\n2.7.1 社交中毒 31\n2.7.2 失去自理能力 32\n2.7.3 不能正确认识自己的价值 33\n2.8 测试沙龙和培训 34\n2.9 学会自我尊重 35\n2.10 小结 36\n第3章 用户体验测试 37\n3.1 移动互联网与传统互联网体验上的区别 38\n3.1.1 区别一——用户关注点 38\n3.1.2 区别二——场合复杂化 39\n3.1.3 区别三——时间碎片化 39\n3.1.4 区别四——输入困难化 39\n3.2 android vs ios 40\n3.2.1 桌面 40\n3.2.2 联系人 41\n3.2.3 短信 43\n3.2.4 历史应用 43\n3.2.5 相册 44\n3.2.6 其他 46\n3.3 “愚笨”的用户——用户引导 47\n3.4 “捣乱”的用户——应用容错 52\n3.4.1 注册与登录 52\n3.4.2 断网引发的问题 54\n3.5 专业精神——风格一致性 57\n3.5.1 应用与系统风格一致 58\n3.5.2 应用本身风格一致 59\n3.6 “我”即最终用户：过程体验测试 60\n3.7 使用更多的应用：对比体验测试 65\n3.8 模拟场景体验测试 66\n3.8.1 应用一：智能手机输入法 67\n3.8.2 应用二：智能机顶盒 68\n3.9 用户究竟关心什么？ 69\n3.9.1 用户只关心应用能在自己手机上正常运行 69\n3.9.2 用户隐私权限 70\n3.9.3 简洁、方便 71\n3.9.4 消耗 71\n3.9.5 好不好用 72\n3.10 用户体验的问题是bug吗？ 72\n3.11 如何提升自身的用户体验经验？ 73\n3.12 小结 74\n第4章 功能测试要点 75\n4.1 多分辨率测试 76\n4.2 多系统测试 77\n4.3 用户不同的使用习惯 80\n4.3.1 android权限问题 80\n4.3.2 android硬件问题 81\n4.3.3 android操作习惯 83\n4.3.4 android数据的移动或清空 84\n4.3.5 ios操作习惯 85\n4.3.6 ios越狱问题 86\n4.4 网络的不稳定性 88\n4.5 安装\/卸载测试 92\n4.6 升级测试 94\n4.6.1 增量升级 95\n4.6.2 内置应用升级 96\n4.7 并发测试 96\n4.7.1 弹出框提示 96\n4.7.2 另一个应用启动 97\n4.7.3 关机或待机 98\n4.7.4 功能冲突 98\n4.7.5 可存储设备 98\n4.8 数据来源 98\n4.9 推送 100\n4.10 分享跳转 102\n4.11 小结 104\n第5章 常用工具介绍和实践 105\n5.1 monkey 106\n5.1.1 第一个简单的monkey测试命令 106\n5.1.2 monkey测试工具实例 107\n5.1.3 monkey测试日志查看 108\n5.1.4 monkey测试注意点 112\n5.1.5 monkey工具再探索 114\n5.2 emulator 115\n5.2.1 模拟器和真机的差异 115\n5.2.2 genymotion 118\n5.2.3 模拟器常用功能举例 119\n5.3 monkeyrunner 121\n5.4 hierarchy viewer 126\n5.5 ddms 129\n5.6 compatibility test suite 133\n5.7 tcpdump\/wireshark 136\n5.8 findbugs 138\n5.9 lint 140\n5.10 反编译、重编译 142\n5.11 ant 146\n5.12 charles 148\n5.13 instruments 150\n5.14 小结 153\n第6章 常用框架介绍和实践 155\n6.1 instrumentation 156\n6.1.1 技巧一 158\n6.1.2 技巧三 160\n6.1.3 技巧三 161\n6.2 emma code coverage 163\n6.3 robolectric 173\n6.4 小结 185\n第7章 移动应用测试案例实践分析 187\n7.1 深入了解被测试对象 188\n7.2 多种数据来源 190\n7.3 在生活中使用产品 193\n7.4 社交应用分层设计实践案例 195\n7.5 联系人搜索案例测试设计实践 204\n7.6 小结 212\n第8章 性能测试介绍和实践 215\n8.1 emmagee 216\n8.2 instrumentation 217\n8.3 hprof 220\n8.4 gfxinfo 223\n8.5 systrace 225\n8.6 traceview 226\n8.7 instruments——leaks 229\n8.8 android多分辨率自动化实践 233\n8.9 小结 239\n附录a 测试人员的自我修养（吐槽篇） 241\na.1 学会提出和解决问题 242\na.2 正确地自我审视 243\na.3 不要被业界世俗的讨论蒙蔽 245\na.4 寻找测试的本质 247\na.5 主观能动 248\na.6 你真的会使用搜索引擎吗 250\na.7 每天都要学习 252\na.8 学会判断轻重缓急 254\na.9 小结 254\n附录b 测试行业常见问题（q&a篇） 255\nq1：没有做过测试的人怎么入门？ 256\nq2：测试工程师要具备什么能力？ 257\nq3：测试比开发技术含量低吗？ 258\nq4：参加测试培训能有多少提升？ 259\nq5：黑盒测试有价值吗？ 260\nq6：手动测试有价值吗？ 261\nq7：怎么做移动互联网应用的自动化测试？ 261\nq8：测试人员选择进入大公司还是小公司？ 263\nq9：中国高校有软件测试专业吗？ 264\nq10：小结 266\n附录c 博客摘录 267\nc.1 我们需要专职的qa吗？ 268\nc.2 学习让测试更精彩，测试让生命更精彩 271\nc.3 中国人的纠结 278\nc.4 黑盒不是白盒的绊脚石 283\nc.5 测试需要反省 283\nc.6 《钝感力》有感——测试中的钝感力 286\n后记 289",
      "pages": "292",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s27635237.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s27635237.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s27635237.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/25923638\/",
      "id": "25923638",
      "publisher": "清华大学出版社",
      "isbn10": "7302368791",
      "isbn13": "9787302368793",
      "title": "大话移动APP测试：Android与 iOS应用测试指南",
      "url": "http:\/\/api.douban.com\/v2\/book\/25923638",
      "alt_title": "",
      "author_intro": "",
      "summary": "",
      "price": "CNY 59.00"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 27,
        "average": "7.7",
        "min": 0
      },
      "subtitle": "卷I",
      "author": [
        "杨云君"
      ],
      "pubdate": "2013-5-1",
      "tags": [
        {
          "count": 53,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 20,
          "name": "android框架，android",
          "title": "android框架，android"
        },
        {
          "count": 10,
          "name": "Android内核",
          "title": "Android内核"
        },
        {
          "count": 8,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 8,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 5,
          "name": "好书",
          "title": "好书"
        },
        {
          "count": 2,
          "name": "android",
          "title": "android"
        },
        {
          "count": 2,
          "name": "android框架",
          "title": "android框架"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s27267639.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "前言\n第一部分　基础篇\n第1章　Android体系结构及源代码阅读环境搭建 \/ 2\n1.1　Android发展过程 \/ 2\n1.2　Android体系结构 \/ 3\n1.2.1　静态视角的体系结构 \/ 3\n1.2.2　动态视角的体系结构 \/ 7\n1.3　Android源码下载和编译 \/ 8\n1.3.1　搭建开发环境 \/ 8\n1.3.2　下载Android上层系统源代码 \/ 9\n1.3.3　下载指定模块源码 \/ 10\n1.3.4　下载 Android Linux Kernel源码 \/ 11\n1.3.5　编译Android上层系统源码 \/ 12\n1.3.6　编译指定模块源码 \/ 12\n1.4　Android源码结构 \/ 14\n1.5　Android源码开发工具的配置和使用 \/ 15\n1.5.1　配置Android SDK  \/ 15\n1.5.2　用Eclipse开发和调试源代码 \/ 16\n1.5.3　用Source Insight阅读源代码 \/ 19\n1.6　NDK开发环境配置 \/ 20\n1.7　本章小结 \/ 21\n第2章　框架基础JNI \/ 22\n2.1　JNI在Android系统中所处的位置 \/ 22\n2.2　JNI框架层实例分析 \/ 23\n2.2.1　Log系统Java层分析 \/ 24\n2.2.2　Log系统的JNI层 \/ 24\n2.2.3　Log系统的JNI方法注册 \/ 25\n2.3　JNI总管：JNIEnv \/ 27\n2.4　在Java中调用JNI实现方法 \/ 29\n2.4.1　Java数据类型与JNI数据类型转换 \/ 29\n2.4.2　JNI方法命名规则 \/ 30\n2.4.3　JNI方法签名规则 \/ 31\n2.5　JNI操作Java对象 \/ 32\n2.5.1　访问Java对象 \/ 32\n2.5.2　操作成员变量（域）和方法 \/ 33\n2.5.3　全局引用、弱全局引用和局部引用 \/ 34\n2.6　JNI异常处理 \/ 36\n2.7　JNI应用层实例分析 \/ 38\n2.7.1　Java层分析 \/ 38\n2.7.2　JNI层代码和异常处理 \/ 39\n2.8　本章小结 \/ 42\n第二部分　启动篇\n第3章　Android启动过程的底层实现 \/ 44\n3.1　Android正常模式启动流程 \/ 44\n3.2　Kernel启动过程 \/ 44\n3.2.1　内核引导阶段 \/ 45\n3.2.2　内核启动阶段 \/ 46\n3.3　init进程的执行过程 \/ 49\n3.4　init.rc文件解析过程 \/ 53\n3.4.1　Android初始化语言 \/ 53\n3.4.2　init.rc的内容 \/ 56\n3.4.3　解析配置文件 \/ 57\n3.4.4　解析Service \/ 60\n3.4.5　解析Action \/ 63\n3.5　触发并启动Action和Service \/ 65\n3.5.1　触发Action \/ 65\n3.5.2　执行Action \/ 66\n3.5.3　启动Service \/ 70\n3.5.4　init对属性服务的处理 \/ 71\n3.6　init循环监听处理事件 \/ 75\n3.7　本章小结 \/ 77\n第4章　Android 启动过程的上层实现 \/ 78\n4.1　第一个Dalvik虚拟机zygote \/ 79\n4.1.1　zygote的配置 \/ 79\n4.1.2　如何执行zygote服务程序 \/ 80\n4.2　ZygoteInit的启动过程 \/ 82\n4.2.1　创建Dalvik虚拟机 \/ 83\n4.2.2　注册JNI方法 \/ 85\n4.2.3　开启Java世界 \/ 88\n4.3　ZygoteInit开启Java世界的五部分工作 \/ 89\n4.3.1　注册zygote的Socket \/ 89\n4.3.2　预加载Class资源和Resource资源 \/ 89\n4.3.3　启动system_server进程 \/ 92\n4.3.4　执行MethodAndArgsCaller的run方法 \/ 98\n4.3.5　执行runSelectLoopMode方法 \/ 102\n4.4　zygote处理Home启动请求 \/ 104\n4.5　本章小结 \/ 112\n第三部分　Binder篇\n第5章 　Binder在Native框架层的实现 \/ 114\n5.1　Binder与C\/S体系结构概述 \/ 114\n5.2　servicemanager进程的启动过程 \/ 115\n5.2.1　初始化Binder通信环境 \/ 116\n5.2.2　注册上下文管理者 \/ 118\n5.2.3　等待接收并处理IPC通信请求 \/ 120\n5.3　Server的启动和Service的注册过程 \/ 128\n5.3.1　创建ProcessState对象 \/ 129\n5.3.2　获取servicemanager的代理对象 \/ 131\n5.3.3　注册Service \/ 139\n5.3.4　Server进程开启线程池 \/ 145\n5.4　Client端使用服务代理对象 \/ 146\n5.5　服务代理与服务通信 \/ 149\n5.6　本章小结 \/ 152\n第6章　Binder在Java框架层的实现 \/ 153\n6.1　Java系统服务的创建过程 \/ 153\n6.1.1　创建JavaBBinderHolder对象 \/ 155\n6.1.2　JavaBBinder的作用 \/ 156\n6.1.3　gBinderOffsets结构体解析 \/ 156\n6.2　Java系统服务的注册过程 \/ 159\n6.2.1　调用BinderInternal.getContextObject方法 \/ 160\n6.2.2　调用ServiceManagerNative.asInterface方法 \/ 165\n6.2.3　调用ServiceManagerProxy. addService方法注册服务 \/ 167\n6.3　Client端获取服务代理 \/ 169\n6.3.1　获取服务的BinderProxy \/ 170\n6.3.2　构造服务的Proxy对象 \/ 172\n6.3.3  构造服务管理者对象 \/ 173\n6.4  Client端调用Java系统服务的方法 \/ 174\n6.5  统一的通信接口AIDL \/ 177\n6.5.1  AIDL实例 \/ 177\n6.5.2  AIDL语法 \/ 180\n6.5.3  处理自定义数据类型的传递 \/ 181\n6.6  本章小结 \/ 182\n第四部分　消息通信篇\n第7章  线程消息通信与异步处理 \/ 184\n7.1  什么是Looper线程 \/ 184\n7.2  第一步：Looper线程准备阶段 \/ 185\n7.2.1  创建Java层的Looper对象 \/ 186\n7.2.2  创建Java层的MessageQueue对象 \/ 186\n7.2.3  创建Native层的NativeMessage-Queue和Looper对象 \/ 187\n7.2.4  NativeMessageQueue关联到MessageQueue \/ 189\n7.3  第二步：创建消息处理器并发送消息 \/ 190\n7.3.1  Handler的创建和初始化 \/ 190\n7.3.2  Message的创建和初始化 \/ 191\n7.3.3  消息的发送过程 \/ 192\n7.4  第三步：Looper线程循环阶段 \/ 198\n7.4.1  记录并获取当前线程身份信息 \/ 198\n7.4.2  循环监听消息 \/ 199\n7.4.3  分发消息到处理器 \/ 205\n7.4.4  回收消息并更新消息池 \/ 209\n7.5  异步任务类AsyncTask \/ 210\n7.5.1  AsyncTask的实现 \/ 211\n7.5.2  AsyncTask的执行 \/ 214\n7.6  本章小结 \/ 223\n第五部分　Package Manager篇\n第8章  Package Manager 的机制与实现 \/ 226\n8.1　 Package Manager体系结构 \/ 227\n8.1.1  三层体系结构 \/ 227\n8.1.2  三层之间的关系 \/ 228\n8.2  PackageManagerService的启动过程 \/ 231\n8.2.1  创建并初始化Settings对象 \/ 232\n8.2.2  获取系统默认配置 \/ 236\n8.2.3  启动PackageHandler \/ 237\n8.2.4  创建data目录并初始化UserManager \/ 239\n8.2.5  解析系统permission和feature信息 \/ 242\n8.2.6  解析packages文件 \/ 245\n8.2.7  dexopt优化判定 \/ 247\n8.2.8  启动FileObserver监控APK文件的目录 \/ 250\n8.2.9  调用scanDirLI方法扫描并安装APK包 \/ 252\n8.2.10  更新packages文件 \/ 253\n8.3   PackageManagerService启动过程使用的核心组件 \/ 254\n8.3.1  Java层的Installer \/ 255\n8.3.2  Installd中的命令 \/ 258\n8.4  本章小结 \/ 260\n第9章　APK的安装过程 \/ 261\n9.1　通过scanDirLI方法安装APK \/ 261\n9.1.1　创建PackageParser \/ 262\n9.1.2　解析AndroidManifest.xml文件 \/ 263\n9.1.3　过滤PackageParser.Package类型的pkg对象 \/ 270\n9.1.4　解析和安装pkg \/ 274\n9.2　使用adb命令安装应用程序 \/ 282\n9.2.1　通过消息机制安装指定的APK \/ 283\n9.2.2　调用handleStartCopy方法处理安装操作 \/ 286\n9.2.3　调用handleReturnCode方法处理返回结果 \/ 290\n9.3　 本章小结 \/ 293\n第六部分　Activity Manager篇\n第10章　Activity Manager的机制与实现 \/ 296\n10.1　Activity Manager概述 \/ 296\n10.2　ActivityManagerService在系统启动阶段的主要工作 \/ 297\n10.3　第一阶段：启动ActivityManagerService \/ 299\n10.3.1　启动AThread线程 \/ 300\n10.3.2　创建ActivityThread对象 \/ 302\n10.3.3　创建ActivityStack类 \/ 309\n10.3.4　调用startRunning方法 \/ 310\n10.4　第二阶段：调用setSystemProcess方法 \/ 310\n10.4.1　查询并处理ApplicationInfo \/ 312\n10.4.2　创建并初始化ProcessRecord \/ 313\n10.5　第三阶段：调用install-SystemProviders方法 \/ 315\n10.5.1　查询Content Provider \/ 316\n10.5.2　安装Content Provider \/ 317\n10.6　第四阶段：调用systemReady方法 \/ 323\n10.6.1　发送ACTION_PRE_BOOT_COMPLETED广播 \/ 323\n10.6.2　清理预启动的非persistent进程 \/ 325\n10.6.3　读取Settings配置 \/ 326\n10.6.4　运行Runnable回调接口 \/ 327\n10.6.5　启动persistent应用程序和Home    \/ 328\n10.7　本章小结 \/ 329\n第11章　应用程序Activity的启动和调度 \/ 330\n11.1　启动应用程序Activity时在Client端的执行流程 \/ 330\n11.2　启动应用程序Activity时在Server端的执行流程 \/ 334\n11.2.1　预启动 \/ 334\n11.2.2　暂停 \/ 348\n11.2.3　启动应用程序进程 \/ 356\n11.2.4　加载应用程序Activity \/ 362\n11.2.5　显示Activity \/ 369\n11.2.6　Activity Idle状态的处理过程 \/ 379\n11.2.7　停止源Activity \/ 382\n11.3　本章小结 \/ 387\n第12章　Activity Manager进程管理 \/ 388\n12.1　LRU weight机制 \/ 388\n12.2　OOM adj机制 \/ 391\n12.2.1　更新OOM adj值 \/ 392\n12.2.2　OOM adj的计算过程 \/ 403\n12.3　Low Memory Killer机制 \/ 414\n12.3.1　OOM adj等级和最小内存阈值 \/ 414\n12.3.2　LM Killer机制的实现 \/ 417\n12.4　本章小结 \/ 419",
      "ebook_url": "http:\/\/read.douban.com\/ebook\/15153314\/",
      "pages": "419",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s27267639.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s27267639.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s27267639.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/24380600\/",
      "id": "24380600",
      "publisher": "机械工业出版社",
      "isbn10": "7111417135",
      "isbn13": "9787111417132",
      "title": "Android的设计与实现",
      "url": "http:\/\/api.douban.com\/v2\/book\/24380600",
      "alt_title": "",
      "author_intro": "杨云君 资深Android系统专家，不仅在Android应用开发方面积累了丰富的经验，而且精通Android系统级开发和性能优化，对整个Android系统的架构设计与实现原理有十分深入的研究和透彻的认识。就职于国际领先的跨国移动通信公司，作为主任工程师专门从事Android手机的定制和开发，研究Android系统是他的主要工作之一，曾负责了多个手机品牌的多款机型的系统开发和升级工作，经验十分丰富。",
      "summary": "本书是Android应用开发工程师和Android系统工程师进阶修炼的必读之作。它由资深Android内核专家亲自执笔，从源代码角度，系统、深入、透彻剖析Android系统框架层（Framework）的设计思想和实现原理，为Android应用工程师和系统工程师解决实际工作中的各种难题提供了原理性的指导。为了降低读者的阅读成本，本书使用了大量简单的UML类图和序列图来展示类的层次结构和方法的调用流程，使读者能迅速读完本书并领会其精髓！\n“Android的设计与实现”系列丛书主要围绕Android系统的四层结构展开，通过源代码来分析各层的设计思想与实现原理，卷I则主要是针对Framework（框架层）的。全书共12章，分为六个部分：基础篇（第1～2章）详细讲解了Android的体系结构、源代码阅读和调试环境的搭建，以及整个框架的基础；启动篇（第3～4章）深入分析了Android启动过程的机制和实现原理，能帮助读者全面理解框架层系统服务的运行基础；Binder篇（第5～6章）着重分析了Binder在Native框架层和Java框架层的机制和实现，能让读者深入理解进程间的通信模型；消息通信篇（第7章）重点分析了Android的消息驱动和异步处理机制，能让读者深入理解线程间的通信模型；Package Manager篇（第8～9章）主要讲解了Package Manager的机制与实现，以及APK的安装方法与过程；Activity Manager篇（第10～12章）深入阐述了ActivityManagerService的运行机制、应用程序和进程的启动流程，以及进程管理机制。\n本书适合中高级的Android应用开发工程师、Android系统开发工程师、Android系统架构师，以及负责对Android系统进行调试和优化的工程师们阅读。",
      "ebook_price": "20.00",
      "price": "79.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 36,
        "average": "6.9",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "[美] Ed Burnette"
      ],
      "pubdate": "2010-8",
      "tags": [
        {
          "count": 63,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 15,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 14,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 12,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 6,
          "name": "Java",
          "title": "Java"
        },
        {
          "count": 3,
          "name": "安卓",
          "title": "安卓"
        },
        {
          "count": 3,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 2,
          "name": "计算机技术",
          "title": "计算机技术"
        }
      ],
      "origin_title": "Hello,Android:Introducing Google’s Mobile Development Platform",
      "image": "https://img1.doubanio.com\/mpic\/s4447848.jpg",
      "binding": "平装",
      "translator": [
        "田俊静",
        "张波",
        "黄湘情 等"
      ],
      "catalog": "第一部分 Android简介\n第1章 快速入门 2\n1.1 安装工具 2\n1.1.1 Java 5.0+ 2\n1.1.2 Eclipse 3\n1.1.3 Android SDK启动程序软件包 3\n1.1.4 Android SDK组件 4\n1.1.5 Eclipse插件 5\n1.2 创建第一个程序 7\n1.3 在模拟器上运行程序 8\n1.3.1 创建一个AVD 8\n1.3.2 再试一次 9\n1.4 在手机上运行程序 11\n1.5 快速阅读指南 11\n第2章 基本概念 12\n2.1 Android的系统架构 12\n2.1.1 Linux内核 12\n2.1.2 本机库 13\n2.1.3 Android运行时 15\n2.1.4 应用程序框架 15\n.2.1.5 应用程序和小部件 15\n2.2 它还活着 16\n2.2.1 进程不等于应用程序 17\n2.2.2 应用程序生命周期 18\n2.3 构建块 20\n2.3.1 活动 20\n2.3.2 意图 20\n2.3.3 服务 20\n2.3.4 内容提供者 21\n2.4 使用资源 21\n2.5 安全性 21\n2.6 快速阅读指南 22\n第二部分 Android基础知识\n第3章 设计用户界面 24\n3.1 数独游戏简介 24\n3.2 声明性设计 25\n3.3 创建启动界面 26\n3.4 使用替代资源 33\n3.5 实现About对话框 36\n3.6 应用主题 40\n3.7 添加菜单 42\n3.8 添加设置 44\n3.9 开始新游戏 45\n3.10 利用日志消息调试程序 47\n3.11 利用调试器调试程序 49\n3.12 退出游戏 49\n3.13 快速阅读指南 49\n第4章 绘制2D图形 51\n4.1 Android图形基础 51\n4.1.1 Color类 51\n4.1.2 Paint类 52\n4.1.3 Canvas类 53\n4.1.4 Path类 53\n4.1.5 Drawable类 54\n4.2 在数独程序中添加图形 56\n4.2.1 开始游戏 56\n4.2.2 定义Game类 57\n4.2.3 定义PuzzleView类 58\n4.2.4 绘制游戏盘面 60\n4.2.5 绘制数字 62\n4.3 处理输入 63\n4.3.1 定义和更新选定区域 64\n4.3.2 输入数字 66\n4.3.3 增加提示 67\n4.3.4 抖动屏幕 68\n4.4 其他问题 69\n4.4.1 创建软键盘 69\n4.4.2 实现游戏逻辑 74\n4.4.3 其他功能 76\n4.5 更多改进 78\n4.6 快速阅读指南 79\n第5章 多媒体 80\n5.1 播放音频 80\n5.2 播放视频 85\n5.3 为数独游戏配上音乐 89\n5.4 快速阅读指南 92\n第6章 存储本地数据 93\n6.1 为数独游戏添加选项 93\n6.2 继续玩前一个游戏 95\n6.3 记住当前位置 97\n6.4 访问内部文件系统 98\n6.5 访问SD卡 99\n6.6 快速阅读指南 100\n第三部分 高级主题\n第7章 互联的世界 102\n7.1 通过意图实现浏览 103\n7.2 利用视图打开网页 106\n7.3 JavaScript与Java通信 110\n7.4 使用Web服务 116\n7.5 快速阅读指南 126\n第8章 定位与环境感知 127\n8.1 位置，位置，位置 127\n8.1.1 我在哪里 128\n8.1.2 更新位置 130\n8.1.3 模拟说明 132\n8.2 充分利用传感器 132\n8.2.1 了解传感器 133\n8.2.2 解析传感器的读数 133\n8.2.3 模拟说明 134\n8.3 地图功能 135\n8.3.1 嵌入MapView 136\n8.3.2 准备就绪 138\n8.3.3 模拟说明 140\n8.4 快速阅读指南 140\n第9章 SQL实战 142\n9.1 SQLite简介 142\n9.2 SQL基础 143\n9.2.1 DDL语句 144\n9.2.2 修改语句 144\n9.2.3 查询语句 144\n9.3 你好，数据库 145\n9.3.1 使用SQliteOpenHelper 146\n9.3.2 定义主程序 148\n9.3.3 添加一行 149\n9.3.4 运行一个查询 150\n9.3.5 显示查询结果 151\n9.4 数据绑定 152\n9.5 使用ContentProvider 155\n9.5.1 更改主程序 157\n9.5.2 添加一行 157\n9.5.3 运行一个查询 158\n9.6 实现ContentProvider 158\n9.7 快速阅读指南 159\n第10章 利用OpenGL实现3D图形 161\n10.1 理解3D图形 161\n10.2 OpenGL简介 162\n10.3 构建一个OpenGL程序 163\n10.4 渲染场景 165\n10.5 构建一个模型 168\n10.6 光线、相机…… 171\n10.7 动作 173\n10.8 应用纹理 175\n10.9 透明效果 176\n10.10 测量平滑度 178\n10.11 快速阅读指南 179\n第四部分 附 录\n附录A Java与Android：语言及其API 182\n附录B Hello, Widget 186\n附录C 发布到Android市场 195\n附录D 参考书目 202",
      "pages": "201",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4447848.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4447848.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4447848.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4923187\/",
      "id": "4923187",
      "publisher": "人民邮电出版社",
      "isbn10": "7115232873",
      "isbn13": "9787115232878",
      "title": "Android基础教程 （第3版）",
      "url": "http:\/\/api.douban.com\/v2\/book\/4923187",
      "alt_title": "Hello,Android:Introducing Google’s Mobile Development Platform",
      "author_intro": "Ed Burnette 资深软件技术专家，拥有20多年软件开发经验。SAS高级计算机实验室的联合创始人和高级研究员。他是Planet Android (www.planetandroid.com)网站的创办人和ZDNet的专栏作家。除本书外，他还出版了Google Web Toolkit: Taking the Pain out of Ajax和Eclipse IDE Pocket Guide等著作。",
      "summary": "Android是Google推出的基于Linux和Java技术的开源移动开发平台，自2007年问世以来得到了全球众多厂商和运营商的支持，并迅速成为智能手机的主流操作系统。\n本书作为《Android基础教程》的升级版，是基于最新的Android 2.1版本对其进行完善后的杰作，其中还涉及了Android 1.5 和Android 1.6的内容。本书采用由浅入深、循序渐进的方式讲解了Android生命周期、UI、2D图形、多媒体以及简单的数据存储等基础知识，深入探讨了外部通信、基于位置的服务、内置SQLite数据库以及强大的3D图形等高级主题。书中内容和示例都基于最新版Android进行了更新，并根据读者反馈做了改进。除了支持各种屏幕分辨率和Android的最佳实践，本书还阐述了多点触控和动态壁纸编程接口功能。此外，每章最后都提供“快速阅读指南”，供你快速找到所需信息，进而高效地完成工作。",
      "series": {
        "id": "660",
        "title": "图灵程序设计丛书"
      },
      "price": "42.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 54,
        "average": "8.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Marko Gargenta"
      ],
      "pubdate": "2011-3-28",
      "tags": [
        {
          "count": 50,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 16,
          "name": "O'Reilly",
          "title": "O'Reilly"
        },
        {
          "count": 10,
          "name": "Programming",
          "title": "Programming"
        },
        {
          "count": 7,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 6,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 4,
          "name": "Learning",
          "title": "Learning"
        },
        {
          "count": 4,
          "name": "技术",
          "title": "技术"
        },
        {
          "count": 2,
          "name": "2011",
          "title": "2011"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s7022689.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "268",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s7022689.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s7022689.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s7022689.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/5951422\/",
      "id": "5951422",
      "publisher": "O'Reilly Media",
      "isbn10": "1449390501",
      "isbn13": "9781449390501",
      "title": "Learning Android",
      "url": "http:\/\/api.douban.com\/v2\/book\/5951422",
      "alt_title": "",
      "author_intro": "",
      "summary": "If you're new to the Android mobile operating system,  Learning Android  is the perfect way to master the fundamentals. Written by an expert who's taught Android to thousands of people in large organizations, this gentle introduction shows you how to use Android's basic building blocks to develop user interfaces, store data, and more.    You'll learn by building an example application throughout the course of book, adding new features with each chapter. Along the way, you'll also build your own toolbox of code patterns that will help you program any type of Android application with ease.    Get an overview of the Android platform, and how this technology fits into the mobile ecosystem   Set up your Android development environment and get started with simple programs   Learn about Activities, Intents, Services, Broadcast Receivers, and Content Providers   Build basic Android user interfaces, and learn about Views and Layouts   Create a Service to update data in your example application   Learn how Android supports databases by creating a SQL database opener   Test your application and publish it to the Android Market",
      "price": "USD 34.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 35,
        "average": "8.5",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Reto Meier"
      ],
      "pubdate": "2010-3-1",
      "tags": [
        {
          "count": 58,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 12,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 8,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 5,
          "name": "移动",
          "title": "移动"
        },
        {
          "count": 5,
          "name": "安卓",
          "title": "安卓"
        },
        {
          "count": 3,
          "name": "入门",
          "title": "入门"
        },
        {
          "count": 3,
          "name": "Java",
          "title": "Java"
        },
        {
          "count": 2,
          "name": "android",
          "title": "android"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s4449439.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "576",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4449439.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4449439.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4449439.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4309489\/",
      "id": "4309489",
      "publisher": "Wrox",
      "isbn10": "0470565527",
      "isbn13": "9780470565520",
      "title": "Professional Android 2 Application Development",
      "url": "http:\/\/api.douban.com\/v2\/book\/4309489",
      "alt_title": "",
      "author_intro": "Reto Meier is a software developer who has been involved in Android since the initial release in 2007. He is an Android Developer Advocate at Google.",
      "summary": "《Android 2高级编程(第2版)》述如何有效利用android 2的功能来改进当前产品或创建新产品。《Android 2高级编程(第2版)》是使用android编写移动应用程序的实用精品指南，穿插了一系列示例项目来深入分析android的新功能和技术。大量示例和说明可引导您熟练掌握基础知识，使您不仅能使用当前android 功能编写赏心悦目的移动应用程序，还能灵活快捷地运用未来的android增强功能构建最前沿的解决方案。 \"Professional Android Application Development\" is a professional developer's guide to building mobile applications using the next major release of the Android SDK. This hands-on approach provides in-depth coverage of the Android SDK through a series of projects, each introducing a new Android platform feature and highlighting the techniques and best practices to get the most out of Android. Providing concise and compelling examples, \"Professional Android Application Development\" is an updated guide that let's developers quickly construct real-world mobile applications for Android phones running the latest version of Android.\n\n  点击链接进入中文版： \n Android 2高级编程(第2版)",
      "price": "USD 44.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 15,
        "average": "7.7",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Diego Torres Milano"
      ],
      "pubdate": "2011-6-23",
      "tags": [
        {
          "count": 42,
          "name": "android",
          "title": "android"
        },
        {
          "count": 37,
          "name": "Testing",
          "title": "Testing"
        },
        {
          "count": 19,
          "name": "软件测试",
          "title": "软件测试"
        },
        {
          "count": 18,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 15,
          "name": "自动化",
          "title": "自动化"
        },
        {
          "count": 9,
          "name": "Test",
          "title": "Test"
        },
        {
          "count": 7,
          "name": "软件-测试",
          "title": "软件-测试"
        },
        {
          "count": 6,
          "name": "Application",
          "title": "Application"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s6643607.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "Preface\nChapter 1: Getting Started with Testing\nChapter 2: Testing on Android\nChapter 3: Building Blocks on the Android SDK\nChapter 4: Test Driven Development\nChapter 5: Android Testing Environment\nChapter 6: Behavior Driven Development\nChapter 7: Testing Recipes\nChapter 8: Continuous Integration\nChapter 9: Performance Testing and Profiling\nChapter 10: Alternative Testing Tactics\nIndex\nPreface\nChapter 1: Getting Started with Testing\nBrief history\nSoftware bugs\nHow bugs severely affect your projects\nWhy, what, how, and when to test\nWhat to test\nActivity lifecycle events\nDatabase and filesystem operations\nPhysical characteristics of the device\nTypes of tests\nUnit tests\nThe test fixture\nThe set() method\nThe tearDown() method\nTest preconditions\nThe actual tests\nIntegration tests\nFunctional or acceptance tests\nTest case scenario\nPerformance tests\nSystem tests\nAndroid testing framework\nInstrumentation\nTest targets\nSummary\nChapter 2: Testing on Android\nJUnit\nCreating the Android main project\nCreating the Android test project\nPackage explorer\nCreating a test case\nSpecial methods\nTest annotations\nRunning the tests\nRunning all tests from Eclipse\nRunning a single test case from Eclipse\nRunning from the emulator\nRunning tests from the command line\nRunning all tests\nRunning tests from a specific test case\nRunning a specific test by name\nRunning specific tests by category\nRunning performance tests\nDry run\nDebugging tests\nOther command-line options\nSummary\nChapter 3: Building Blocks on the Android SDK\nThe demonstration application\nAssertions in depth\nCustom messages\nStatic imports\nView assertions\nEven more assertions\nThe TouchUtils class\nMock Objects\nMockContext overview\nThe IsolatedContext class\nAlternate route to file and database operations\nThe MockContentResolver class\nThe TestCase base class\nThe no-argument constructor\nThe given name constructor\nThe setName() method\nThe AndroidTestCase base class\nThe assertActivityRequiresPermission() method\nDescription\nExample\nThe assertReadingContentUriRequiresPermission method\nDescription\nExample\nThe assertWritingContentUriRequiresPermission() method\nDescription\nExample\nInstrumentation\nThe ActivityMonitor inner class\nExample\nThe InstrumentationTestCase class\nThe launchActivity and launchActivityWithIntent method\nThe sendKeys and sendRepeatedKeys methods\nThe runTestOnUiThread helper method\nThe ActivityTestCase class\nThe scrubClass method\nThe ActivityInstrumentationTestCase2 class\nThe constructor\nThe set method\nThe tearDown method\nThe testPreconditions method\nThe ProviderTestCase2&lt;T&gt; class\nThe constructor\nExample\nThe ServiceTestCase&lt;T&gt;\nThe constructor\nThe TestSuiteBuilder.FailedToCreateTests class\nUsing external libraries in test projects\nSummary\nChapter 4: Test Driven Development\nGetting started with TDD\nWriting a test case\nRunning all tests\nRefactoring the code\nWhat is the advantage?\nUnderstanding the requirements\nCreating a sample project—the Temperature Converter\nThe list of requirements\nUser interface concept design\nCreating the projects\nCreating the TemperatureConverterActivityTests project\nCreating the fixture\nTest preconditions\nCreating the user interface\nTesting the existence of the user interface components\nGetting the IDs defined\nTranslating requirements to tests\nEmpty fields\nView properties\nScreen layout\nAdding functionality\nTemperature conversion\nThe EditNumber class\nTemperatureConverter unit tests\nThe EditNumber tests\nThe TemperatureChangeWatcher class\nMore TemperatureConverter tests\nThe InputFilter tests\nViewing our final application\nSummary\nChapter 5: Android Testing Environment\nCreating Android Virtual Devices\nRunning AVDs from the command line\nHeadless emulator\nDisabling the keyguard\nCleaning up\nTerminating the emulator\nAdditional emulator configurations\nSimulating network conditions\nAdditional qemu options\nRunning monkey\nClient-server monkey\nTest scripting with monkeyrunner\nGetting test screenshots\nRecord and playback\nSummary\nChapter 6: Behavior Driven Development\nBrief history\nGiven, when, then\nFitNesse\nRunning FitNesse from the command line\nCreating a TemperatureConverterTests subwiki\nAdding child pages to the subwiki\nAdding the acceptance test fixture\nAdding the supporting test classes\nGivWenZen\nCreating the test scenario\nSummary\nChapter 7: Testing Recipes\nAndroid Unit tests\nTesting activities and applications\nApplications and preferences\nThe RenamingMockContext class\nThe TemperatureConverterApplicationTests class\nTesting activities\nTesting files, databases, and ContentProviders\nThe BrowserProvider tests\nTesting exceptions\nTesting local and remote services\nExtensive use of mock objects\nImporting libraries\nThe testTextChanged test\nIntroducing Hamcrest\nHamcrest matchers\nThe hasToString matcher\nTesting Views in isolation\nTesting parsers\nAndroid assets\nThe parser activity\nThe parser test\nTesting for memory leaks\nSummary\nChapter 8: Continuous Integration\nBuilding Android applications manually using Ant\nGit—the fast version control system\nCreating a local git repository\nContinuous Integration with Hudson\nInstalling and configuring Hudson\nCreating the jobs\nObtaining Android test results\nSummary\nChapter 9: Performance Testing and Profiling\nYe Olde Logge method\nPerformance tests in Android SDK\nLaunching the performance test\nCreating the LaunchPerformanceBase instrumentation\nCreating the TemperatureConverterActivityLaunchPerformance class\nRunning the tests\nUsing the Traceview and dmtracedump platform tools\nMicrobenchmarks\nCaliper microbenchmarks\nCreating the TemperatureConverterBenchmark project\nRunning caliper\nSummary\nChapter 10: Alternative Testing Tactics\nBuilding Android from source\nCode coverage\nEMMA features\nSystem requirements\nDownloading the Android source code\nInstalling repo\nCreating the working copy\nThe Building Steps\nTemperatureConverter code coverage\nGenerating code coverage analysis report\nCovering the restoring the instance state\nCovering the exceptions\nBypassing access restrictions\nCovering the options menu\nThe undocumented Ant coverage target\nIntroducing Robotium\nDownloading Robotium\nConfiguring the project\nCreating the test cases\nThe testFahrenheitToCelsiusConversion() test\nThe testOnCreateOptionsMenu() revisited\nTesting on host's JVM\nCreating the TemperatureConverterJVMTest project\nComparing the performance gain\nAdding Android to the picture\nIntroducing Robolectric\nInstalling Robolectric\nCreating a new Java project\nWriting some tests\nSummary\nIndex",
      "pages": "332",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s6643607.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s6643607.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s6643607.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6712929\/",
      "id": "6712929",
      "publisher": "Packt Publishing",
      "isbn10": "1849513503",
      "isbn13": "9781849513500",
      "title": "Android Application Testing Guide",
      "url": "http:\/\/api.douban.com\/v2\/book\/6712929",
      "alt_title": "",
      "author_intro": "",
      "summary": "",
      "price": "USD 44.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 64,
        "average": "7.0",
        "min": 0
      },
      "subtitle": "第2版",
      "author": [
        "李刚"
      ],
      "pubdate": "2013-3-1",
      "tags": [
        {
          "count": 52,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 22,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 11,
          "name": "移动开发",
          "title": "移动开发"
        },
        {
          "count": 10,
          "name": "Java",
          "title": "Java"
        },
        {
          "count": 7,
          "name": "手机编程",
          "title": "手机编程"
        },
        {
          "count": 6,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 6,
          "name": "android",
          "title": "android"
        },
        {
          "count": 3,
          "name": "技术",
          "title": "技术"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s28024443.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "第1章  Android应用与开发环境\t1\n1.1  Android的发展和历史\t2\n1.1.1  Android的发展和简介\t2\n1.1.2  Android平台架构及特性\t3\n1.2  搭建Android开发环境\t5\n1.2.1  下载和安装Android SDK\t5\n1.2.2  安装运行、调试环境\t7\n1.2.3  安装Eclipse和ADT插件\t10\n1.3  Android常用开发工具的用法\t13\n1.3.1  在命令行创建、删除和浏览AVD\t13\n1.3.2  使用Android模拟器（Emulator）\t14\n1.3.3  使用DDMS进行调试\t15\n1.3.4  Android Debug Bridge（ADB）的用法\t16\n1.3.5  使用DX编译Android应用\t18\n1.3.6  使用Android Asset Packaging Tool（AAPT）打包资源\t18\n1.3.7  使用mksdcard管理虚拟SD卡\t18\n1.4  开始第一个Android应用\t19\n1.4.1  使用Eclipse开发第一个Android应用\t19\n1.4.2  通过ADT运行Android应用\t23\n1.5  Android应用结构分析\t23\n1.5.1  创建一个Android应用\t24\n1.5.2  自动生成的R.java\t26\n1.5.3  res目录说明\t27\n1.5.4  Android应用的清单文件：AndroidManifest.xml\t28\n1.5.5  应用程序权限说明\t29\n1.6  Android应用的基本组件介绍\t30\n1.6.1  Activity和View\t30\n1.6.2  Service\t31\n1.6.3  BroadcastReceiver\t31\n1.6.4  ContentProvider\t32\n1.6.5  Intent和IntentFilter\t32\n1.7  签名Android应用程序\t33\n1.7.1  在Eclipse中对Android应用签名\t34\n1.7.2  使用命令对APK包签名\t35\n1.8  本章小结\t37\n第2章  Android应用的界面编程\t38\n2.1  界面编程与视图（View）组件\t39\n2.1.1  视图组件与容器组件\t39\n2.1.2  使用XML布局文件控制UI界面\t44\n2.1.3  在代码中控制UI界面\t45\n2.1.4  使用XML布局文件和Java代码混合控制UI界面\t46\n2.1.5  开发自定义View\t47\n2.2  第1组UI组件：布局管理器\t50\n2.2.1  线性布局\t50\n2.2.2  表格布局\t53\n2.2.3  帧布局\t56\n2.2.4  相对布局\t59\n2.2.5  Android 4.0新增的网格布局\t61\n2.2.6  绝对布局\t63\n2.3  第2组UI组件：TextView及其子类\t65\n2.3.1  文本框（TextView）与编辑框（EditText）的功能和用法\t65\n2.3.2  EditText的功能与用法\t72\n2.3.3  按钮（Button）组件的功能和用法\t74\n2.3.4  使用9Patch图片作为按钮背景\t76\n2.3.5  单选按钮（RadioButton）与复选框（CheckBox）的功能与用法\t77\n2.3.6  状态开关按钮（ToggleButton）与开关（Switch）的功能与用法\t79\n2.3.7  时钟（AnalogClock和DigitalClock）的功能与用法\t81\n2.3.8  计时器（Chronometer）\t83\n2.4  第3组UI组件：ImageView及其子类\t84\n2.5  第4组UI组件：AdapterView及子类\t91\n2.5.1  列表视图（ListView）和ListActivity\t91\n2.5.2  Adapter接口及实现类\t93\n2.5.3  自动完成文本框（AutoCompleteTextView）的功能和用法\t102\n2.5.4  网格视图（GridView）功能和用法\t104\n2.5.5  可展开的列表组件（ExpandableListView）\t107\n2.5.6  Spinner的功能和用法\t110\n2.5.7  画廊视图（Gallery）的功能和用法\t112\n2.5.8  AdapterViewFlipper的功能与用法\t114\n2.5.9  StackView的功能与用法\t117\n2.6  第5组UI组件：ProgressBar及其子类\t119\n2.6.1  进度条（ProgressBar）的功能与用法\t119\n2.6.2  拖动条（SeekBar）的功能和用法\t123\n2.6.3  星级评分条（RatingBar）的功能和用法\t125\n2.7  第6组UI组件：ViewAnimator及其子类\t126\n2.7.1  ViewSwitcher的功能与用法\t127\n2.7.2  图像切换器（ImageSwitcher）的功能与用法\t132\n2.7.3  文本切换器（TextSwitcher）的功能与用法\t134\n2.7.4  ViewFlipper的功能与用法\t136\n2.8  各种杂项组件\t138\n2.8.1  使用Toast显示提示信息框\t138\n2.8.2  日历视图（CalendarView）组件的功能和用法\t140\n2.8.3  日期、时间选择器（DatePicker和TimePicker）的功能和用法\t141\n2.8.4  数值选择器（NumberPicker）的功能与用法\t144\n2.8.5  搜索框（SearchView）的功能与用法\t146\n2.8.6  选项卡（TabHost）的功能和用法\t148\n2.8.7  滚动视图（ScrollView）的功能和用法\t150\n2.8.8  Notification的功能与用法\t151\n2.9  对话框\t154\n2.9.1  使用AlertDialog创建对话框\t154\n2.9.2  对话框风格的窗口\t161\n2.9.3  使用PopupWindow\t161\n2.9.4  使用DatePickerDialog、TimePickerDialog\t163\n2.9.5  使用ProgressDialog创建进度对话框\t164\n2.10  菜单\t167\n2.10.1  选项菜单和子菜单（SubMenu）\t167\n2.10.2  使用监听器来监听菜单事件\t171\n2.10.3  创建复选菜单项和单选菜单项\t171\n2.10.4  设置与菜单项关联的Activity\t171\n2.10.5  上下文菜单\t172\n2.10.6  使用XML文件定义菜单\t174\n2.10.7  使用PopupMenu创建弹出式菜单\t178\n2.11  使用活动条（ActionBar）\t179\n2.11.1  启用ActionBar\t180\n2.11.2  使用ActionBar显示选项菜单\t181\n2.11.3  启用程序图标导航\t183\n2.11.4  添加Action View\t184\n2.11.5  使用ActionBar实现Tab导航\t185\n2.11.6  使用ActionBar实现下拉式导航\t191\n2.12  本章小结\t192\n第3章  Android的事件处理\t193\n3.1  Android事件处理概述\t194\n3.2  基于监听的事件处理\t194\n3.2.1  监听的处理模型\t195\n3.2.2  事件和事件监听器\t197\n3.2.3  内部类作为事件监听器类\t200\n3.2.4  外部类作为事件监听器类\t200\n3.2.5  Activity本身作为事件监听器\t202\n3.2.6  匿名内部类作为事件监听器类\t203\n3.2.7  直接绑定到标签\t204\n3.3  基于回调的事件处理\t205\n3.3.1  回调机制与监听机制\t205\n3.3.2  基于回调的事件传播\t206\n3.3.3  重写onTouchEvent方法响应触摸屏事件\t208\n3.4  响应的系统设置的事件\t210\n3.4.1  Configuration类简介\t210\n3.4.2  重写onConfigurationChanged响应系统设置更改\t212\n3.5  Handler消息传递机制\t214\n3.5.1  Handler类简介\t214\n3.5.2  Handler、Loop、MessageQueue的工作原理\t216\n3.6  异步任务（AsyncTask）\t220\n3.7  本章小结\t223\n第4章  深入理解Activity与Fragment\t224\n4.1  建立、配置和使用Activity\t225\n4.1.1  Activity\t225\n4.1.2  配置Activity\t233\n4.1.3  启动、关闭Activity\t235\n4.1.4  使用Bundle在Activity之间交换数据\t237\n4.1.5  启动其他Activity并返回结果\t241\n4.2  Activity的回调机制\t245\n4.3  Activity的生命周期与加载模式\t246\n4.3.1  Activity的生命周期演示\t246\n4.3.2  Activity与Servlet的相似性与区别\t250\n4.3.3  Activity的4种加载模式\t251\n4.4  Fragment详解\t257\n4.4.1  Fragment概述及其设计哲学\t257\n4.4.2  创建Fragment\t258\n4.4.3  Fragment与Activity通信\t262\n4.4.4  Fragment管理与Fragment事务\t264\n4.5  Fragment的生命周期\t268\n4.6  本章小结\t272\n第5章  使用Intent和IntentFilter进行通信\t273\n5.1  Intent对象详解\t274\n5.1.1  使用Intent启动系统组件\t274\n5.2  Intent的属性及intent-filter配置\t275\n5.2.1  Component属性\t275\n5.2.2  Action、Category属性与intent-filter配置\t277\n5.2.3  指定Action、Category调用系统Activity\t282\n5.2.4  Data、Type属性与intent-filter配置\t287\n5.2.5  Extra属性\t295\n5.2.6  Flag属性\t295\n5.3  使用Intent创建Tab页面\t296\n5.4  本章小结\t297\n第6章  Android应用的资源\t298\n6.1  资源的类型及存储方式\t299\n6.1.1  资源的类型以及存储方式\t299\n6.1.2  使用资源\t301\n6.2  使用字符串、颜色、尺寸资源\t302\n6.2.1  颜色值的定义\t303\n6.2.2  定义字符串、颜色、尺寸资源文件\t303\n6.2.3  使用字符串、颜色、尺寸资源\t305\n6.3  数组（Array）资源\t307\n6.4  使用（Drawable）资源\t310\n6.4.1  图片资源\t310\n6.4.2  StateListDrawable资源\t311\n6.4.3  LayerDrawable资源\t312\n6.4.4  ShapeDrawable资源\t314\n6.4.5  ClipDrawable资源\t316\n6.4.6  AnimationDrawable资源\t318\n6.5  属性动画（Property Animation）资源\t320\n6.6  使用原始XML资源\t322\n6.6.1  定义原始XML资源\t322\n6.6.2  使用原始XML文件\t323\n6.7  使用布局（Layout）资源\t325\n6.8  使用菜单（Menu）资源\t325\n6.9  样式（Style）和主题（Theme）资源\t326\n6.9.1  样式资源\t326\n6.9.2  主题资源\t327\n6.10  属性（Attribute）资源\t329\n6.11  使用原始资源\t332\n6.12  国际化和资源自适应\t333\n6.12.1  Java国际化的思路\t334\n6.12.2  Java支持的语言和国家\t334\n6.12.3  完成程序国际化\t335\n6.12.4  为Android应用提供国际化资源\t337\n6.12.5  国际化Android应用\t338\n6.13  自适应不同屏幕的资源\t340\n6.14  本章小结\t343\n第7章  图形与图像处理\t344\n7.1  使用简单图片\t345\n7.1.1  使用Drawable对象\t345\n7.1.2  Bitmap和BitmapFactory\t345\n7.2  绘图\t348\n7.2.1  Android绘图基础：Canvas、Paint等\t348\n7.2.2  Path类\t352\n7.2.3  绘制游戏动画\t355\n7.3  图形特效处理\t362\n7.3.1  使用Matrix控制变换\t362\n7.3.2  使用drawBitmapMesh扭曲图像\t366\n7.3.3  使用Shader填充图形\t368\n7.4  逐帧（Frame）动画\t370\n7.4.1  AnimationDrawable与逐帧动画\t371\n7.5  补间（Tween）动画\t374\n7.5.1  Tween动画与Interpolator\t374\n7.5.2  位置、大小、旋转度、透明度改变的补间动画\t376\n7.5.3  自定义补间动画\t380\n7.6  属性动画\t383\n7.6.1  属性动画的API\t383\n7.6.2  使用属性动画\t385\n7.7  使用SurfaceView实现动画\t393\n7.7.1  SurfaceView的绘图机制\t394\n7.8  本章小结\t398\n第8章  Android数据存储与IO\t399\n8.1  使用SharedPreferences\t400\n8.1.1  SharedPreferences与Editor简介\t400\n8.1.2  SharedPreferences的存储位置和格式\t401\n8.1.3  读、写其他应用SharedPreferences\t403\n8.2  File存储\t404\n8.2.1  openFileOutput和openFileInput\t405\n8.2.2  读写SD卡上的文件\t407\n8.3  SQLite数据库\t414\n8.3.1  SQLiteDatabase简介\t414\n8.3.2  创建数据库和表\t415\n8.3.3  使用SQL语句操作SQLite数据库\t416\n8.3.4  使用sqlite3工具\t418\n8.3.5  使用特定方法操作SQLite数据库\t419\n8.3.6  事务\t422\n8.3.7  SQLiteOpenHelper类\t422\n8.4  手势（Gesture）\t427\n8.4.1  手势检测\t427\n8.4.2  增加手势\t434\n8.4.3  识别用户的手势\t437\n8.5  自动朗读（TTS）\t439\n8.6  本章小结\t441\n第9章  使用ContentProvider实现数据共享\t442\n9.1  数据共享标准：ContentProvider简介\t443\n9.1.1  ContentProvider简介\t443\n9.1.2  Uri简介\t444\n9.1.3  使用ContentResolver操作数据\t445\n9.2  开发ContentProvider\t446\n9.2.1  ContentProvider与ContentResolver的关系\t446\n9.2.2  开发ContentProvider\t447\n9.2.3  配置ContentProvider\t448\n9.2.4  使用ContentResolver调用方法\t449\n9.2.5  创建ContentProvider的说明\t451\n9.3  操作系统的ContentProvider\t457\n9.3.1  使用ContentProvider管理联系人\t457\n9.3.2  使用ContentProvider管理多媒体内容\t463\n9.4  监听ContentProvider的数据改变\t466\n9.4.1  ContentObserver简介\t466\n9.5  本章小结\t468\n第10章  Service与BroadcastReceiver\t469\n10.1  Service简介\t470\n10.1.1  创建、配置Service\t470\n10.1.2  启动和停止Service\t472\n10.1.3  绑定本地Service并与之通信\t473\n10.1.4  Service的生命周期\t477\n10.1.5  使用IntentService\t478\n10.2  跨进程调用Service（AIDL Service）\t481\n10.2.1  AIDL Service简介\t482\n10.2.2  创建AIDL文件\t482\n10.2.3  将接口暴露给客户端\t483\n10.2.4  客户端访问AIDLService\t484\n10.3  电话管理器（TelephonyManager）\t491\n10.4  短信管理器（SmsManager）\t498\n10.5  音频管理器（AudioManager）\t502\n10.5.1  AudioManager简介\t502\n10.6  振动器（Vibrator）\t504\n10.6.1  Vibrator简介\t504\n10.6.2  使用Vibrator控制手机振动\t505\n10.7  手机闹钟服务（AlarmManager）\t505\n10.7.1  AlarmManager简介\t505\n10.7.2  设置闹钟\t506\n10.8  接收广播消息\t510\n10.8.1  BroadcastReceiver简介\t510\n10.8.2  发送广播\t512\n10.8.3  有序广播\t513\n10.9  接收系统广播消息\t520\n10.10  本章小结\t523\n第11章  多媒体应用开发\t524\n11.1  音频和视频的播放\t525\n11.1.1  使用MediaPlayer播放音频\t525\n11.1.2  音乐特效控制\t528\n11.1.3  使用SoundPool播放音效\t536\n11.1.4  使用VideoView播放视频\t539\n11.1.5  使用MediaPlayer和SurfaceView播放视频\t540\n11.2  使用MediaRecorder录制音频\t543\n11.3  控制摄像头拍照\t546\n11.3.1  通过Camera进行拍照\t546\n11.3.2  录制视频短片\t551\n11.4  本章小结\t555\n第12章  OpenGL与3D应用开发\t556\n12.1  3D图像与3D开发的基本知识\t557\n12.2  OpenGL和OpenGL ES简介\t558\n12.3  绘制2D图形\t559\n12.3.1  在Android应用中使用OpenGL ES\t559\n12.3.2  绘制平面上的多边形\t562\n12.3.3  旋转\t567\n12.4  绘制3D图形\t569\n12.4.1  构建3D图形\t569\n12.4.2  应用纹理贴图\t573\n12.5  本章小结\t578\n第13章  Android网络应用\t579\n13.1  基于TCP协议的网络通信\t580\n13.1.1  TCP协议基础\t580\n13.1.2  使用ServerSocket创建TCP服务器端\t581\n13.1.3  使用Socket进行通信\t582\n13.1.4  加入多线程\t586\n13.2  使用URL访问网络资源\t592\n13.2.1  使用URL读取网络资源\t593\n13.2.2  使用URLConnection提交请求\t594\n13.3  使用HTTP访问网络\t599\n13.3.1  使用HttpURLConnection\t600\n13.3.2  使用Apache HttpClient\t605\n13.4  使用WebView视图显示网页\t609\n13.4.1  使用WebView浏览网页\t610\n13.4.2  使用WebView加载HTML代码\t611\n13.4.3  使用WebView中的JavaScript调用Android方法\t612\n13.5  使用Web Service进行网络编程\t615\n13.5.1  Web Service平台概述\t615\n13.5.2  使用Android应用调用Web Service\t617\n13.6  本章小结\t628\n第14章  管理Android手机桌面\t629\n14.1  管理手机桌面\t630\n14.1.1  删除桌面组件\t630\n14.1.2  添加桌面组件\t630\n14.2  改变手机壁纸\t631\n14.2.1  开发动态壁纸（Live Wallpapers）\t631\n14.3  通过程序添加快捷方式\t636\n14.4  管理桌面控件\t638\n14.4.1  开发桌面控件\t638\n14.4.2  Android 4.0新增的显示数据集的桌面控件\t642\n14.5  本章小结\t647\n第15章  传感器应用开发\t648\n15.1  利用Android的传感器\t649\n15.1.1  开发传感器应用\t649\n15.2  Android的常用传感器\t651\n15.2.1  方向传感器Orientation\t651\n15.2.2  磁场传感器Magnetic Field\t652\n15.2.3  温度传感器Temperature\t652\n15.2.4  光传感器Light\t652\n15.2.5  压力传感器Pressure\t653\n15.3  传感器应用案例\t655\n15.4  本章小结\t660\n第16章  GPS应用开发\t661\n16.1  支持GPS的核心API\t662\n16.2  获取LocationProvider\t664\n16.2.1  获取所有可用的LocationProvider\t664\n16.2.2  通过名称获得指定LocationProvider\t665\n16.2.3  根据Criteria获得LocationProvider\t665\n16.3  获取定位信息\t666\n16.3.1  通过模拟器发送GPS信息\t666\n16.3.2  获取定位数据\t667\n16.4  临近警告\t668\n16.5  本章小结\t670\n第17章  使用Google Map服务\t671\n17.1. \t 调用Google Map的准备\t672\n17.1.1  获取Map API Key\t672\n17.1.2  创建支持Google Map API的AVD\t674\n17.2  根据GPS信息在地图上定位\t676\n17.3  GPS导航\t681\n17.4  根据地址定位\t683\n17.4.1  地址解析与反向地址解析\t683\n17.4.2  根据地址定位\t688\n17.5  本章小结\t689\n第18章  疯狂连连看\t690\n18.1  连连看游戏简介\t691\n18.2  开发游戏界面\t691\n18.2.1  开发界面布局\t692\n18.2.2  开发游戏界面组件\t693\n18.2.3  处理方块之间的连接线\t696\n18.3  连连看的状态数据模型\t697\n18.3.1  定义数据模型\t697\n18.3.2  初始化游戏状态数据\t698\n18.4  加载界面的图片\t700\n18.5  实现游戏Activity\t703\n18.6  实现游戏逻辑\t708\n18.6.1  定义GameService组件接口\t708\n18.6.2  实现GameService组件\t709\n18.6.3  获取触碰点的方块\t710\n18.6.4  判断两个方块是否可以相连\t711\n18.6.5  定义获取通道的工具方法\t713\n18.6.6  没有转折点的横向连接\t715\n18.6.7  没有转折点的纵向连接\t715\n18.6.8  一个转折点的连接\t716\n18.6.9  两个转折点的连接\t718\n18.6.10  找出最短距离\t724\n18.7  本章小结\t726\n第19章  电子拍卖系统\t727\n19.1  系统功能简介和架构设计\t728\n19.1.1  系统功能简介\t728\n19.1.2  系统架构设计\t729\n19.2  JSON简介\t730\n19.2.1  使用JSON语法创建对象\t731\n19.2.2  使用JSON语法创建数组\t732\n19.2.3  Java的JSON支持\t733\n19.3  发送请求的工具类\t734\n19.4  用户登录\t735\n19.4.1  处理登录的Servlet\t736\n19.4.2  用户登录\t737\n19.5  查看流拍物品\t745\n19.5.1  查看流拍物品的Servlet\t745\n19.5.2  查看流拍物品\t746\n19.6  管理物品种类\t751\n19.6.1  浏览物品种类的Servlet\t752\n19.6.2  查看物品种类\t752\n19.6.3  添加种类的Servlet\t757\n19.6.4  添加物品种类\t758\n19.7  管理拍卖物品\t760\n19.7.1  查看自己的拍卖物品的Servlet\t760\n19.7.2  查看自己的拍卖物品\t761\n19.7.3  添加拍卖物品的Servlet\t764\n19.7.4  添加拍卖物品\t765\n19.8  参与竞拍\t771\n19.8.1  选择物品种类\t771\n19.8.2  根据种类浏览物品的Servlet\t772\n19.8.3  根据种类浏览物品\t773\n19.8.4  参与竞价的Servlet\t775\n19.8.5  参与竞价\t776\n19.9  权限控制\t781\n19.10  本章小结\t782",
      "pages": "782",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s28024443.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s28024443.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s28024443.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/21823754\/",
      "id": "21823754",
      "publisher": "电子工业出版社",
      "isbn10": "7121194856",
      "isbn13": "9787121194856",
      "title": "疯狂Android讲义",
      "url": "http:\/\/api.douban.com\/v2\/book\/21823754",
      "alt_title": "",
      "author_intro": "李刚，从事10多年的Java EE应用开发，现任疯狂软件教育中心教学总监。\n疯狂Java实训营创始人，疯狂Java体系图书作者。曾任LITEON公司J2EE技术主管，负责该公司的企业信息化平台的架构设计。\n51CTO专家门诊特邀嘉宾。\n曾任广州电信、广东龙泉科技等公司的技术培训导师，广东技术师范学院计算机科学系的兼职副教授。\n培训的学生已在华为、IBM、阿里软件、网易、电信盈科等名企就职。\n国内著名高端IT技术作家，已出版《疯狂Java讲义》、《疯狂Android讲义》、《轻量级Java EE企业应用实战》、《疯狂Ajax讲义》、《疯狂XML讲义》、《经典Java EE企业应用实战》、《疯狂HTML 5\/CSS 3\/JavaScript讲义》、《Struts 2.x权威指南》等著作。其中疯狂Java体系图书均已得到广泛的市场认同，多次重印成为超级畅销书，并被多所“985”“211”院校选作教材。部分图书已被翻译成繁体中文版、授权到台湾地区。",
      "summary": "移动互联网已经成为当今世界发展最快、市场潜力最大、前景最诱人的业务，而Android则是移动互联网上市场占有率最高的平台（已远超iOS，最新统计数据：Android占53.7%，iOS占35%）；与此同时，Android应用选择了Java作为其开发语言，这对于Java来说也是一次极好的机会。\n本书是《疯狂Android讲义》的第2版。本书基于最新的Android 4.2，Android SDK、ADT都基于Android 4.2，书中每个案例、每个截图都全面升级到Android 4.2。本书全面地介绍了Android应用开发的相关知识，全书内容覆盖了Android用户界面编程、Android四大组件、Android资源访问、图形\/图像处理、事件处理机制、Android输入\/输出处理、音频\/视频多媒体应用开发、OpenGL与3D应用开发、网络通信编程、Android平台的Web Service、传感器应用开发、GPS应用开发、Google Map服务等。\n本书并不局限于介绍Android编程的各种理论知识，而是从“项目驱动”的角度来讲授理论。全书一共包括近百个实例，这些示范性的实例既可帮读者更好地理解各知识点在实际开发中的应用，也可供读者在实际开发时作为参考、拿来就用。本书最后还提供了两个实用的案例：疯狂连连看和电子拍卖系统Android客户端，具有极高的参考价值。本书提供了配套的答疑网站，如果读者在阅读本书时遇到技术问题，可以登录疯狂Java联盟（http:\/\/www.crazyit.org）发帖，笔者将会及时予以解答。\n本书适合有一定Java编程基础的读者。如果读者已熟练掌握Java编程语法并具有一定图形界面编程经验，阅读本书将十分合适。否则，阅读本书之前建议先认真阅读疯狂Java体系之《疯狂Java讲义》。",
      "price": "99.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 10,
        "average": "7.1",
        "min": 0
      },
      "subtitle": "响应式用户界面与设计模式",
      "author": [
        "JuhaniLehtimaki"
      ],
      "pubdate": "2013-10-1",
      "tags": [
        {
          "count": 46,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 26,
          "name": "交互设计",
          "title": "交互设计"
        },
        {
          "count": 19,
          "name": "ui",
          "title": "ui"
        },
        {
          "count": 13,
          "name": "移动ui",
          "title": "移动ui"
        },
        {
          "count": 12,
          "name": "设计",
          "title": "设计"
        },
        {
          "count": 8,
          "name": "UI",
          "title": "UI"
        },
        {
          "count": 5,
          "name": "产品设计",
          "title": "产品设计"
        },
        {
          "count": 5,
          "name": "移动互联网",
          "title": "移动互联网"
        }
      ],
      "origin_title": "Smashing Android UI",
      "image": "https://img3.doubanio.com\/mpic\/s27467710.jpg",
      "binding": "平装",
      "translator": [
        "王东明"
      ],
      "catalog": "译者序\n前言\n第一部分 Android设计简介\n第1章 用户界面设计和易用性入门  2\n1.1 考虑技术与设计  2\n1.2 理解心智模型  3\n1.3 为用户设计  6\n1.4 没有应用无所不精，选择适合自己的领域  9\n1.5 你是专家，用户不是设计师  9\n1.6 了解用户，为普通人设计  9\n1.7 总结  11\n第2章 不要马上开始编程  12\n2.1 原型设计  12\n2.2 设计工具  14\n2.3 用户测试  17\n2.4 总结  20\n第3章 考虑为移动和触摸设备设计  21\n3.1 为移动而设计  21\n3.2 为触摸界面设计  26\n3.3 总结  29\n第4章 探索Android平台  30\n4.1 Android平台的挑战  30\n4.2 Android的版本  36\n4.3 Android应用的发布  38\n4.4 开源的意义是什么  40\n4.5 总结  41\n第二部分 Android平台的特性和UI组件\n第5章 Android应用架构和在线指南  44\n5.1 Android应用程序结构概览  44\n5.2 Android项目结构概览  47\n5.3 官方Android指南  48\n5.4 总结  49\n第6章 Android的意图系统  50\n6.1 意图让应用程序相互协作  50\n6.2 使用社交网络并分享  51\n6.3 和浏览器一起工作  52\n6.4 Android意图系统的工作原理  53\n6.5 创建自定义行为  58\n6.6 意图无处不在  58\n6.7 意图与第三方API  58\n6.8 总结  59\n第7章 Android应用的导航结构  60\n7.1 Android导航系统的组件：活动和意图  60\n7.2 Android导航控件  61\n7.3 总结  70\n第8章 主界面应用小部件  71\n8.1 主界面应用小部件的使用  71\n8.2 更新应用小部件数据  73\n8.3 应用小部件布局和功能  75\n8.4 实现应用小部件  78\n8.5 总结  80\n第9章 通知及告知用户  81\n9.1 Android通知方法  81\n9.2 何时通知用户  83\n9.3 何时不要通知用户  86\n9.4 避免使用弹出框  86\n9.5 从状态栏通知中获得更多信息  87\n9.6 总结  91\n第10章 物理按键、输入法和传感器的设计  92\n10.1 触摸屏的设计  92\n10.2 手机物理按键的设计  93\n10.3 软键盘的设计  94\n10.4 物理键盘设计  99\n10.5 方向键和轨迹球设计  99\n10.6 触控笔设计  100\n10.7 声控设计  101\n10.8 外接键盘、鼠标和触摸板的设计  101\n10.9 智能附件的设计  102\n10.10 传感器的设计  102\n10.11 第二块屏幕的设计  102\n10.12 总结  103\n第11章 平台用户界面组件的设计  104\n11.1 使用用户界面小部件  104\n11.2 自定义用户界面小部件  111\n11.3 调整排版  113\n11.4 使用图标  117\n11.5 使用动画和过渡效果  121\n11.6 总结  127\n第三部分 可扩展的Android设计\n第12章 管理Android资源  130\n12.1 使用Android资源  130\n12.2 屏幕密度设计  132\n12.3 屏幕大小和形状的设计  135\n12.4 语言和地区设置  137\n12.5 设备控件的设计  137\n12.6 平台版本的设计  138\n12.7 设备模式的设计  138\n12.8 总结  138\n第13章 Android应用布局  139\n13.1 Android布局策略  139\n13.2 用XML文件和代码布局  140\n13.3 布局的管理  141\n13.4 定义布局的尺寸  149\n13.5 滚动条  149\n13.6 z轴的布局顺序  150\n13.7 内边距和外边距  150\n13.8 导入与合并布局文件  150\n13.9 自定义布局  151\n13.10 Android开发工具和用户界面生成器  151\n13.11 调试布局  152\n13.12 总结  153\n第14章 可缩放的图形  154\n14.1 九宫格图片  154\n14.2 绘图XML  158\n14.3 用代码绘制  163\n14.4 总结  166\n第15章 超越可缩放——响应式设计  167\n15.1 Android设备不仅仅只是手机  167\n15.2 了解响应式设计  169\n15.3 制作响应式用户界面的常见方法  176\n15.4 总结  178\n第16章 实现响应式用户界面  179\n16.1 片段简介  179\n16.2 片段和活动结构  181\n16.3 移植现存的应用  182\n16.4 示例程序  183\n16.5 总结  193\n第四部分 Android UI设计模式\n第17章 用户界面设计模式简介  196\n17.1 用户界面设计模式  196\n17.2 使用UI设计模式的好处  197\n17.3 Android设计指南中的设计模式  198\n17.4 本书介绍的用户界面设计模式  198\n17.5 总结  199\n第18章 用户操作设计模式  200\n18.1 使用操作栏模式  200\n18.2 使用快捷操作设计模式  206\n18.3 使用操作抽屉设计模式  210\n18.4 使用下拉刷新设计模式  212\n18.5 使用滑动忽略的手势  215\n18.6 总结  217\n第19章 导航和布局设计模式  218\n19.1 使用层叠图库  218\n19.2 使用仪表盘  220\n19.3 使用工作空间  223\n19.4 使用分拆视图  226\n19.5 根据上下文扩展的设计模式  228\n19.6 使用侧边导航  230\n19.7 总结  232\n第20章 数据设计模式  233\n20.1 使用动态列表  233\n20.2 使用图片占位符设计模式  234\n20.3 非强制登录模式  236\n20.4 使用拖动重排手柄模式  238\n20.5 总结  239\n第21章 用户界面设计反模式  240\n21.1 避免使用启动界面  240\n21.2 避免使用引导界面  241\n21.3 避免使用确认窗口  242\n21.4 避免在界面上使用Back按钮  243\n21.5 避免使用菜单按钮  244\n21.6 避免隐藏状态栏  244\n21.7 避免为快捷操作使用滑动覆盖层  245\n21.8 避免使用非Android的设计  246\n21.9 总结  247",
      "pages": "247",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s27467710.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s27467710.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s27467710.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/25769136\/",
      "id": "25769136",
      "publisher": "机械工业出版社",
      "isbn10": "7111435893",
      "isbn13": "9787111435891",
      "title": "精彩绝伦的Android UI设计",
      "url": "http:\/\/api.douban.com\/v2\/book\/25769136",
      "alt_title": "Smashing Android UI",
      "author_intro": "JuhaniLehtimaki　资深Android开发工程师和设计师，拥有10余年Java开发经验，专注于Android应用的用户界面设计和开发，负责维护一个关于AndroidUI设计模式的博客，同时撰写一个关于AndroidUI设计模式的专栏。现任Snapp TV公司Android部门和Google TV部门的负责人。",
      "summary": "本书是Andriod UI设计领域的经典著作，Amazon五星级畅销书。不仅从Android应用设计者的角度系统讲解了要从事Android UI设计必须要掌握的Android平台的所有技术和特性，还从Android应用开发者的角度全面总结了Android UI设计的方法、技巧、模式、反模式，以及如何实现响应式用户界面设计。本书共21章，分为四部分。第一部分（第1～4章）讲述用户界面设计、用户界面设计的工具、移动设备和触摸设备的设计，并探讨Android平台；第二部分（第5～11章）介绍 Android的应用架构和在线指南、Android的意图系统、Android应用的导航结构、主界面应用小部件、通知、物理按键、输入法和传感器设计，以及平台用户界面组件设计；第三部分（第12～16章）讨论 Android资源的管理、Android应用的布局、可缩放的图形、响应式设计，以及如何实现响应式用户界面；第四部分（第17～21章）阐述用户界面设计模式、用户操作设计模式、导航和布局设计模式、数据设计模式以及用户界面设计的反模式。",
      "price": "59.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 37,
        "average": "7.7",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Mark Murphy"
      ],
      "pubdate": "2010-3-19",
      "tags": [
        {
          "count": 42,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 13,
          "name": "Programming",
          "title": "Programming"
        },
        {
          "count": 9,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 8,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 6,
          "name": "入门",
          "title": "入门"
        },
        {
          "count": 5,
          "name": "android",
          "title": "android"
        },
        {
          "count": 4,
          "name": "技术",
          "title": "技术"
        },
        {
          "count": 3,
          "name": "安卓",
          "title": "安卓"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s4449424.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "416",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4449424.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4449424.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4449424.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4042925\/",
      "id": "4042925",
      "publisher": "Apress",
      "isbn10": "1430226293",
      "isbn13": "9781430226291",
      "title": "Beginning Android 2",
      "url": "http:\/\/api.douban.com\/v2\/book\/4042925",
      "alt_title": "",
      "author_intro": "",
      "summary": "",
      "price": "USD 44.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 31,
        "average": "7.2",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "[印] Satya Komatineni"
      ],
      "pubdate": "2011-11",
      "tags": [
        {
          "count": 59,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 18,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 15,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 6,
          "name": "android",
          "title": "android"
        },
        {
          "count": 6,
          "name": "Programming",
          "title": "Programming"
        },
        {
          "count": 4,
          "name": "计算机科学",
          "title": "计算机科学"
        },
        {
          "count": 3,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 3,
          "name": "2011",
          "title": "2011"
        }
      ],
      "origin_title": "Pro Android 3",
      "image": "https://img3.doubanio.com\/mpic\/s7650805.jpg",
      "binding": "平装",
      "translator": [
        "杨越"
      ],
      "catalog": "第1 章  Android计算平台简介　　1\n1.1  面向新PC 的全新平台　　1\n1.2  Android 的历史　　3\n1.3  Dalvik VM 剖析　　4\n1.4  理解Android 软件栈　　5\n1.5  使用Android SDK 开发最终用户应用程序　　6\n1.5.1  Android 模拟器　　6\n1.5.2  Android UI　　7\n1.5.3  Android 基础组件　　7\n1.5.4  高级UI 概念　　8\n1.5.5  Android Service 组件　　 10\n1.5.6  Android 媒体和电话组件　　 10\n1.5.7  Android Java 包　　11\n1.6  利用Android 源代码　　13\n1.7  本书的示例项目　　14\n1.8  小结　　15\n第2 章  设置开发环境　　16\n2.1  设置环境　　16\n2.1.1  下载JDK 6 　　16\n2.1.2  下载Eclipse 3.6　　17\n2.1.3  下载Android SDK 　　18\n2.1.4  命令行窗口　　19\n2.1.5  安装ADT 　　19\n2.2  了解基本组件　　21\n2.2.1  View　　21\n2.2.2  Activity　　21\n2.2.3  Intent　　22\n2.2.4  ContentProvider　　22\n2.2.5  Service　　22\n2.2.6  AndroidManifest.xml　　 22\n2.2.7  AVD 　　22\n2.3  Hello World!　　23\n2.4  AVD 　　27\n2.5  剖析Android 应用程序的结构　　 28\n2.6  分析Notepad 应用程序　　 30\n2.6.1  加载和运行Notepad 应用程序　　30\n2.6.2  分解应用程序　　31\n2.7  了解应用程序生命周期　　37\n2.8  调试应用程序　　40\n2.8.1  启动模拟器　　 41\n2.8.2  StrictMode 　　42\n2.8.3  参考资料　　 46\n2.9  小结　　 46\n第3 章  使用Android 资源　　 47\n3.1  资源　　47\n3.1.1  字符串资源　　 47\n3.1.2  布局资源　　49\n3.1.3  资源引用语法　　51\n3.1.4  定义资源ID 供以后使用　　 52\n3.1.5  已编译和未编译的Android资源　　 52\n3.2  Android 关键资源　　53\n3.3  使用任意XML 资源文件　　 61\n3.4  使用原始资源　　62\n3.5  使用资产　　 63\n3.6  了解资源目录结构　　63\n3.7  资源和配置更改　　64\n3.8  参考资料URL　　67\n3.9  小结　　 67\n第4 章  ContentProvider 　　68\n4.1  探索Android 内置的ContentProvider 　　69\n4.2  ContentProvider 的架构　　73\n4.3  实现ContentProvider　　84\n4.4  练习图书提供程序　　94\n4.4.1  添加图书　　94\n4.4.2  删除图书　　94\n4.4.3  获取图书数量　　95\n4.4.4  显示图书列表　　95\n4.5  资源　　96\n4.6  小结　　96\n第5 章  Intent　　97\n5.1  Android Intent 基础知识　　97\n5.2  Android 中可用的Intent 　　98\n5.3  Intent 的组成　　100\n5.3.1  Intent 和数据URI　　100\n5.3.2  一般操作　　101\n5.3.3  使用extra 信息　　102\n5.3.4  使用组件直接调用活动　　103\n5.3.5  Intent 类别　　104\n5.3.6  将Intent 解析为组件的规则　　106\n5.4  练习使用ACTION_PICK　　108\n5.5  练习使用GET_CONTENT 操作　　110\n5.6  挂起的Intent　　111\n5.7  资源　　112\n5.8  小结　　113\n第6 章  构建用户界面和使用控件　　 114\n6.1  Android 中的UI 开发　　114\n6.1.1  完全利用代码来构建UI　　115\n6.1.2  完全使用XML 构建UI　　117\n6.1.3  使用XML 结合代码构建UI 　　118\n6.2  Android 中的常见控件　　120\n6.2.1  文本控件　　120\n6.2.2  按钮控件　　123\n6.2.3  ImageView 控件　　131\n6.2.4  日期和时间控件　　132\n6.2.5  MapView 控件　　134\n6.3  适配器　　134\n6.3.1  SimpleCursorAdapter　　135\n6.3.2  了解ArrayAdapter 　　136\n6.4  结合使用适配器和AdapterView 　　138\n6.4.1  基本的列表控件：ListView 　　138\n6.4.2  GridView 控件　　145\n6.4.3  Spinner 控件　　146\n6.4.4  Gallery 控件　　148\n6.4.5  创建自定义适配器　　148\n6.4.6  Android 中的其他控件　　153\n6.5  样式和主题　　154\n6.5.1  使用样式　　154\n6.5.2  使用主题　　156\n6.6  布局管理器　　157\n6.6.1  LinearLayout 布局管理器　　157\n6.6.2  TableLayout 布局管理器　　160\n6.6.3  RelativeLayout 布局管理器　　163\n6.6.4  FrameLayout 布局管理器　　165\n6.6.5  为各种设备配置自定义布局　　167\n6.7  使用Hierarchy Viewer 调试和优化布局　　168\n6.8  参考资料　　171\n6.9  小结　　171\n第7 章  使用菜单　　172\n7.1  Android 菜单　　172\n7.1.1  创建菜单　　173\n7.1.2  使用菜单组　　174\n7.2  响应菜单项　　175\n7.3  创建测试工具来测试菜单　　176\n7.4  使用其他菜单类型　　182\n7.4.1  展开的菜单　　182\n7.4.2  使用图标菜单　　182\n7.4.3  使用子菜单　　183\n7.4.4  配置系统菜单　　183\n7.4.5  使用上下文菜单　　184\n7.4.6  使用交替菜单　　186\n7.4.7  使用菜单响应数据变化　　189\n7.5  通过XML 文件加载菜单　　189\n7.5.1  XML 菜单资源文件的结构　　189\n7.5.2  填充XML 菜单资源文件　　190\n7.5.3  响应基于XML 的菜单项　　190\n7.5.4  其他XML 菜单标记简介　　191\n7.6  资源　　192\n7.7  小结　　192\n第8 章  使用对话框　　193\n8.1  使用Android 中的对话框　　193\n8.1.1  设计提醒对话框　　193\n8.1.2  设计提示对话框　　195\n8.1.3  Android 对话框的特性　　199\n8.1.4  重新设计提示对话框　　200\n8.2  使用托管对话框　　200\n8.2.1  理解托管对话框协议　　201\n8.2.2  将非托管对话框重新转换为托管对话框　　201\n8.2.3  简化托管对话框协议　　202\n8.3  使用Toast 　　209\n8.4  资源　　210\n8.5  小结　　210\n第9 章  管理和组织首选项　　211\n9.1  探索首选项框架　　211\n9.1.1  ListPreference　　211\n9.1.2  CheckBoxPreference　　219\n9.1.3  EditTextPreference　　220\n9.1.4  RingtonePreference　　222\n9.2  组织首选项　　223\n9.3  以编程方式操作首选项　　226\n9.4  使用首选项保存状态　　226\n9.5  参考资料　　227\n9.6  小结　　228\n第10 章  探索安全性和权限　　229\n10.1  理解Android 安全性模型　　229\n10.1.1 安全性概念概述　　229\n10.1.2  为部署签名应用程序　　230\n10.2  执行运行时安全性检查　　234\n10.2.1  进程边界上的安全性　　235\n10.2.2  声明和使用权限　　235\n10.2.3  理解和使用自定义权限　　237\n10.2.4  理解和使用URI 权限　　241\n10.3  参考资料　　 243\n10.4  小结　　243\n第11 章  构建和使用服务　　244\n11.1  使用HTTP 服务　　 244\n11.1.1  将HttpClient 用于HTTPGET 请求　　244\n11.1.2  将HttpClient 用于HTTPPOST 请求（多部分POST\n请求示例）　　 246\n11.1.3  SOAP、JSON 和XML分析程序　　248\n11.1.4  处理异常　　 249\n11.1.5  解决多线程问题　　251\n11.1.6  有趣的超时　　253\n11.1.7  使用HttpURLConnection 　　 254\n11.1.8  使用AndroidHttpClient 　　 254\n11.1.9  使用后台线程（AsyncTask） 　　 255\n11.1.10  使用AsyncTask 处理配置更改　　 260\n11.1.11  使用DownloadManager获取文件　　 265\n11.2  使用Android 服务　　 270\n11.2.1  Android 中的服务　　 270\n11.2.2  本地服务　　 271\n11.2.3  AIDL 服务　　 277\n11.2.4  在AIDL 中定义服务接口　　 278\n11.2.5  实现AIDL 接口　　280\n11.2.6  从客户端应用程序调用服务　　 282\n11.2.7  向服务传递复杂的类型　　285\n11.3  使用服务的真实示例　　 294\n11.3.1  Google 翻译API　　 294\n11.3.2  使用Google 翻译API 　　 295\n11.4  参考资料　　303\n11.5  小结　　303\n第12 章  包　　304\n12.1  包和进程　　304\n12.1.1  包规范的细节　　 304\n12.1.2  将包名称转换为进程名称　　304\n12.1.3  列出安装的包　　305\n12.1.4  通过包浏览器删除包　　305\n12.2  包签名过程回顾　　306\n12.2.1  理解数字签名：场景1 　　306\n12.2.2  理解数字签名：场景2 　　306\n12.2.3  一种理解数字签名的模式　　307\n12.2.4  数字签名执行方式　　307\n12.2.5  签名过程的影响　　307\n12.3  在包之间共享数据　　308\n12.3.1  共享用户ID 的性质　　308\n12.3.2  共享数据的代码模式　　309\n12.4  库项目　　309\n12.4.1  库项目的概念　　310\n12.4.2  库项目的性质　　310\n12.4.3  创建库项目　　312\n12.4.4  创建使用库的Android项目　　314\n12.5  参考资料　　320\n12.6  小结　　320\n第13 章  处理程序　　 321\n13.1  Android 组件和线程　　321\n13.1.1  活动在主线程上运行　　322\n13.1.2  广播接收程序在主线程上运行　　322\n13.1.3  服务在主线程上运行　　322\n13.1.4  ContentProvider 在主线程上运行　　322\n13.1.5  单一主线程的影响　　323\n13.1.6  线程池、ContentProvider、外部服务组件　　323\n13.1.7  线程实用程序：发现线程　　323\n13.2  处理程序　　324\n13.2.1  持有主线程的影响　　325\n13.2.2  使用处理程序延迟主线程上的工作　　325\n13.2.3  延迟工作的处理程序源代码示例　　327\n13.2.4  构造合适的Message 对象　　327\n13.2.5  将Message 对象发送给队列　　328\n13.2.6  响应handleMessage 回调　　328\n13.3  使用工作线程　　328\n13.3.1  从菜单调用工作线程　　329\n13.3.2  在工作线程与主线程之间通信　　330\n13.3.3  线程行为概述　　332\n13.4  处理程序示例驱动程序类　　332\n13.4.1  驱动程序活动文件　　333\n13.4.2  布局文件　　336\n13.4.3  菜单文件　　336\n13.4.4  描述文件　　336\n13.5  组件和进程寿命　　337\n13.5.1  活动生命周期　　337\n13.5.2  服务生命周期　　338\n13.5.3  接收程序生命周期　　338\n13.5.4  提供程序生命周期　　339\n13.6  代码编译说明　　339\n13.6.1  从ZIP 文件创建项目　　339\n13.6.2  从代码清单创建项目　　340\n13.7  参考资料　　340\n13.8  小结　　341\n第14 章  广播接收程序和长期运行的服务　　342\n14.1  广播接收程序　　342\n14.1.1  发送广播　　342\n14.1.2  编写简单的接收程序：示例代码　　343\n14.1.3  在描述文件中注册接收程序　　344\n14.1.4  发送测试广播　　344\n14.1.5  容纳多个接收程序　　348\n14.1.6  进程外接收程序项目　　349\n14.2  从接收程序使用通知　　350\n14.2.1  通过通知管理器监控通知　　350\n14.2.2  发送通知　　352\n14.3  长期运行的接收程序和服务　　354\n14.3.1  长期运行的广播接收程序协议　　355\n14.3.2  IntentService 　　356\n14.3.3  IntentService 源代码　　356\n14.4  为广播接收程序扩展IntentService　　358\n14.4.1  长期运行的广播服务抽象　　358\n14.4.2  长期运行的接收程序　　360\n14.4.3  使用LightedGreenRoom抽象唤醒锁　　362\n14.5  长期运行的服务的实现　　367\n14.5.1  非粘滞性服务的细节　　368\n14.5.2  粘滞性服务的细节　　368\n14.5.3  非粘滞性的变体：重传送（redeliver）Intent\n368\n14.5.4  在onStartCommand 中指定服务标志　　369\n14.5.5  挑选合适的粘滞性　　369\n14.5.6  从两个位置控制唤醒锁　　369\n14.5.7  长期运行的服务的实现　　369\n14.5.8  测试长期运行的服务　　371\n14.6  代码编译说明　　372\n14.6.1  从ZIP 文件创建项目　　372\n14.6.2  通过代码清单创建项目　　372\n14.7  参考资料　　374\n14.8  小结　　374\n第15 章  闹钟管理器　　375\n15.1  闹钟管理器基本知识：设置一个简单的闹钟　　375\n15.1.1  获取闹钟管理器　　375\n15.1.2  设置闹钟时间　　375\n15.1.3  设置闹钟接收程序　　376\n15.1.4  创建适合闹钟的PendingIntent 　　377\n15.1.5  设置闹钟　　377\n15.1.6  测试项目　　378\n15.2  探索其他闹钟管理器场景　　384\n15.2.1  设置重复闹钟　　384\n15.2.2  取消闹钟　　386\n15.2.3  使用多个闹钟　　388\n15.2.4  Intent 在设置闹钟时的首要职责　　391\n15.2.5 闹钟的持久化　　 394\n15.3  闹钟管理器事实　　 394\n15.4  参考资料　　 394\n15.5  小结　　 395\n第16 章  2D 动画揭秘　　396\n16.1  逐帧动画　　 396\n16.1.1  计划逐帧动画　　 396\n16.1.2  创建活动　　398\n16.1.3  将动画添加到活动　　 399\n16.2  布局动画　　 401\n16.2.1  基本的补间动画类型　　 402\n16.2.2  计划布局动画测试工具　　 402\n16.2.3  创建活动和ListView　　 403\n16.2.4  将ListView 制作成动画　　405\n16.2.5  使用插值器　　 408\n16.3  视图动画　　 409\n16.3.1  理解视图动画　　 409\n16.3.2  添加动画　　 412\n16.3.3  使用Camera 实现2D 图像的深度效果　　 415\n16.3.4  探索AnimationListener类　　 416\n16.3.5  关于变换矩阵的一些说明　　 416\n16.4  资源　　 417\n16.5  小结　　 418\n第17 章  地图和基于位置的服务　　419\n17.1  地图包　　419\n17.1.1  从Google 获取map-api密钥　　 419\n17.1.2  MapView 和MapActivity 　　 421\n17.1.3  使用覆盖图添加标记　　 426\n17.2  位置包　　431\n17.2.1  使用Android 进行地理编码　　431\n17.2.2  使用后台线程进行地理编码　　 434\n17.2.3  LocationManager 服务　　 437\n17.2.4  使用MyLocationOverlay显示位置　　 443\n17.2.5  使用接近提醒　　447\n17.3  参考资料　　451\n17.4  小结　　451\n第18 章  电话API 　　 452\n18.1  使用SMS　　452\n18.1.1  发送SMS 消息　　452\n18.1.2  监视传入的SMS 消息　　455\n18.1.3  使用SMS 文件夹　　457\n18.1.4  发送电子邮件　　459\n18.2  使用电话管理器　　459\n18.3  SIP 　　462\n18.4  参考资料　　464\n18.5  小结　　464\n第19 章  媒体框架　　 465\n19.1  使用媒体API　　465\n19.2  播放媒体　　468\n19.2.1  播放音频内容　　469\n19.2.2  播放视频内容　　478\n19.3  录制媒体　　481\n19.3.1  使用MediaRecorder 录制音频　　481\n19.3.2  使用AudioRecord 录制音频　　485\n19.3.3  视频录制　　489\n19.3.4  MediaStore 类　　497\n19.3.5  使用Intnet 录制音频　　498\n19.3.6  将媒体内容添加到媒体存储　　501\n19.3.7  为整个SD 卡触发MediaScanner 　　503\n19.3.8  参考资料　　503\n19.4  小结　　503\n第20 章  使用OpenGL 进行3D 图形编程　　 504\n20.1  了解OpenGL 的历史和背景　　505\n20.1.1  OpenGL ES 　　505\n20.1.2  OpenGL ES 与Java ME　　506\n20.1.3  M3G：另一种Java ME 3D图形标准　　506\n20.2  OpenGL 的基本原理　　507\n20.2.1  使用OpenGL ES 进行基本绘制　　507\n20.2.2  OpenGL 照相机和坐标　　512\n20.3  在Android 中使用OpenGL ES　　515\n20.3.1  使用GLSurfaceView 和相关类　　515\n20.3.2  实现Renderer　　515\n20.3.3  通过Activity 使用GLSurfaceView 　　518\n20.3.4  更改照相机设置　　523\n20.3.5  使用索引添加另一个三角形　　524\n20.3.6  为简单的OpenGL 三角形制作动画　　526\n20.4  OpenGL 的运用：形状和纹理　　528\n20.4.1  绘制矩形　　528\n20.4.2  使用形状　　530\n20.4.3  使用纹理　　541\n20.4.4  绘制多个图形　　546\n20.5  OpenGL ES 2.0 　　548\n20.5.1  针对OpenGL ES 2.0 的Java 绑定　　549\n20.5.2  呈现步骤　　552\n20.5.3  着色器　　552\n20.5.4  将着色器编译到程序中　　553\n20.5.5  访问着色器程序变量　　555\n20.5.6  简单的ES 2.0 三角形　　555\n20.5.7  关于OpenGL ES 2.0 的更多阅读材料　　558\n20.6  代码编译说明　　559\n20.7  小结　　560\n第21 章  活动文件夹　　 561\n21.1  探索活动文件夹　　561\n21.1.1  用户如何使用活动文件夹　　562\n21.1.2  构建活动文件夹　　565\n21.2  代码编译说明　　573\n21.3  参考资料　　573\n21.4  小结　　573\n第22 章  主屏幕部件　　575\n22.1  主屏幕部件的架构　　575\n22.1.1  什么是主屏幕部件　　575\n22.1.2  主屏幕部件的用户体验　　576\n22.1.3  部件的生命周期　　578\n22.2  示例部件应用程序　　582\n22.2.1  定义部件提供程序　　583\n22.2.2  定义部件尺寸　　584\n22.2.3  与部件布局相关的文件　　586\n22.2.4  实现部件提供程序　　586\n22.2.5  实现部件模型　　589\n22.2.6  实现部件配置活动　　595\n22.3  部件局限性和扩展　　598\n22.4  资源　　599\n22.5  小结　　599\n第23 章  Android 搜索　　600\n23.1  Android 搜索体验　　600\n23.1.1  探索Android 全局搜索　　601\n23.1.2  为全局搜索启用建议提供程序　　606\n23.2  活动与搜索键交互　　608\n23.2.1  常规活动上的搜索键行为　　609\n23.2.2  禁用了搜索的活动的行为　　615\n23.2.3  通过菜单显式调用搜索　　617\n23.2.4  本地搜索和相关活动　　620\n23.2.5  启用键入搜索　　625\n23.3  实现简单建议提供程序　　626\n23.3.1  计划简单建议提供程序　　626\n23.3.2  简单建议提供程序实现文件　　626\n23.3.3  实现SimpleSuggestion-Provider 类　　627\n23.3.4  简单建议提供程序搜索活动　　630\n23.3.5  搜索调用方活动　　634\n23.3.6  简单建议提供程序用户体验　　636\n23.4  实现自定义建议提供程序　　638\n23.4.1  计划自定义建议提供程序　　638\n23.4.2  SuggestURLProvider 项目实现文件　　 639\n23.4.3  实现SuggestUrlProvider类　　 639\n23.4.4  实现自定义建议提供程序的搜索活动　　 647\n23.4.5  自定义建议提供程序描述文件　　 652\n23.4.6  自定义建议用户体验　　 653\n23.5  使用操作键和应用程序特有的搜索数据　　 655\n23.5.1  在Android 搜索中使用操作键　　 655\n23.5.2  使用应用程序特定的搜索上下文　　 658\n23.6  资源　　 659\n23.7  对平板电脑的意义　　 659\n23.8  小结　　 660\n第24 章  文本到语音转换　　661\n24.1  Android 中的文本到语音转换　　 661\n24.2  使用语段跟踪语音　　 665\n24.3  使用音频文件代替话音　　 666\n24.4  TTS 引擎的高级功能　　 672\n24.4.1  设置音频流　　 673\n24.4.2  使用耳标　　 673\n24.4.3  播放静音　　 674\n24.4.4  选择不同的文本到语音转换引擎　　 674\n24.4.5  使用语言方法　　 674\n24.5  参考资料　　 675\n24.6  小结　　 676\n第25 章  触摸屏　　677\n25.1  MotionEvent　　 677\n25.1.1  MotionEvent 对象　　 677\n25.1.2  回收MotionEvent 　　 687\n25.1.3  使用VelocityTracker 　　 687\n25.1.4  探索拖放操作　　689\n25.2  多点触摸　　692\n25.2.1  Android2.2 之前的多点触摸　　692\n25.2.2  自Android 2.2 开始的多点触摸　　699\n25.3  触摸地图　　699\n25.4  手势　　702\n25.4.1  捏合手势　　702\n25.4.2  GestureDetector 和OnGestureListener 　　705\n25.4.3  自定义手势　　707\n25.4.4  Gestures Builder 应用程序　　708\n25.5  参考资料　　713\n25.6  小结　　714\n第26 章  传感器　　 715\n26.1  什么是传感器　　715\n26.1.1  检测传感器　　716\n26.1.2  可以了解的传感器信息　　716\n26.2  获取传感器事件　　718\n26.3  解释传感器数据　　727\n26.3.1  光线传感器　　727\n26.3.2  接近传感器　　727\n26.3.3  温度传感器　　727\n26.3.4  压力传感器　　728\n26.3.5  陀螺仪传感器　　728\n26.3.6  加速度计　　728\n26.3.7  磁场传感器　　733\n26.3.8  结合使用加速度计和磁场传感器　　734\n26.3.9  方向传感器　　734\n26.3.10  磁偏角和GeomagneticField 　　740\n26.3.11  重力传感器　　740\n26.3.12  直线加速度传感器　　740\n26.3.13  旋转矢量传感器　　740\n26.3.14  近场通信传感器　　741\n26.4  参考资料　　749\n26.5  小结　　749\n第27 章  联系人API 　　 750\n27.1  账户　　750\n27.1.1  账户屏幕概览　　750\n27.1.2  账户与联系人的相关性　　754\n27.1.3  枚举账户　　754\n27.2  联系人应用程序　　754\n27.2.1  显示联系人　　755\n27.2.2  显示联系人详细信息　　755\n27.2.3  编辑联系人详细信息　　756\n27.2.4  设置联系人的照片　　758\n27.2.5  导出联系人　　758\n27.2.6  各种联系人数据类型　　759\n27.3  联系人　　760\n27.3.1  内容SQLite 数据库　　760\n27.3.2  原始联系人　　761\n27.3.3  数据表　　762\n27.3.4  聚合联系人　　763\n27.3.5  view_contacts 　　765\n27.3.6  contact_entities_view 　　765\n27.4  联系人API 　　766\n27.4.1  浏览账户　　766\n27.4.2  浏览聚合联系人　　773\n27.4.3  浏览原始联系人　　781\n27.4.4  浏览原始联系人数据　　785\n27.4.5  添加联系人和它的详细信息　　788\n27.5  控制聚合　　790\n27.6  同步的影响　　791\n27.7  参考资料　　792\n27.8  小结　　792\n第28 章  使用Android Market　　 793\n28.1  成为发布者　　793\n28.1.1  遵守规则　　794\n28.1.2  开发人员控制台　　795\n28.2  准备销售应用程序　　798\n28.2.1  针对不同设备进行测试　　798\n28.2.2  支持不同的屏幕尺寸　　798\n28.2.3  准备上传AndroidManifest.xml 　　799\n28.2.4  本地化应用程序　　800\n28.2.5  准备应用程序图标　　800\n28.2.6  付费应用程序考虑因素　　801\n28.2.7  将用户引导至Market 　　801\n28.2.8  Android 授权服务　　802\n28.2.9  准备上传.apk 文件　　802\n28.3  上传应用程序　　803\n28.4  Android Market 上的用户体验　　805\n28.5  更多发布途径　　806\n28.6  参考资料　　807\n28.7  小结　　807\n第29 章  多用途的碎片　　808\n29.1  什么是碎片　　808\n29.1.1  何时使用碎片　　809\n29.1.2  碎片的结构　　809\n29.1.3  碎片的生命周期　　810\n29.1.4  展示生命周期的示例碎片应用程序　　814\n29.2  FragmentTransactions 和碎片后退栈　　821\n29.3  FragmentManager　　823\n29.3.1  引用碎片时的注意事项　　824\n29.3.2  ListFragments 和<fragment> 　　824\n29.3.3  在需要时调用独立的活动　　828\n29.3.4  碎片的持久化　　830\n29.4  对话框碎片　　831\n29.4.1  DialogFragment 基础知识　　831\n29.4.2  DialogFragments 示例应用程序　　835\n29.5  碎片之间的更多通信方式　　846\n29.6  使用ObjectAnimator 自定义动画　　847\n29.7  参考资料　　849\n29.8  小结　　850\n第30 章  ActionBar 　　851\n30.1  ActionBar 剖析　　851\n30.2  选项卡导航操作栏活动　　852\n30.2.1  实现基础活动类　　 853\n30.2.2  为ActionBar 分配统一的行为　　855\n30.2.3  实现选项卡监听器　　 857\n30.2.4  实现选项卡操作栏活动　　858\n30.2.5  可滚动的调试文本视图布局　　 860\n30.2.6  操作栏和菜单交互　　 861\n30.2.7  Android 描述文件　　 863\n30.2.8  测试选项卡操作栏活动　　 863\n30.3  列表导航操作栏活动　　864\n30.3.1  创建SpinnerAdapter 　　864\n30.3.2  创建列表监听器　　865\n30.3.3  设置列表操作栏　　865\n30.3.4  更改BaseActionBar-Activity　　 866\n30.3.5  更改AndroidManifest.xml 　　 866\n30.3.6  测试列表操作栏活动　　 867\n30.4  标准导航操作栏活动　　 868\n30.4.1  标准导航操作栏活动　　 868\n30.4.2  更改BaseActionBar-Activity 　　 869\n30.4.3  更改AndroidManifest.xml 　　 870\n30.4.4  测试标准操作栏活动　　 870\n30.5  参考资料　　 871\n30.6  小结　　 872\n第31 章  3.0 版中的更多主题　　873\n31.1  基于列表的主屏幕部件　　873\n31.1.1  3.0 版中新的远程视图　　 873\n31.1.2  在远程视图中使用列表　　875\n31.1.3  应用示例：测试主屏幕列表部件　　 885\n31.1.4  对测试列表部件进行测试　　 893\n31.2  拖放　　 894\n31.2.1  3.0 版中拖放的基础知识　　 894\n31.2.2  拖放示例应用程序　　 895\n31.2.3  测试示例拖放应用程序　　 905\n31.3  参考资料　　 906\n31.4  小结　　 907",
      "pages": "907",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s7650805.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s7650805.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s7650805.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6902972\/",
      "id": "6902972",
      "publisher": "人民邮电出版社",
      "isbn10": "7115266026",
      "isbn13": "9787115266026",
      "title": "精通Android 3",
      "url": "http:\/\/api.douban.com\/v2\/book\/6902972",
      "alt_title": "Pro Android 3",
      "author_intro": "Satya Komatineni：\n印 度理工大学电子工程专业硕士。有20多年的程序设计经验，开发过用于Java Web开发的简单开源工具AspireWeb（www.activeintellect.com\/aspire）以及开源个人Web 操作系统——Aspire Knowledge Central（www.knowledgefolders.com）。擅长使用Java、.NET和数据库技术进行Web开发，发表过30多篇这方面的 文章。他经常在创新技术相关的行业大会上发言，并为java.net上的网络博客撰稿。\nDave MacLean：\n加拿大滑铁卢 大学系统设计工程专业学士。早在1980年就从事软件开发工作，使用过多种语言进行编程，曾开发机器人自动化、数据仓库、Web自助服务应用程序、EDI 事务处理器等系统。Dave曾在Sun、IBM、Trimble Navigation、通用汽车等公司工作。\nSayed Y. Hashimi：\n美 国佛罗里达大学工程学硕士。具有医疗、金融、物流和面向服务的架构等多个领域的软件开发经验，使用各种编程语言和平台（包括C\/C++、MFC、J2EE 和.NET）开发过大规模的分布式应用程序。他在重要软件杂志上发表过许多文章，还在Apress出版了其他广受欢迎的图书。个人主页为 www.sayedhashimi.com。",
      "summary": "《精通Android 3》在上一版的基础上进行了全面改进，增加了Android内部构件的相关知识，介绍了线程、进程、长期运行的服务、广播接收程序和闹钟管理器。本版还介绍了更多UI控件，并用150多页的篇幅专门介绍了Android3.0版，包括碎片、碎片对话框、ActionBar和拖放。此外，《精通Android 3》对服务和传感器的相关章节做了大幅改进，还对介绍OpenGL的章节做了修订，涵盖了OpenGLES2.0。.《精通Android 3》囊括了Android开发人员所需的一切知识，既可为Android开发人员夯实基础，又能提高Android开发人员的技能。\n\n  点击链接进入新版：  精通Android(新版)",
      "series": {
        "id": "28336",
        "title": "图灵程序设计丛书·移动开发系列"
      },
      "price": "128.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 32,
        "average": "7.4",
        "min": 0
      },
      "subtitle": "Introducing Google's Mobile Development Platform",
      "author": [
        "Ed Burnette"
      ],
      "pubdate": "2008-12-28",
      "tags": [
        {
          "count": 34,
          "name": "android",
          "title": "android"
        },
        {
          "count": 8,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 5,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 3,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 2,
          "name": "计算机技术",
          "title": "计算机技术"
        },
        {
          "count": 1,
          "name": "原版",
          "title": "原版"
        },
        {
          "count": 1,
          "name": "科学&科普&技术",
          "title": "科学&科普&技术"
        },
        {
          "count": 1,
          "name": "IT",
          "title": "IT"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s6780646.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "228",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s6780646.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s6780646.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s6780646.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/3133549\/",
      "id": "3133549",
      "publisher": "Pragmatic Bookshelf",
      "isbn10": "1934356174",
      "isbn13": "9781934356173",
      "title": "Hello, Android",
      "url": "http:\/\/api.douban.com\/v2\/book\/3133549",
      "alt_title": "",
      "author_intro": "",
      "summary": "Android is a new open source software toolkit for mobile phones that was created by Google and the Open Handset Alliance. In a few years, it’s expected to be found in millions of cell phones and other mobile devices, making Android a major platform for application developers. Whether you’re a hobbyist or a professional programmer, whether you are doing it for fun or for profit, it’s time to learn more about developingfor Android. This book will help you get started.\nWhat readers are saying about Hello, Android\nThis is a most excellent book: very well written, easy to read, and fun.\nIn addition, any of Android’s quirks are explained along with just the\nright amount of detail to ensure quality programming principles are\nfollowed.\nAnthony Stevens\nFounder and CTO, PocketJourney and Top 20 Winner of\nGoogle Android Competition\nEd Burnette covers an impressive amount of ground in a nicely compact\nbook while retaining the popular Pragmatic style. For the material\non 2D and 3D graphics alone, this is worthy of a spot in any\nAndroid developer’s library.\nMark Murphy\nFounder, CommonsWare\nI remember when I first started to work with Android; it was like a\nhuge maze. With this book, the introduction would have been much\nless painful. I am convinced that by reading this book new Android\nprogrammers will have an easier start.\nGabor Paller\nSenior Software Architect, OnRelay, Ltd.",
      "price": "USD 32.95"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 15,
        "average": "7.8",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "(美) 策希纳(Zechner, M.)",
        "无(美) 格林(Green, R.) 著"
      ],
      "pubdate": "2012-11",
      "tags": [
        {
          "count": 41,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 25,
          "name": "游戏开发",
          "title": "游戏开发"
        },
        {
          "count": 14,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 5,
          "name": "游戏",
          "title": "游戏"
        },
        {
          "count": 5,
          "name": "有电子版",
          "title": "有电子版"
        },
        {
          "count": 4,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 3,
          "name": "非常想买",
          "title": "非常想买"
        },
        {
          "count": 2,
          "name": "计算机科学",
          "title": "计算机科学"
        }
      ],
      "origin_title": "Beginning Android 4 Games Development",
      "image": "https://img3.doubanio.com\/mpic\/s24174500.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第1章  Android，后起之秀\t1\n1.1  Android简介\t1\n1.2  版本分裂\t3\n1.3  谷歌的角色\t3\n1.3.1  Android开源项目\t3\n1.3.2  Android Market\t4\n1.3.3  挑战赛、设备播种计划\n和谷歌I\/O\t4\n1.4  Android的功能和体系结构\t5\n1.4.1  内核\t6\n1.4.2  运行库和Dalvik虚拟机\t6\n1.4.3  系统库\t7\n1.4.4  应用程序框架\t8\n1.5  软件开发工具包\t8\n1.6  开发人员社区\t9\n1.7  设备，设备，设备\t9\n1.7.1  硬件\t9\n1.7.2  设备的范围\t10\n1.8  所有设备之间的兼容性\t15\n1.9  不同的手机游戏\t15\n1.9.1  人手一台游戏机\t16\n1.9.2  随时上网\t16\n1.9.3  普通用户与游戏迷\t17\n1.9.4  市场很大，开发人员很少\t17\n1.10  小结\t18\n第2章  从Android SDK开始\t19\n2.1  搭建开发环境\t19\n2.1.1  安装JDK\t20\n2.1.2  安装Android SDK\t20\n2.1.3  安装Eclipse\t21\n2.1.4  安装ADT Eclipse插件\t22\n2.1.5  Eclipse快速浏览\t23\n2.1.6  一些实用的Eclipse快捷键\t24\n2.2  Android环境下的Hello World\t25\n2.2.1  创建项目\t25\n2.2.2  进一步分析项目\t26\n2.2.3  编写应用程序代码\t27\n2.3  运行和调试Android应用\n程序\t29\n2.3.1  连接设备\t29\n2.3.2  创建一个Android虚拟\n设备\t29\n2.3.3  运行应用程序\t30\n2.3.4  调试应用程序\t32\n2.3.5  LogCat和DDMS\t34\n2.3.6  使用ADB\t36\n2.4  小结\t37\n第3章  游戏开发基础\t39\n3.1  游戏类型\t39\n3.1.1  休闲游戏\t40\n3.1.2  益智游戏\t41\n3.1.3  动作和街机游戏\t42\n3.1.4  塔防游戏\t44\n3.1.5  创新\t45\n3.2  游戏设计：笔比代码更强大\t46\n3.2.1  游戏的核心机制\t46\n3.2.2  一个故事和一种艺术风格\t47\n3.2.3  画面和切换\t48\n3.3  代码：具体细节\t52\n3.3.1  应用程序和窗口管理\t52\n3.3.2  输入\t53\n3.3.3  文件I\/O\t56\n3.3.4  音频\t57\n3.3.5  图形\t60\n3.3.6  游戏框架\t69\n3.4  小结\t75\n第4章  面向游戏开发人员的Android\t77\n4.1  定义一个Android应用程序：\n清单文件\t77\n4.1.1  <manifest>元素\t78\n4.1.2  <application>元素\t79\n4.1.3  <activity>元素\t80\n4.1.4  <uses-permission>元素\t82\n4.1.5  <uses-feature>元素\t83\n4.1.6  <uses-sdk>元素\t84\n4.1.7  10个简单步骤建立Android\n游戏项目\t84\n4.1.8  市场过滤器\t86\n4.1.9  定义游戏图标\t87\n4.2  Android API基础\t87\n4.2.1  创建测试项目\t88\n4.2.2  活动的生命周期\t91\n4.2.3  处理输入设备\t96\n4.2.4  文件处理\t110\n4.2.5  音频编程\t116\n4.2.6  播放音效\t116\n4.2.7  音乐流\t119\n4.2.8  基本图形编程\t122\n4.3  最佳实践\t143\n4.4  小结\t144\n第5章  Android游戏开发框架\t145\n5.1  制定计划\t145\n5.2  AndroidFileIO类\t146\n5.3  AndroidAudio、AndroidSound\n和AndroidMusic\t147\n5.4  AndroidInput和Accelerometer-\nHandler\t152\n5.4.1  AccelerometerHandler：手机\n哪一面朝上\t152\n5.4.2  CompassHandler\t153\n5.4.3  Pool类：重用相当有用\t154\n5.4.4  KeyboardHandler\t156\n5.4.5  触摸处理程序\t160\n5.4.6  AndroidInput：优秀的\n协调者\t167\n5.5  AndroidGraphics和\nAndroidPixmap\t169\n5.5.1  处理不同屏幕大小和\n分辨率的问题\t169\n5.5.2  AndroidPixmap：人物的\n像素\t174\n5.5.3  AndroidGraphics：满足\n绘图需求\t174\n5.5.4  AndroidFastRenderView\t178\n5.6  AndroidGame：合并所有\n内容\t180\n5.7  小结\t184\n第6章  Mr. Nom入侵Android\t185\n6.1  创建资源\t185\n6.2  建立项目\t187\n6.3  MrNomGame：主要活动\t187\n6.3.1  资源：便捷的资源存储\t188\n6.3.2  设置：跟踪用户的选项设置\n和高分榜\t189\n6.3.3  LoadingScreen：从磁盘获取\n资源\t191\n6.4  主菜单画面\t192\n6.5  HelpScreen类\t195\n6.6  高分榜画面显示\t197\n6.6.1  渲染数字\t198\n6.6.2  画面的实现\t199\n6.7  抽象\t201\n6.7.1  抽象Mr. Nom的世界：\n模型、视图、控制器\t201\n6.7.2  GameScreen类\t211\n6.8  小结\t218\n第7章  OpenGL ES介绍\t219\n7.1  OpenGL ES概述以及关注它的\n原因\t219\n7.1.1  编程模型：一个比喻\t220\n7.1.2  投影\t221\n7.1.3  规范化设备空间和视口\t223\n7.1.4  矩阵\t223\n7.1.5  渲染管道\t224\n7.2  开始之前\t225\n7.3  GLSurfaceView：从2008年开始，\n事情变得简单了\t225\n7.4  GLGame：实现游戏接口\t228\n7.5  绘制一个红色的三角形\t235\n7.5.1  定义视口\t235\n7.5.2  定义投影矩阵\t235\n7.5.3  指定三角形\t238\n7.5.4  综合示例\t241\n7.6  指定每个顶点的颜色\t243\n7.7  纹理映射：轻松地创建\n壁纸\t246\n7.7.1  纹理坐标\t247\n7.7.2  上传位图\t248\n7.7.3  纹理过滤\t249\n7.7.4  释放纹理\t250\n7.7.5  有用的代码片段\t251\n7.7.6  启用纹理\t251\n7.7.7  综合示例\t251\n7.7.8  Texture类\t253\n7.8  索引顶点：重用是有好处的\t255\n7.8.1  代码整合\t256\n7.8.2  Vertices类\t258\n7.9  半透明混合处理\t260\n7.10  更多图元：点、线、条\n和扇\t263\n7.11  2D变换：操作模型视图\n矩阵\t264\n7.11.1  世界空间和模型空间\t264\n7.11.2  再次讨论矩阵\t265\n7.11.3  第一个使用平移的\n示例\t266\n7.11.4  更多的变换\t270\n7.12  性能优化\t273\n7.12.1  测量帧率\t273\n7.12.2  Android 1.5平台下Hero的\n奇特案例\t275\n7.12.3  使OpenGL ES渲染如此\n慢的原因\t275\n7.12.4  移除不必要的状态\n改变\t276\n7.12.5  减小纹理大小意味着需要\n获取更少的像素\t278\n7.12.6  减少OpenGL ES\/JNI方法的\n调用\t278\n7.12.7  绑定顶点的概念\t279\n7.12.8  写在结束之前\t282\n7.13  小结\t283\n第8章  2D游戏编程技巧\t285\n8.1  写在开始\t285\n8.2  向量\t286\n8.2.1  使用向量\t286\n8.2.2  一点三角学的知识\t288\n8.2.3  实现一个向量类\t289\n8.2.4  一个简单的用法示例\t292\n8.3  2D物理定律浅析\t296\n8.3.1  牛顿和欧拉，永远的\n好朋友\t296\n8.3.2  力和质量\t297\n8.3.3  理论上的运动\t298\n8.3.4  运动的实现\t299\n8.4  2D碰撞检测和对象表示\t302\n8.4.1  边界形状\t303\n8.4.2  构造边界形状\t304\n8.4.3  游戏对象的属性\t306\n8.4.4  宽阶段和窄阶段碰撞检测\t307\n8.4.5  一个详细的示例\t313\n8.5  2D照相机\t324\n8.5.1  Camera2D类\t327\n8.5.2  示例\t328\n8.6  纹理图集\t329\n8.7  纹理区域、精灵和批处理：\n隐藏OpenGL ES\t334\n8.7.1  TextureRegion类\t334\n8.7.2  SpriteBatcher类\t335\n8.8  精灵动画\t343\n8.8.1  Animation类\t344\n8.8.2  示例\t345\n8.9  小结\t348\n第9章  Super Jumper：一个2D\nOpenGL ES游戏\t351\n9.1  核心游戏机制\t351\n9.2  背景故事和艺术风格\t352\n9.3  画面和切换\t352\n9.4  定义游戏世界\t353\n9.5  创建资源\t355\n9.5.1  UI元素\t355\n9.5.2  使用点阵字体处理文本\t356\n9.5.3  游戏元素\t358\n9.5.4  用于救援的纹理图集\t359\n9.5.5  音乐与音效\t360\n9.6  实现Super Jumper\t361\n9.6.1  Assets类\t361\n9.6.2  Settings类\t364\n9.6.3  主活动\t366\n9.6.4  Font类\t367\n9.6.5  GLScreen\t369\n9.6.6  主菜单画面\t369\n9.6.7  帮助画面\t372\n9.6.8  高分画面\t374\n9.6.9  模拟类\t377\n9.6.10  游戏画面\t390\n9.6.11  WorldRenderer类\t397\n9.7  是否需要优化\t401\n9.8  小结\t402\n第10章  OpenGL ES：进入3D\n世界\t403\n10.1  准备工作\t403\n10.2  3D中的顶点\t404\n10.2.1  Vertices3：存储3D空间\n位置\t404\n10.2.2  示例\t406\n10.3  透视投影：越近则越大\t409\n10.4  z-buffer：化混乱为有序\t411\n10.4.1  完善上一个例子\t412\n10.4.2  混合：身后空无一物\t413\n10.4.3  z-buffer精度与\nz-fighting\t416\n10.5  定义3D网格\t417\n10.5.1  立方体：3D中的“Hello\nWorld”\t417\n10.5.2  一个示例\t419\n10.6  矩阵和变换\t422\n10.6.1  矩阵堆栈\t423\n10.6.2  用矩阵堆栈实现分层\n系统\t425\n10.6.3  木箱太阳系的简单\n实例\t425\n10.7  小结\t433\n第11章  3D编程技巧\t435\n11.1  准备工作\t435\n11.2  3D中的向量\t436\n11.3  OpenGL ES中的光照\t440\n11.3.1  光照的工作机制\t440\n11.3.2  光源\t441\n11.3.3  材质\t442\n11.3.4  OpenGL ES中如何对光照\n过程进行运算：顶点\n法线\t442\n11.3.5  实践\t443\n11.3.6  关于OpenGL ES中光照\n应用的一些建议\t456\n11.4  材质变换(Mipmapping)\t456\n11.5  简单的照相机\t460\n11.5.1  第一人称照相机或欧拉\n照相机\t460\n11.5.2  一个欧拉照相机的示例\t463\n11.5.3  跟随照相机\t468\n11.6  加载模块\t470\n11.6.1  Wavefront OBJ格式\t470\n11.6.2  OBJ加载器的实现\t471\n11.6.3  使用OBJ加载器\t475\n11.6.4  关于加载模型的一些\n建议\t475\n11.7  3D中的一些物理知识\t476\n11.8  碰撞检测与3D中的对象\n表达法\t477\n11.8.1  3D中的边界形状\t477\n11.8.2  边界球重叠测试\t477\n11.8.3  GameObject3D与Dynamic-\nGameObject3D\t478\n11.9  小结\t479\n第12章  Droid Invaders游戏\t481\n12.1  游戏的核心机制\t481\n12.2  游戏的故事背景与艺术\n风格\t483\n12.3  屏幕与场景切换\t483\n12.4  定义游戏世界\t484\n12.5  创建资源\t485\n12.5.1  用户界面的资源\t485\n12.5.2  游戏资源\t486\n12.5.3  音效与音乐\t488\n12.6  开始编写代码\t488\n12.7  Assets类\t489\n12.8  Settings类\t492\n12.9  主活动\t493\n12.10  主菜单\t494\n12.11  游戏设置画面\t496\n12.12  模拟类\t499\n12.12.1  Shield类\t499\n12.12.2  Shot类\t500\n12.12.3  Ship类\t500\n12.12.4  Invader类\t502\n12.12.5  World类\t505\n12.13  GameScreen类\t510\n12.14  WorldRender类\t516\n12.15  游戏优化\t521\n12.16  小结\t522\n第13章  发布游戏\t523\n13.1  关于测试\t523\n13.2  成为注册开发人员\t524\n13.3  给游戏的APK包签名\t524\n13.4  将游戏发布至Market\t527\n13.4.1  上传资源\t527\n13.4.2  产品详情\t528\n13.4.3  发布选项\t528\n13.4.4  发布\t529\n13.4.5  市场推广\t529\n13.5  开发人员控制台\t529\n13.6  小结\t530\n第14章  进阶内容\t531\n14.1  社交网络\t531\n14.2  位置识别\t531\n14.3  多玩家功能\t532\n14.4  OpenGL ES 2.0以及更多\n内容\t532\n14.5  框架及引擎\t532\n14.6  网络资源\t534\n14.7  结束语\t534",
      "pages": "534",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s24174500.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s24174500.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s24174500.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/20368754\/",
      "id": "20368754",
      "publisher": "清华大学出版社",
      "isbn10": "7302301050",
      "isbn13": "9787302301059",
      "title": "Android 4游戏编程入门经典",
      "url": "http:\/\/api.douban.com\/v2\/book\/20368754",
      "alt_title": "Beginning Android 4 Games Development",
      "author_intro": "作 者 简 介\nMario Zechner白天是一名软件研发工程师，到了晚上就变身为热情高涨的游戏开发者，以Badlogic Games的名义发布游戏。他开发了基于Android平台的游戏Newton，和基于Windows、Linux和Mac OSX的游戏Quantum以及其他众多游戏原型和小型游戏。目前，他正致力于一个名为libgdx的开源跨平台游戏开发解决方案。除了编写代码以外，他还积极撰写关于游戏开发的教程和文章，这些可以在网上特别是他的博客(http:\/\/badlogicgames.com)上免费查看。\nRobert Green是Oregon州Portland市的Battery Powered Games游戏工作室的创办人。他已经开发了9款Android游戏，包括Deadly Chambers、Antigen、Wixel、Light Racer和Light Racer 3D。在全力开发和发布移动视频游戏以前，Robert分别在Minneapolis和Chicago的软件公司中工作过，其中包括IBM Interactive。Robert目前的精力主要放在跨平台游戏开发和高性能移动游戏开发。Robert经常在自己的博客http:\/\/www.rbgrn.net中更新关于游戏编程的知识。",
      "summary": "《Android 4游戏编程入门经典》囊括了成为一名成功的Android游戏开发者所需的全\n部知识。本书是一本可以信赖的指南，能够帮助你在移动游戏开发中迅速“升级”。学完\n本书并加以融会贯通，就能够编写出成功的Android游戏。\n《Android 4游戏编程入门经典》将引导你在Android平台上完整地开发出3个示例游\n戏，包括2D游戏和3D游戏。本书首先介绍游戏开发的理论基础，而且通过只使用剪刀、\n笔和纸从头设计一个完整的游戏，教会你游戏设计的基础知识。接下来，你将学习编程\n基础知识，并开始创建基本的游戏引擎和可玩的游戏。你将以一个有趣的2D游戏作为起\n点，最终创建出一个完善的3D太空入侵者游戏的克隆版本。这些项目将一步步地丰富你\n的知识和技能。\n主要内容\n● 设置和使用Android开发工具：准备好编写自己的游戏\n● 经典的2D游戏编程：创建让人爱不释手的动作游戏和平台游戏\n● Android图形和音频：让游戏看起来和听起来都如此美妙\n● 游戏机制：充分利用碰撞检测、物理知识和精灵动画\n● 3D游戏编程：以简单的方式在游戏中添加复杂的3D\n● 最后一步：发布游戏，收到崩溃报告，帮助用户解决问题\n本书详尽地介绍了移动游戏所需的一切基础知识，书中讲解的知识和技能将帮助你成\n为一名出色的移动游戏开发者。",
      "series": {
        "id": "28337",
        "title": "移动与嵌入式开发技术"
      },
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 35,
        "average": "7.2",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "郭宏志"
      ],
      "pubdate": "2010-6",
      "tags": [
        {
          "count": 49,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 14,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 13,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 8,
          "name": "开发",
          "title": "开发"
        },
        {
          "count": 7,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 6,
          "name": "development",
          "title": "development"
        },
        {
          "count": 4,
          "name": "android",
          "title": "android"
        },
        {
          "count": 3,
          "name": "课本",
          "title": "课本"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s8895844.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第一篇  基础篇第1章  Android概述第2章  Android开发基础    第二篇  技术篇第3章  Android中的资源访问第4章  Android用户界面第5章  Android基本程序单元Activity第6章  Android组件之间的信使Intent第7章  Android Service组件第8章  Android广播事件处理 Broadcast Receiver第9章  Android中的数据存取第10章  Content Provider第11章  Android中的多媒体应用第12章  Android中的图形图像第13章  Android中的互联网应用第14章  Android中的GPS应用    第三篇  应用篇第15章  Android应用案例——移动警务通第16章  Android应用案例——雷电游戏第17章  Android应用案例——备忘录第18章  Android应用案例——无线点餐系统",
      "pages": "490",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s8895844.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s8895844.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s8895844.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4875596\/",
      "id": "4875596",
      "publisher": "电子工业出版社",
      "isbn10": "7121108755",
      "isbn13": "9787121108754",
      "title": "Android应用开发详解",
      "url": "http:\/\/api.douban.com\/v2\/book\/4875596",
      "alt_title": "",
      "author_intro": "毕业于天津大学，1999年开始从事Java开发工作，具备十余年的开发、管理和培训经验。在无线通信、Android、Java ME、Java EE、Linux等领域都有深入的研究，现为IT技术自由作家兼Android、Java ME、Java EE培训讲师。曾出版过《Java EE Web工程师培训JDBC+Servlet+JSP整合开发》、《Java EE高级工程师|培训框架核心技术Structs、Hibernate、Spring》等畅销书籍。",
      "summary": "《Android应用开发详解》分为三个部分，共18章，由浅入深地详细介绍了Android的每个开发细节。《Android应用开发详解》基础翔实，实例丰富，案例真实。从基础到案例覆盖了Android应用开发的三大领域：基础应用、网络应用和游戏应用。读者所需要学习的，正是《Android应用开发详解》描述的。作为一本Android应用开发书籍，《Android应用开发详解》既适合Android初学者，也适合具备了一定Android开发经验但需要开发案例的高级读者。",
      "price": "59.80元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 32,
        "average": "7.2",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "余志龙\/\/陈昱勋\/\/郑名杰\/\/陈小凤\/\/郭秩均|改编:王世江"
      ],
      "pubdate": "2010-6",
      "tags": [
        {
          "count": 40,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 15,
          "name": "手机开发",
          "title": "手机开发"
        },
        {
          "count": 11,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 6,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 4,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 2,
          "name": "软件-互联网",
          "title": "软件-互联网"
        },
        {
          "count": 2,
          "name": "设计",
          "title": "设计"
        },
        {
          "count": 2,
          "name": "备查",
          "title": "备查"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s6175109.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第1章  了解、深入、动手做  1.1  红透半边天的Android  1.2  本书目的及范例涵盖范围  1.3  如何阅读本书  1.4  使用本书范例  1.5  参考网站第2章  Android初体验  2.1  安装Android SDK与ADT\/DDMS  2.2  创建第一个Android项目(Hello Android!)  2.3  Android应用程序架构——从此开始  2.4  可视化的界面开发工具  2.5  部署应用程序到Android手机第3章  用户人机界面  3.1  更改与显示文字标签  3.2  更改手机窗口画面底色  3.3  更改TextView文字颜色  3.4  置换TextView文字  3.5  取得手机屏幕大小  3.6  样式化的定型对象  3.7  简易的按钮事件  3.8  手机页面的转换  3.9  调用另一个Activity  3.10  不同Activity之间的数据传递  3.11  返回数据到前一个Activity  3.12  具有交互功能的对话框  3.13  置换文字颜色的机关  3.14  控制不同的文字字体  3.15  如iPhone拖动相片特效  3.16  自制计算器  3.17  关于(About)程序信息  3.18  程序加载中，请稍候  3.19  全屏幕以按钮重写  3.20  今晚到哪儿打牙祭  3.21  Android变脸  3.22  打勾显示输入的密码  3.23  Android多语系支持第4章  史上超豪华的手机控件  4.1  EditText与TextView共舞  4.2  设计具有背景图的按钮  4.3  给圣诞老人的信息  4.4  我同意条款  4.5  消费券采购列表  4.6  向左或向右  4.7  专业相框设计  4.8  自定义下拉菜单模式  4.9  动态添加\/删除的Spinner菜单  4.10  心爱小宝贝相片集  4.11  快速地搜索手机文件引擎  4.12  按钮也能随单击变换  4.13  具自动提示功能的菜单  4.14  数字及模拟小时钟设计  4.15  动态输入日期与时间  4.16  猜猜红桃A在哪儿  4.17  后台程序运行进度提示  4.18  动态文字排版  4.19  在Activity里显示列表  4.20  以动态列表配置选项  4.21  查找程序根目录下所有文件  4.22  加载手机磁盘里的图片文件  4.23  动态放大缩小ImageView里的图片  4.24  动态旋转图片  4.25  猜猜我在想什么  4.26  离开与关闭程序的弹出窗口  4.27  隐藏式抽屉  4.28  手机桌面上的小玩意  4.29  手机图片搜索管理器  4.30  实时配置桌面上的AppWidget UI Layout第5章  交互式通信服务与手机控制  5.1  具有正则表达式的TextView  5.2  ACTION！CALL！拨打电话  5.3  自制发送短信程序  5.4  自制发送E-mail程序  5.5  自制日历手机数据库  5.6  手机震动的节奏  5.7  图文可视化提醒  5.8  状态栏的图标与文字提醒  5.9  搜索手机通讯录自动完成  5.10  取得联系人资料  5.11  制作有图标的文件资源管理器  5.12  还原手机默认桌面  5.13  置换手机背景图  5.14  获取手机现存桌面  5.15  文件资源管理器再进化  5.16  取得目前File与Cache的路径  5.17  打开\/关闭WiFi服务  5.18  取得SIM卡内的信息  5.19  调用拨号按钮  5.20  DPAD按键处理  5.21  任务管理器正在运行的程序  5.22  动态更改屏幕方向  5.23  系统设置更改事件  5.24  取得电信网络与手机的相关信息  5.25  建立自己的手写笔画图案第6章  手机自动服务纪实  6.1  您有一条短信pop up提醒  6.2  手机电池计量还剩多少  6.3  群发拜年短信给联系人  6.4  开始与停止系统服务  6.5  通过短信发送E-mail通知  6.6  手机拨接状态  6.7  有来电，发送邮件通知  6.8  存储卡剩余多少容量  6.9  访问本机内存与存储卡  6.10  实现可定时响起的闹钟  6.11  黑名单来电自动静音  6.12  手机翻背面即静音震动  6.13  指定时间置换桌面背景  6.14  判断发送短信后的状态  6.15  后台服务送出广播信息  6.16  开机程序设计  6.17  双向短信常驻服务  6.18  测量电池温度  6.19  电池电量显示Widget小工具  6.20  取出通讯录数据及多组电话号码  6.21  电子精确罗盘  6.22  屏幕手写事件判断  6.23  画一颗心，打电话给HONEY第7章  娱乐多媒体  7.1  访问Drawable资源的宽和高  7.2  绘制几何图形  7.3  手机屏幕保护程序  7.4  用手指移动画面里的照片  7.5  加载存储卡的Gallery相簿  7.6  取得手机内置媒体中的图片文件  7.7  相片导航向导与设置背景桌面  7.8  调整音量大小  7.9  播放mp3资源文件  7.10  播放存储卡里的mp3音乐  7.11  自制录音\/播放录音程序  7.12  通过收到短信开始秘密录音  7.13  内置影片播放器载入3gp电影  7.14  自制3gp影片播放器  7.15  相机预览及拍照临时文件  7.16  拍照瞬间启动相机自动对焦  7.17  制作开场动画  7.18  我的手机会说话  7.19  手势触控屏幕控制  7.20  多点触控屏幕事件捕捉第8章  当Android与Internet接轨  8.1  HTTP GET\/POST传递参数  8.2  在程序里浏览网页  8.3  嵌入HTML标记的程序  8.4  设计前往打开网页功能  8.5  将网络图像网址放入Gallery中显示  8.6  即时访问网络图片文件展示  8.7  手机气象局，实时卫星云图  8.8  通过网络播放mp3  8.9  设置远程下载音乐为手机铃声  8.10  远程下载桌面背景图案  8.11  将手机文件上传至网站服务器  8.12  移动博客发布器  8.13  移动RSS阅读器  8.14  远程下载安装Android程序  8.15  手机下载看3gp影片  8.16  访问网站Login API  8.17  地震速报  8.18  通过Web API动态更改手机Spinner控件  8.19  网络语音搜索  8.20  网络下载过程中显示加载中  8.21  快照WebView加载的网页画面  8.22  网页的放大与缩小第9章  Google服务与Android完美整合  9.1  Google账号验证Token  9.2  Google搜索  9.3  前端产生QR Code二维条形码  9.4  以经纬度查找目的地位置  9.5  GPS Google地图  9.6  移动版Google Map  9.7  规划导航路径  9.8  移动设备上的Picasa相册  9.9  随身翻译机第10章  创意Android程序设计  10.1  手机手电筒  10.2  GPS轨迹记录器  10.3  女性贴身看护  10.4  手机QR Code二维条形码生成器  10.5  Android QR Code二维条形码扫描仪  10.6  上班族今天中午要吃什么  10.7  掷杯筊  10.8  电蚊香  10.9  转转轮盘——Lucky！  10.10  任务管理器  10.11  免费的云端发音字典  10.12  动起来！手机桌面上会动的动态桌布附录  如何发布程序到Android Market  A.1  支付Google Android Market注册费  A.2  生成签署凭证 .keystore金钥档案  A.3  上传*.apk程序到Android Market上",
      "pages": "654",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s6175109.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s6175109.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s6175109.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4863525\/",
      "id": "4863525",
      "publisher": "人民邮电",
      "isbn10": "7115229643",
      "isbn13": "9787115229649",
      "title": "Google Android SDK开发范例大全",
      "url": "http:\/\/api.douban.com\/v2\/book\/4863525",
      "alt_title": "",
      "author_intro": "",
      "summary": "《Google Android SDK开发范例大全(第2版)》在上一版的基础上，以Android手机应用程序开发（采用AndroidSDK2.1）为主题，通过160多个范例全面且深度地整合了手机、网络及服务等多个开发领域，为读者提高程序设计功力提供了很大的帮助。\n全书共分10章，主要以范例集的方式来讲述Android的知识点，详细介绍了开发Android的人机交互界面、Android常用的开发控件、使用Android手机收发短信等通信服务、开发Android手机的自动服务功能和娱乐多媒体功能以及整合Android与Aoogle强大的网络服务等内容。随书光盘中包括了所有范例的程序代码。\n《Google Android SDK开发范例大全(第2版)》讲述由浅入深，由Android的基础知识到实际开发应用，结构清晰、语言简洁，非常适合Android的初学者和Android的进阶程序开发者阅读参考。\n更强大的手机服务×更先进的影音功能×更优化的G00gIe服务整合，更多不容错过的精彩范例。\n《Google Android SDK开发范例大全(第2版)》范例继承Java优良传统，使用开放架构。弹性修改随心所欲。\n易于阅读的架构设计，每个范例均搭配步骤及完成画面!\n汲取专家开发经验，指引快速上手捷径。",
      "price": "79.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 20,
        "average": "6.2",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "韩超\/\/梁泉"
      ],
      "pubdate": "2011-2",
      "tags": [
        {
          "count": 38,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 8,
          "name": "android",
          "title": "android"
        },
        {
          "count": 7,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 6,
          "name": "linux",
          "title": "linux"
        },
        {
          "count": 4,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 4,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 4,
          "name": "移植",
          "title": "移植"
        },
        {
          "count": 3,
          "name": "系统",
          "title": "系统"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s6275813.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第1章  Android系统移植开发概述第2章  Android源代码和开发环境第3章  Android系统移植的结构和方法第4章  Android的GoldFish内核和驱动第5章  Android的MSM内核和驱动第6章  Android的OMAP内核和驱动第7章  显示系统第8章  用户输入系统第9章  传感器系统第10章  音频系统第11章  视频输出系统第12章  照相机系统第13章  无线局域网系统第14章  蓝牙系统第15章  定位系统第16章  电话系统第17章  OpenGL 3D引擎第18章  OpenMax多媒体引擎第19章  多媒体系统的插件第20章  位块复制系统第21章  警报器——实时时钟系统第22章  光系统第23章  振动器系统第24章  电池系统",
      "pages": "372",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s6275813.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s6275813.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s6275813.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/5907455\/",
      "id": "5907455",
      "publisher": "电子工业出版社",
      "isbn10": "7121126095",
      "isbn13": "9787121126093",
      "title": "Android系统级深入开发",
      "url": "http:\/\/api.douban.com\/v2\/book\/5907455",
      "alt_title": "",
      "author_intro": "移动系统开发资深工程师，在Android领域具有完备的知识和前沿的技术，长期从事一线开发工作。韩超是中国大陆地区较早参与Android系统开发的人员之一，也是中国大陆的Androidin(机锋网)开发社区的核心成员和重要组织者之一；也曾经引领大陆各种相关技术人员进入Android领域，并组织参与国内外的相关枝术交流。",
      "summary": "《Android系统级深入开发:移植与调试》是一本全面介绍Android系统级开发的作品，全书以移植和调试为重点。Android具有一个庞大的软件系统，任何开发者都难以掌握系统的每一个细节。因此，如何高效地理解和开发系统，就成了Android系统级别工程师面对的主要问题。《Android系统级深入开发:移植与调试》作者以实际的开发经验为基础，以软件工程思想为指导，完成了《Android系统级深入开发:移植与调试》。《Android系统级深入开发:移植与调试》介绍了从Android开源工程到一个基于实际硬件产品中的主要工作，一方面让读者清晰把握各个子系统的架构，另一方面让读者把握移植这个开发核心环节的要点。\n读者对象：Linux开发人员、移动设备开发人员、Android系统框架层和底层开发人员、有意图深入学习Android的人员、手机研发的公司。",
      "price": "55.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 25,
        "average": "7.4",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "[印] Satya Komatineni",
        "[美] Dave MacLean"
      ],
      "pubdate": "2013-1",
      "tags": [
        {
          "count": 32,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 11,
          "name": "Android开发",
          "title": "Android开发"
        },
        {
          "count": 8,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 8,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 6,
          "name": "Anroid",
          "title": "Anroid"
        },
        {
          "count": 4,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 1,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 1,
          "name": "管理",
          "title": "管理"
        }
      ],
      "origin_title": "Pro Android 4",
      "image": "https://img3.doubanio.com\/mpic\/s24576331.jpg",
      "binding": "平装",
      "translator": [
        "曾少宁",
        "杨越"
      ],
      "catalog": "第1章 　Android计算平台简介　　1\n1.1 　面向新PC的全新平台　　1\n1.2 　Android的历史　　2\n1.3 　Dalvik VM剖析　　4\n1.4 　理解Android软件栈　　5\n1.5 　使用Android SDK开发最终用户应用程序　　6\n1.5.1 　Android模拟器　　6\n1.5.2 　Android UI　　7\n1.5.3 　Android基础组件　　7\n1.5.4 　高级UI概念　　8\n1.5.5 　Android Service组件　　10\n1.5.6 　Android媒体和电话组件　　10\n1.5.7 　Android Java包　　11\n1.6 　利用Android源代码　　14\n1.6.1 　在线浏览Android源代码　　14\n1.6.2 　使用Git下载Android源代码　　15\n1.7 　本书的示例项目　　16\n1.8 　小结　　16\n第2章 　设置开发环境　　17\n2.1 　设置环境　　17\n2.1.1 　下载JDK 6　　18\n2.1.2 　下载Eclipse 3.6　　19\n2.1.3 　下载Android SDK　　19\n2.1.4 　命令行窗口　　20\n2.1.5 　安装ADT　　21\n2.2 　了解基本组件　　23\n2.2.1 　View　　23\n2.2.2 　Activity　　23\n2.2.3 　Fragment　　24\n2.2.4 　Intent　　24\n2.2.5 　ContentProvider　　24\n2.2.6 　Service　　24\n2.2.7 　AndroidManifest.xml　　24\n2.2.8 　AVD　　25\n2.3 　Hello World!　　25\n2.4 　AVD　　29\n2.5 　在真实设备上运行　　30\n2.6 　剖析Android应用程序的结构　　31\n2.7 　了解应用程序生命周期　　33\n2.8 　简单调试　　35\n2.9 　参考资料　　37\n2.10 　小结　　37\n2.11 　面试问题　　37\n第3章 　使用Android资源　　39\n3.1 　资源　　39\n3.1.1 　字符串资源　　39\n3.1.2 　布局资源　　41\n3.1.3 　资源引用语法　　43\n3.1.4 　定义资源ID供以后使用　　44\n3.1.5 　已编译和未编译的Android资源　　45\n3.2 　Android关键资源　　46\n3.3 　使用任意XML资源文件　　54\n3.4 　使用原始资源　　55\n3.5 　使用资产　　56\n3.6 　了解资源目录结构　　56\n3.7 　资源和配置更改　　56\n3.8 　参考资料URL　　59\n3.9 　小结　　60\n3.10 　面试问题　　60\n第4章 　ContentProvider　　62\n4.1 　探索Android内置的ContentProvider　　63\n4.1.1 　在模拟器和可用设备上利用数据库　　63\n4.1.2 　快速了解SQLite　　66\n4.2 　ContentProvider的架构　　66\n4.2.1 　Android内容URI的结构　　68\n4.2.2 　Android MIME类型的结构　　68\n4.2.3 　使用URI读取数据　　70\n4.2.4 　使用游标　　71\n4.2.5 　使用where子句　　72\n4.2.6 　插入记录　　74\n4.2.7 　将文件添加到ContentProvider中　　75\n4.2.8 　更新和删除　　76\n4.3 　实现ContentProvider　　76\n4.3.1 　计划数据库　　76\n4.3.2 　扩展ContentProvider　　78\n4.3.3 　履行MIME类型契约　　83\n4.3.4 　实现query方法　　83\n4.3.5 　实现insert方法　　83\n4.3.6 　实现update方法　　84\n4.3.7 　实现delete方法　　84\n4.3.8 　使用UriMatcher来解析URI　　84\n4.3.9 　使用投影映射　　85\n4.3.10 　注册提供程序　　86\n4.4 　练习图书提供程序　　86\n4.4.1 　添加图书　　86\n4.4.2 　删除图书　　87\n4.4.3 　获取图书数量　　87\n4.4.4 　显示图书列表　　87\n4.5 　资源　　88\n4.6 　小结　　89\n4.7 　面试问题　　89\n第5章 　Intent　　90\n5.1 　Android Intent基础知识　　90\n5.2 　Android中可用的Intent　　91\n5.3 　Intent的组成　　93\n5.3.1 　Intent和数据URI　　93\n5.3.2 　一般操作　　94\n5.3.3 　使用extra信息　　95\n5.3.4 　使用组件直接调用活动　　96\n5.3.5 　Intent类别　　97\n5.3.6 　将Intent解析为组件的规则　　99\n5.4 　练习使用ACTION_PICK　　101\n5.5 　练习使用GET_CONTENT操作　　103\n5.6 　挂起的Intent　　104\n5.7 　资源　　105\n5.8 　小结　　106\n5.9 　面试问题　　106\n第6章 　构建用户界面和使用控件　　107\n6.1 　Android中的UI开发　　107\n6.1.1 　完全利用代码来构建UI　　108\n6.1.2 　完全使用XML构建UI　　110\n6.1.3 　使用XML结合代码构建UI　　111\n6.2 　Android中的常见控件　　113\n6.2.1 　文本控件　　113\n6.2.2 　按钮控件　　116\n6.2.3 　ImageView控件　　123\n6.2.4 　日期和时间控件　　124\n6.2.5 　MapView控件　　127\n6.3 　适配器　　127\n6.3.1 　SimpleCursorAdapter　　128\n6.3.2 　了解ArrayAdapter　　129\n6.4 　结合使用适配器和AdapterView　　131\n6.4.1 　基本的列表控件：ListView　　131\n6.4.2 　GridView控件　　138\n6.4.3 　Spinner控件　　140\n6.4.4 　Gallery控件　　141\n6.4.5 　创建自定义适配器　　142\n6.4.6 　Android中的其他控件　　146\n6.5 　样式和主题　　147\n6.5.1 　使用样式　　147\n6.5.2 　使用主题　　149\n6.6 　布局管理器　　150\n6.6.1 　LinearLayout布局管理器　　150\n6.6.2 　TableLayout布局管理器　　153\n6.6.3 　RelativeLayout布局管理器　　156\n6.6.4 　FrameLayout布局管理器　　157\n6.6.5 　GridLayout布局管理器　　159\n6.6.6 　为各种设备配置自定义布局　　160\n6.7 　参考资料　　161\n6.8 　小结　　161\n6.9 　面试问题　　161\n第7章 　使用菜单　　163\n7.1 　Android菜单　　163\n7.1.1 　创建菜单　　164\n7.1.2 　使用菜单组　　165\n7.1.3 　响应菜单项　　166\n7.2 　使用其他菜单类型　　168\n7.2.1 　展开的菜单　　168\n7.2.2 　使用图标菜单　　169\n7.2.3 　使用子菜单　　169\n7.2.4 　使用上下文菜单　　170\n7.2.5 　使用交替菜单　　173\n7.2.6 　动态菜单　　175\n7.3 　通过XML文件加载菜单　　175\n7.3.1 　XML菜单资源文件的结构　　176\n7.3.2 　填充XML菜单资源文件　　177\n7.3.3 　响应基于XML的菜单项　　177\n7.3.4 　4.0版本中的弹出式菜单　　178\n7.3.5 　其他XML菜单标记简介　　179\n7.4 　资源　　181\n7.5 　小结　　181\n7.6 　面试问题　　181\n第8章 　多用途的碎片　　183\n8.1 　什么是碎片　　183\n8.1.1 　何时使用碎片　　184\n8.1.2 　碎片的结构　　185\n8.1.3 　碎片的生命周期　　186\n8.1.4 　展示生命周期的示例碎片应用程序　　189\n8.2 　FragmentTransactions和碎片后退栈　　194\n8.3 　FragmentManager　　196\n8.3.1 　引用碎片时的注意事项　　197\n8.3.2 　保存片段状态　　198\n8.3.3 　ListFragments和<fragment>　　198\n8.3.4 　在需要时调用独立的活动　　200\n8.3.5 　碎片的持久化　　201\n8.4 　碎片之间的通信方式　　202\n8.5 　使用ObjectAnimator自定义动画　　203\n8.6 　参考资料　　205\n8.7 　小结　　205\n8.8 　面试问题　　206\n第9章 　对话框　　207\n9.1 　使用Android对话框　　207\n9.2 　对话框碎片　　207\n9.2.1 　DialogFragment的基础知识　　208\n9.2.2 　构建对话框碎片　　208\n9.2.3 　DialogFragment示例应用程序　　212\n9.3 　使用Toast　　220\n9.4 　旧版本Android的对话框碎片　　221\n9.5 　参考资料　　221\n9.6 　小结　　222\n9.7 　面试问题　　222\n第10章 　ActionBar　　223\n10.1 　ActionBar剖析　　223\n10.2 　选项卡导航操作栏活动　　225\n10.2.1 　实现基础活动类　　225\n10.2.2 　为ActionBar分配统一的行为　　227\n10.2.3 　实现选项卡监听器　　229\n10.2.4 　实现选项卡操作栏活动　　230\n10.2.5 　可滚动的调试文本视图布局　　232\n10.2.6 　操作栏和菜单交互　　233\n10.2.7 　Android描述文件　　235\n10.2.8 　测试选项卡操作栏活动　　235\n10.3 　列表导航操作栏活动　　236\n10.3.1 　创建SpinnerAdapter　　236\n10.3.2 　创建列表监听器　　237\n10.3.3 　设置列表操作栏　　237\n10.3.4 　更改BaseActionBar-Activity　　238\n10.3.5 　更改AndroidManifest.xml　　238\n10.3.6 　测试列表操作栏活动　　239\n10.4 　标准导航操作栏活动　　240\n10.4.1 　设置标准导航操作栏活动　　240\n10.4.2 　更改BaseActionBar-Activity　　241\n10.4.3 　更改AndroidManifest.xml　　242\n10.4.4 　测试标准操作栏活动　　242\n10.5 　工具栏与搜索视图　　243\n10.5.1 　将搜索视图部件定义为菜单项　　244\n10.5.2 　配置搜索结果活动　　244\n10.5.3 　通过可搜索XML文件自定义搜索　　245\n10.5.4 　在配置清单文件中定义搜索结果活动　　245\n10.5.5 　确定搜索视图部件的搜索目标　　245\n10.6 　操作栏和碎片　　246\n10.7 　参考资料　　246\n10.8 　小结　　247\n10.9 　面试问题　　247\n第11章 　高级调试与分析　　249\n11.1 　启用高级调试　　249\n11.2 　Debug透视图　　249\n11.3 　DDMS透视图　　250\n11.4 　Hierarchy View透视图　　252\n11.5 　Traceview　　253\n11.6 　adb命令　　254\n11.7 　模拟器控制台　　255\n11.8 　StrictMode　　255\n11.8.1 　StrictMode策略　　255\n11.8.2 　关闭StrictMode　　256\n11.8.3 　在旧版本Android上使用StrictMode　　257\n11.8.4 　StrictMode练习　　258\n11.9 　参考资料　　259\n11.10 　小结　　259\n11.11 　面试问题　　259\n第12章 　响应配置变化　　261\n12.1 　配置变化过程　　261\n12.1.1 　活动的销毁\/创建过程　　262\n12.1.2 　碎片的销毁\/创建过程　　263\n12.1.3 　使用FragmentManager保存碎片状态　　264\n12.1.4 　使用碎片的setRetain-Instance　　264\n12.2 　弃用的配置变化方法　　264\n12.3 　参考资料　　265\n12.4 　小结　　265\n12.5 　面试问题　　265\n第13章 　首选项及保存状态　　266\n13.1 　探索首选项框架　　266\n13.1.1 　ListPreference　　266\n13.1.2 　CheckBoxPreference　　273\n13.1.3 　EditTextPreference　　275\n13.1.4 　RingtonePreference及MultiSelectListPreference　　276\n13.2 　组织首选项　　276\n13.2.1 　使用PreferenceCategory　　276\n13.2.2 　创建依赖的子首选项　　279\n13.2.3 　带标题的首选项　　279\n13.3 　以编程方式操作首选项　　281\n13.3.1 　使用首选项保存状态　　281\n13.3.2 　使用DialogPreference　　282\n13.4 　参考资料　　283\n13.5 　小结　　283\n13.6 　面试问题　　283\n第14章 　探索安全性和权限　　284\n14.1 　理解Android安全性模型　　284\n14.1.1 　安全性概念概述　　284\n14.1.2 　为部署签名应用程序　　285\n14.2 　执行运行时安全性检查　　290\n14.2.1 　进程边界上的安全性　　290\n14.2.2 　声明和使用权限　　290\n14.2.3 　理解和使用自定义权限　　292\n14.2.4 　理解和使用URI权限　　297\n14.3 　参考资料　　298\n14.4 　小结　　298\n14.5 　面试问题　　299\n第15章 　构建和使用服务　　300\n15.1 　使用HTTP服务　　300\n15.1.1 　将HttpClient用于HTTP GET请求　　300\n15.1.2 　将HttpClient用于HTTP POST请求（多部分POST请求示例）　　302\n15.1.3 　SOAP、JSON和XML分析程序　　304\n15.1.4 　处理异常　　305\n15.1.5 　解决多线程问题　　307\n15.1.6 　有趣的超时　　309\n15.1.7 　使用HttpURLConnection　　310\n15.1.8 　使用AndroidHttpClient　　310\n15.1.9 　使用后台线程（AsyncTask）　　311\n15.1.10 　使用DownloadManager获取文件　　316\n15.2 　使用Android服务　　321\n15.2.1 　Android中的服务　　322\n15.2.2 　本地服务　　323\n15.2.3 　AIDL服务　　329\n15.2.4 　在AIDL中定义服务接口　　329\n15.2.5 　实现AIDL接口　　331\n15.2.6 　从客户端应用程序调用服务　　333\n15.2.7 　向服务传递复杂的类型　　336\n15.3 　参考资料　　345\n15.4 　小结　　345\n15.5 　面试问题　　346\n第16章 　包　　347\n16.1 　包和进程　　347\n16.1.1 　包规范的细节　　347\n16.1.2 　将包名称转换为进程名称　　347\n16.1.3 　列出安装的包　　348\n16.1.4 　通过包浏览器删除包　　348\n16.2 　包签名过程回顾　　349\n16.2.1 　理解数字签名：场景1　　349\n16.2.2 　理解数字签名：场景2　　350\n16.2.3 　一种理解数字签名的模式　　350\n16.2.4 　数字签名执行方式　　350\n16.2.5 　签名过程的影响　　350\n16.3 　在包之间共享数据　　351\n16.3.1 　共享用户ID的性质　　351\n16.3.2 　共享数据的代码模式　　352\n16.4 　库项目　　353\n16.4.1 　库项目的概念　　353\n16.4.2 　库项目的性质　　353\n16.4.3 　创建库项目　　355\n16.4.4 　创建使用库的Android项目　　358\n16.4.5 　使用库项目的注意事项　　365\n16.5 　参考资料　　365\n16.6 　小结　　366\n16.7 　面试问题　　366\n第17章 　处理程序　　368\n17.1 　Android组件和线程　　368\n17.1.1 　活动在主线程上运行　　369\n17.1.2 　广播接收程序在主线程上运行　　369\n17.1.3 　服务在主线程上运行　　369\n17.1.4 　ContentProvider在主线程上运行　　370\n17.1.5 　单一主线程的影响　　370\n17.1.6 　线程池、ContentProvider及外部服务组件　　370\n17.1.7 　线程实用程序：发现线程　　370\n17.2 　处理程序　　371\n17.2.1 　持有主线程的影响　　372\n17.2.2 　使用处理程序延迟主线程上的工作　　373\n17.2.3 　延迟工作的处理程序源代码示例　　373\n17.2.4 　构造合适的Message对象　　375\n17.2.5 　将Message对象发送给队列　　375\n17.2.6 　响应handleMessage回调　　376\n17.3 　使用工作线程　　376\n17.3.1 　从菜单调用工作线程　　376\n17.3.2 　在工作线程与主线程之间通信　　377\n17.4 　组件和进程寿命　　380\n17.4.1 　活动生命周期　　380\n17.4.2 　服务生命周期　　381\n17.4.3 　接收程序生命周期　　381\n17.4.4 　提供程序生命周期　　382\n17.5 　参考资料　　382\n17.6 　小结　　382\n17.7 　面试问题　　383\n第18章 　AsyncTask详解　　384\n18.1 　实现一个简单的AsyncTask　　385\n18.1.1 　实现AsyncTask的泛型　　385\n18.1.2 　创建AsyncTask子类　　386\n18.1.3 　实现第一个AsyncTask　　386\n18.1.4 　调用一个AsyncTask　　388\n18.1.5 　onPreExecute()回调方法和进度对话框　　388\n18.1.6 　doInBackground()方法　　389\n18.1.7 　触发onProgressUpdate()　　389\n18.1.8 　onPostExecute()方法　　390\n18.1.9 　升级为确定性进度对话框　　390\n18.2 　AsyncTask的性质　　392\n18.3 　设备旋转与AsyncTask　　393\n18.4 　生命周期方法与AsyncTask　　393\n18.5 　参考资料　　393\n18.6 　小结　　394\n18.7 　面试问题　　394\n第19章 　广播接收程序和长期运行的服务　　395\n19.1 　广播接收程序　　395\n19.1.1 　发送广播　　395\n19.1.2 　编写简单的接收程序：示例代码　　396\n19.1.3 　在描述文件中注册接收程序　　396\n19.1.4 　容纳多个接收程序　　397\n19.1.5 　进程外接收程序项目　　399\n19.2 　从接收程序使用通知　　399\n19.2.1 　通过通知管理器监控通知　　400\n19.2.2 　发送通知　　401\n19.2.3 　在广播接收程序中启用活动　　404\n19.3 　长期运行的接收程序和服务　　404\n19.3.1 　长期运行的广播接收程序协议　　404\n19.3.2 　IntentService　　405\n19.3.3 　IntentService源代码　　406\n19.4 　为广播接收程序扩展IntentService　　407\n19.4.1 　长期运行的广播服务抽象　　408\n19.4.2 　长期运行的接收程序　　409\n19.4.3 　使用LightedGreenRoom抽象唤醒锁　　411\n19.5 　长期运行的服务的实现　　416\n19.5.1 　非粘滞性服务的细节　　417\n19.5.2 　粘滞性服务的细节　　417\n19.5.3 　非粘滞性的变体：重传送（redeliver）Intent　　418\n19.5.4 　在onStartCommand中指定服务标志　　418\n19.5.5 　挑选合适的粘滞性　　418\n19.5.6 　从两个位置控制唤醒锁　　418\n19.5.7 　长期运行的服务的实现　　419\n19.5.8 　测试长期运行的服务　　420\n19.5.9 　开发者的职责　　420\n19.5.10 　框架的职责　　421\n19.6 　关于项目下载文件的一些说明　　421\n19.7 　参考资料　　422\n19.8 　小结　　422\n19.9 　面试问题　　422\n第20章 　闹钟管理器　　424\n20.1 　闹钟管理器基本知识：设置一个简单的闹钟　　424\n20.1.1 　获取闹钟管理器人的访问权限　　424\n20.1.2 　设置闹钟时间　　424\n20.1.3 　创建闹钟接收程序　　425\n20.1.4 　创建适合闹钟的PendingIntent　　426\n20.1.5 　设置闹钟　　427\n20.1.6 　测试项目　　427\n20.2 　探索其他闹钟管理器场景　　428\n20.2.1 　设置重复闹钟　　428\n20.2.2 　取消闹钟　　429\n20.2.3 　使用多个闹钟　　430\n20.2.4 　Intent在设置闹钟时的首要职责　　432\n20.2.5 　闹钟的持久化　　434\n20.3 　闹钟管理器事实　　434\n20.4 　参考资料　　434\n20.5 　小结　　435\n20.6 　面试问题　　435\n第21章 　2D动画揭秘　　436\n21.1 　逐帧动画　　436\n21.1.1 　计划逐帧动画　　436\n21.1.2 　创建活动　　438\n21.1.3 　将动画添加到活动　　439\n21.2 　布局动画　　441\n21.2.1 　基本的补间动画类型　　442\n21.2.2 　计划布局动画测试工具　　442\n21.2.3 　创建活动和ListView　　443\n21.2.4 　将ListView制作成动画　　445\n21.2.5 　使用插值器　　447\n21.3 　视图动画　　449\n21.3.1 　理解视图动画　　449\n21.3.2 　添加动画　　451\n21.3.3 　使用Camera实现2D图像的深度效果　　454\n21.3.4 　探索AnimationListener类　　455\n21.3.5 　关于变换矩阵的一些说明　　456\n21.4 　属性动画：新动画API　　457\n21.4.1 　属性动画　　458\n21.4.2 　计划一个属性动画的试验台　　459\n21.4.3 　使用对象动画生成器创建基本视图动画　　461\n21.4.4 　使用AnimatorSet实现顺序动画　　462\n21.4.5 　用AnimatorSetBuilder设置动画关系　　463\n21.4.6 　使用XML加载动画生成器　　463\n21.4.7 　使用PropertyValuesHolder　　464\n21.4.8 　视图属性动画　　466\n21.4.9 　类型求值器　　466\n21.4.10 　关键帧　　468\n21.4.11 　布局转变　　469\n21.5 　参考资料　　470\n21.6 　小结　　470\n21.7 　面试问题　　471\n第22章 　地图和基于位置的服务　　472\n22.1 　地图包　　472\n22.1.1 　从谷歌获取map-api密钥　　473\n22.1.2 　MapView和MapActivity　　474\n22.1.3 　使用覆盖图添加标记　　479\n22.2 　位置包　　484\n22.2.1 　使用Android进行地理编码　　484\n22.2.2 　使用后台线程进行地理编码　　487\n22.2.3 　LocationManager服务　　489\n22.2.4 　使用MyLocationOverlay显示位置　　495\n22.2.5 　使用接近提醒　　498\n22.3 　参考资料　　502\n22.4 　小结　　502\n22.5 　面试问题　　503\n第23章 　电话API　　504\n23.1 　使用SMS　　504\n23.1.1 　发送SMS消息　　504\n23.1.2 　监视传入的SMS消息　　507\n23.1.3 　使用SMS文件夹　　509\n23.1.4 　发送电子邮件　　511\n23.2 　使用电话管理器　　511\n23.3 　SIP　　514\n23.3.1 　体验SipDemo　　514\n23.3.2 　android.net.sip包　　515\n23.4 　参考资料　　516\n23.5 　小结　　517\n23.6 　面试问题　　517\n第24章 　媒体框架　　518\n24.1 　使用媒体API　　518\n24.2 　播放媒体　　522\n24.2.1 　播放音频内容　　522\n24.2.2 　播放视频内容　　532\n24.3 　录制媒体　　534\n24.3.1 　使用MediaRecorder录制音频　　535\n24.3.2 　使用AudioRecord录制音频　　538\n24.3.3 　视频录制　　542\n24.3.4 　MediaStore类　　551\n24.3.5 　使用Intnet录制音频　　551\n24.3.6 　将媒体内容添加到媒体存储　　554\n24.3.7 　为整个SD卡触发MediaScanner　　556\n24.4 　参考资料　　557\n24.5 　小结　　557\n24.6 　面试问题　　558\n第25章 　主屏幕部件　　559\n25.1 　主屏幕部件的架构　　559\n25.1.1 　什么是主屏幕部件　　559\n25.1.2 　主屏幕部件的用户体验　　560\n25.1.3 　部件的生命周期　　563\n25.2 　示例部件应用程序　　567\n25.2.1 　定义部件提供程序　　568\n25.2.2 　定义部件尺寸　　569\n25.2.3 　与部件布局相关的文件　　570\n25.2.4 　实现部件提供程序　　571\n25.2.5 　实现部件模型　　573\n25.2.6 　实现部件配置活动　　579\n25.3 　部件预览工具　　582\n25.4 　部件局限性和扩展　　583\n25.5 　基于容器的部件　　583\n25.6 　资源　　583\n25.7 　小结　　584\n25.8 　面试问题　　584\n第26章 　列表部件　　586\n26.1 　远程视图概述　　586\n26.2 　在远程视图中使用列表　　587\n26.2.1 　准备远程布局　　588\n26.2.2 　加载远程布局　　590\n26.2.3 　创建RemoteViewsService　　591\n26.2.4 　创建RemoteViewsFactory　　592\n26.2.5 　创建onClick事件　　595\n26.2.6 　响应onClick事件　　597\n26.3 　工作样例：测试主屏幕列表部件　　598\n26.3.1 　创建测试部件提供程序　　599\n26.3.2 　创建远程视图工厂　　602\n26.3.3 　编写远程视图服务的代码　　604\n26.3.4 　部件主布局文件　　604\n26.3.5 　部件提供程序元数据　　604\n26.3.6 　AndroidManifest.xml　　605\n26.4 　测试列表部件　　605\n26.5 　参考资料　　607\n26.6 　小结　　608\n26.7 　面试问题　　608\n第27章 　触摸屏　　609\n27.1 　MotionEvent　　609\n27.1.1 　MotionEvent对象　　609\n27.1.2 　回收MotionEvent　　619\n27.1.3 　使用VelocityTracker　　619\n27.2 　多点触摸　　621\n27.3 　触摸地图　　627\n27.4 　手势　　629\n27.4.1 　捏合手势　　629\n27.4.2 　GestureDetector和OnGestureListener　　629\n27.4.3 　自定义手势　　632\n27.4.4 　Gestures Builder应用程序　　632\n27.5 　参考资料　　638\n27.6 　小结　　638\n27.7 　面试问题　　638\n第28章 　实现拖放操作　　640\n28.1 　拖放操作简介　　640\n28.2 　3.0及其以上版本的基本拖放操作　　644\n28.3 　拖放操作示例应用程序　　645\n28.3.1 　文件列表　　646\n28.3.2 　示例拖放应用程序的布局　　646\n28.3.3 　响应Dropzone的onDrag事件　　648\n28.3.4 　创建拖动源视图　　650\n28.4 　测试示例拖放应用程序　　653\n28.5 　参考资料　　654\n28.6 　小结　　654\n28.7 　面试问题　　654\n第29章 　传感器　　655\n29.1 　什么是传感器　　655\n29.1.1 　检测传感器　　656\n29.1.2 　可以了解的传感器信息　　656\n29.2 　获取传感器事件　　658\n29.3 　解释传感器数据　　661\n29.3.1 　光线传感器　　661\n29.3.2 　接近传感器　　661\n29.3.3 　温度传感器　　662\n29.3.4 　压力传感器　　662\n29.3.5 　陀螺仪传感器　　662\n29.3.6 　加速度计　　663\n29.3.7 　磁场传感器　　667\n29.3.8 　结合使用加速度计和磁场传感器　　668\n29.3.9 　方向传感器　　668\n29.3.10 　磁偏角和Geomagnetic-Field　　673\n29.3.11 　重力传感器　　673\n29.3.12 　直线加速度传感器　　674\n29.3.13 　旋转矢量传感器　　674\n29.3.14 　近场通信传感器　　674\n29.4 　参考资料　　683\n29.5 　小结　　683\n29.6 　面试问题　　684\n第30章 　联系人API　　685\n30.1 　账户　　685\n30.1.1 　账户屏幕概览　　686\n30.1.2 　账户与联系人的相关性　　688\n30.1.3 　枚举账户　　689\n30.2 　联系人应用程序　　689\n30.2.1 　个人账号简介　　691\n30.2.2 　显示联系人　　692\n30.2.3 　显示联系人详细信息　　692\n30.2.4 　编辑联系人详细信息　　693\n30.2.5 　设置联系人的照片　　694\n30.2.6 　导出联系人　　694\n30.2.7 　各种联系人数据类型　　696\n30.3 　联系人　　696\n30.3.1 　联系人SQLite数据库　　697\n30.3.2 　原始联系人　　697\n30.3.3 　数据表　　699\n30.3.4 　聚合联系人　　700\n30.3.5 　view_contacts　　701\n30.3.6 　contact_entities_view　　702\n30.4 　联系人API　　703\n30.4.1 　浏览账户　　703\n30.4.2 　浏览聚合联系人　　705\n30.4.3 　浏览原始联系人　　712\n30.4.4 　浏览原始联系人数据　　715\n30.4.5 　添加联系人和它的详细信息　　718\n30.5 　控制聚合　　720\n30.6 　同步的影响　　720\n30.7 　个人账号　　721\n30.7.1 　读取账号原始联系人　　722\n30.7.2 　读取账号联系人数据　　722\n30.7.3 　添加数据到个人账号　　723\n30.8 　参考资料　　725\n30.9 　小结　　725\n30.10 　面试问题　　726\n第31章 　部署应用程序Android Market　　727\n31.1 　成为发布者　　727\n31.1.1 　遵守规则　　728\n31.1.2 　开发人员控制台　　729\n31.2 　准备销售应用程序　　731\n31.2.1 　针对不同设备进行测试　　732\n31.2.2 　支持不同的屏幕尺寸　　732\n31.2.3 　准备上传AndroidManifest.xml　　732\n31.2.4 　本地化应用程序　　733\n31.2.5 　准备应用程序图标　　734\n31.2.6 　付费应用程序需要考虑的因素　　734\n31.2.7 　将用户引导至Market　　735\n31.2.8 　Android授权服务　　735\n31.2.9 　使用ProGuard来优化及对抗盗版行为　　736\n31.2.10 　准备上传.apk文件　　737\n31.3 　上传应用程序　　738\n31.3.1 　图表　　738\n31.3.2 　列出详细信息　　739\n31.3.3 　发布选项　　739\n31.3.4 　联系信息　　740\n31.3.5 　需遵守的规定　　740\n31.4 　Android Market上的用户体验　　741\n31.5 　更多发布途径　　742\n31.6 　参考资料　　742\n31.7 　小结　　743\n31.8 　面试问题　　743",
      "pages": "754",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s24576331.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s24576331.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s24576331.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/20429665\/",
      "id": "20429665",
      "publisher": "人民邮电出版社",
      "isbn10": "7115297150",
      "isbn13": "9787115297150",
      "title": "精通Android",
      "url": "http:\/\/api.douban.com\/v2\/book\/20429665",
      "alt_title": "Pro Android 4",
      "author_intro": "Satya Komatineni\n印度理工大学电子工程专业硕士。有20多年的程序设计经验，开发过用于Java Web开发的简单开源工具AspireWeb（www.activeintellect.com\/aspire）以及开源个人Web 操作系统——Aspire Knowledge Central（www.knowledgefolders.com）。擅长使用Java、.NET和数据库技术进行Web开发，发表过30多篇这方面的文章。他经常在与创新技术相关的行业大会上发言，并为java.net上的网络博客撰稿。\nDave MacLean\n加拿大滑铁卢大学系统设计工程专业学士。早在1980年就从事软件开发工作，使用过多种语言进行编程，曾开发机器人自动化、数据仓库、Web自助服务应用程序、EDI事务处理器等系统。Dave曾在Sun、IBM、Trimble Navigation及通用汽车等公司工作。",
      "summary": "《精通Android》在上一版的基础上进行了全面改进，不仅在结构上有了相应的调整，内容上更是与时俱进，增加了Android内部构件的相关知识，介绍了线程、进程、长期运行的服务、广播接收程序、闹钟管理器、设备配置变化和异步任务。关于碎片、碎片对话框、ActionBar和拖放等全新内容更是映入大家的眼帘。此外，《精通Android》对服务和传感器的相关章节做了大幅改进。《精通Android》囊括了Android开发人员所需的一切知识，既可为Android开发人员夯实基础，又能提高Android开发人员的技能。",
      "series": {
        "id": "28336",
        "title": "图灵程序设计丛书·移动开发系列"
      },
      "price": "119.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 8,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "[美] Joshua J. Drake",
        "[西] Pau Oliva Fora",
        "[美] Zach Lanier",
        "[美] Collin Mulliner",
        "[美] Stephen A. Ridley",
        "[德] Georg Wincherski"
      ],
      "pubdate": "2015-3",
      "tags": [
        {
          "count": 35,
          "name": "android",
          "title": "android"
        },
        {
          "count": 34,
          "name": "安全",
          "title": "安全"
        },
        {
          "count": 12,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 10,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 8,
          "name": "Android安全",
          "title": "Android安全"
        },
        {
          "count": 3,
          "name": "计算机科学",
          "title": "计算机科学"
        },
        {
          "count": 2,
          "name": "调试",
          "title": "调试"
        },
        {
          "count": 1,
          "name": "编程",
          "title": "编程"
        }
      ],
      "origin_title": "Android Hacker's Handbook",
      "image": "https://img1.doubanio.com\/mpic\/s28030419.jpg",
      "binding": "平装",
      "translator": [
        "诸葛建伟",
        "杨　坤",
        "肖梓航"
      ],
      "catalog": "第1章　纵观Android生态圈　　1\n1.1 了解Android的根源　　1\n1.1.1 公司历史　　1\n1.1.2 版本历史　　2\n1.1.3 审视Android设备家族　　3\n1.1.4 主体开源　　5\n1.2 了解Android的利益相关者　　6\n1.2.1 谷歌　　7\n1.2.2 硬件厂商　　7\n1.2.3 移动通信运营商　　9\n1.2.4 开发者　　9\n1.2.5 用户　　10\n1.3 理解生态圈的复杂性　　11\n1.3.1 碎片化问题　　12\n1.3.2 兼容性　　13\n1.3.3 更新问题　　13\n1.3.4 安全性与开放性　　15\n1.3.5 公开披露　　16\n1.4 小结　　17\n第2章　Android的安全设计与架构　　18\n2.1 理解Android系统架构　　18\n2.2 理解安全边界和安全策略执行　　19\n2.2.1 Android沙箱　　19\n2.2.2 Android权限　　22\n2.3 深入理解各个层次　　25\n2.3.1 Android应用层　　25\n2.3.2 Android框架层　　28\n2.3.3 DalvikVM　　29\n2.3.4 用户空间原生代码层　　30\n2.3.5 内核　　36\n2.4 复杂的安全性，复杂的漏洞利用　　41\n2.5 小结　　42\n第3章　root Android设备　　43\n3.1 理解分区布局　　43\n3.2 理解引导过程　　45\n3.3 引导加载程序的锁定与解锁　　47\n3.4 对未加锁引导加载程序的设备进行root　　50\n3.5 对锁定引导加载程序的设备进行root　　52\n3.5.1 在已启动系统中获取root权限　　52\n3.5.2 NAND 锁、临时性root与永久性root　　53\n3.5.3 对软root 进行持久化　　55\n3.6 历史上的一些已知攻击　　56\n3.6.1 内核：Wunderbar\/asroot　　56\n3.6.2 恢复：Volez　　57\n3.6.3 udev：Exploid　　57\n3.6.4 adbd：RageAgainstTheCage　　58\n3.6.5 Zygote：Zimperlich和Zysploit　　58\n3.6.6 ashmem：KillingInTheName-\nOf 和psneuter　　58\n3.6.7 vold：GingerBreak　　59\n3.6.8 PowerVR：levitator　　59\n3.6.9 libsysutils：zergRush　　60\n3.6.10 内核：mempodroid　　60\n3.6.11 文件权限和符号链接相关的攻击　　61\n3.6.12 adb 恢复过程竞争条件漏洞　　61\n3.6.13 Exynos4：exynos-abuse　　62\n3.6.14 Diag：lit\/diaggetroot　　62\n3.7 小结　　63\n第4章　应用安全性评估　　64\n4.1 普遍性安全问题　　64\n4.1.1 应用权限问题　　64\n4.1.2 敏感数据的不安全传输　　66\n4.1.3 不安全的数据存储　　67\n4.1.4 通过日志的信息泄露　　68\n4.1.5 不安全的IPC端点　　69\n4.2 案例分析：移动安全应用　　71\n4.2.1 初步剖析　　71\n4.2.2 静态分析　　72\n4.2.3 动态分析　　87\n4.2.4 攻击　　95\n4.3 案例分析：SIP客户端　　97\n4.3.1 了解Drozer　　97\n4.3.2 发现漏洞　　98\n4.3.3 snarfing　　99\n4.3.4 注入　　102\n4.4 小结　　104\n第5章　理解Android的攻击面　　105\n5.1 攻击基础术语　　105\n5.1.1 攻击向量　　106\n5.1.2 攻击面　　106\n5.2 对攻击面进行分类　　107\n5.2.1 攻击面属性　　108\n5.2.2 分类决策　　108\n5.3 远程攻击面　　108\n5.3.1 网络概念　　109\n5.3.2 网络协议栈　　112\n5.3.3 暴露的网络服务　　113\n5.3.4 移动技术　　114\n5.3.5 客户端攻击面　　115\n5.3.6 谷歌的基础设施　　119\n5.4 物理相邻　　123\n5.4.1 无线通信　　123\n5.4.2 其他技术　　127\n5.5 本地攻击面　　128\n5.5.1 探索文件系统　　128\n5.5.2 找到其他的本地攻击面　　129\n5.6 物理攻击面　　133\n5.6.1 拆解设备　　133\n5.6.2 USB　　134\n5.6.3 其他物理攻击面　　137\n5.7 第三方修改　　137\n5.8 小结　　137\n第6章　使用模糊测试来挖掘漏洞　　139\n6.1 模糊测试的背景　　139\n6.1.1 选定目标　　140\n6.1.2 构造畸形输入　　140\n6.1.3 处理输入　　141\n6.1.4 监控结果　　142\n6.2 Android上的模糊测试　　142\n6.3 对Broadcast Receiver进行模糊测试　　143\n6.3.1 选定目标　　143\n6.3.2 生成输入　　144\n6.3.3 传递输入　　145\n6.3.4 监控测试　　145\n6.4 对Android上的Chrome进行模糊测试　　147\n6.4.1 选择一种技术作为目标　　148\n6.4.2 生成输入　　149\n6.4.3 处理输入　　151\n6.4.4 监控测试　　152\n6.5 对USB攻击面进行模糊测试　　155\n6.5.1 对USB进行模糊测试的挑战　　155\n6.5.2 选定目标模式　　155\n6.5.3 生成输入　　156\n6.5.4 处理输入　　158\n6.5.5 监控测试　　158\n6.6 小结　　159\n第7章　调试与分析安全漏洞　　161\n7.1 获取所有信息　　161\n7.2 选择一套工具链　　162\n7.3 调试崩溃Dump　　163\n7.3.1 系统日志　　163\n7.3.2 Tombstone　　164\n7.4 远程调试　　165\n7.5 调试Dalvik代码　　166\n7.5.1 调试示例应用　　167\n7.5.2 显示框架层源代码　　168\n7.5.3 调试现有代码　　170\n7.6 调试原生代码　　173\n7.6.1 使用NDK进行调试　　174\n7.6.2 使用Eclipse进行调试　　177\n7.6.3 使用AOSP进行调试　　179\n7.6.4 提升自动化程度　　183\n7.6.5 使用符号进行调试　　184\n7.6.6 调试非AOSP设备　　189\n7.7 调试混合代码　　190\n7.8 其他调试技术　　191\n7.8.1 调试语句　　191\n7.8.2 在设备上进行调试　　191\n7.8.3 动态二进制注入　　192\n7.9 漏洞分析　　193\n7.9.1 明确问题根源　　193\n7.9.2 判断漏洞可利用性　　205\n7.10 小结　　205\n第8章　用户态软件的漏洞利用　　206\n8.1 内存破坏漏洞基础　　206\n8.1.1 栈缓冲区溢出　　206\n8.1.2 堆的漏洞利用　　209\n8.2 公开的漏洞利用　　215\n8.2.1 GingerBreak　　215\n8.2.2 zergRush　　218\n8.2.3 Mempodroid　　221\n8.3 Android浏览器漏洞利用　　222\n8.3.1 理解漏洞　　222\n8.3.2 控制堆　　224\n8.4 小结　　227\n第9章　ROP漏洞利用技术　　228\n9.1 历史和动机　　228\n9.2 ARM 架构下的ROP 基础　　230\n9.2.1 ARM 子函数调用　　231\n9.2.2 将gadget组成ROP链　　232\n9.2.3 识别潜在的gadget　　234\n9.3 案例分析：Android 4.0.1链接器　　235\n9.3.1 迁移栈指针　　236\n9.3.2 在新映射内存中执行任意代码　　237\n9.4 小结　　240\n第10章　攻击内核　　242\n10.1 Android 的Linux内核　　242\n10.2 内核提取　　242\n10.2.1 从出厂固件中提取内核　　243\n10.2.2 从设备中提取内核　　245\n10.2.3 从启动镜像中提取内核　　246\n10.2.4 解压内核　　247\n10.3 运行自定义内核代码　　247\n10.3.1 获取源代码　　247\n10.3.2 搭建编译环境　　250\n10.3.3 配置内核　　251\n10.3.4 使用自定义内核模块　　252\n10.3.5 编译自定义内核　　254\n10.3.6 制作引导镜像　　257\n10.3.7 引导自定义内核　　258\n10.4 调试内核　　262\n10.4.1 获取内核崩溃报告　　263\n10.4.2 理解Oops信息　　264\n10.4.3 使用KGDB进行Live调试　　267\n10.5 内核漏洞利用　　271\n10.5.1 典型Android内核　　271\n10.5.2 获取地址　　273\n10.5.3 案例分析　　274\n10.6 小结　　283\n第11章　攻击RIL无线接口层　　284\n11.1 RIL简介　　284\n11.1.1 RIL架构　　285\n11.1.2 智能手机架构　　285\n11.1.3 Android电话栈　　286\n11.1.4 对电话栈的定制　　287\n11.1.5 RIL 守护程序　　287\n11.1.6 用于vendor-ril的API　　289\n11.2 短信服务　　290\n11.2.1 SMS消息的收发　　290\n11.2.2 SMS消息格式　　291\n11.3 与调制解调器进行交互　　293\n11.3.1 模拟调制解调器用于模糊测试　　293\n11.3.2 在Android中对SMS进行模糊测试　　295\n11.4 小结　　302\n第12章　漏洞利用缓解技术　　303\n12.1 缓解技术的分类　　303\n12.2 代码签名　　304\n12.3 加固堆缓冲区　　305\n12.4 防止整数溢出　　305\n12.5 阻止数据执行　　306\n12.6 地址空间布局随机化　　308\n12.7 保护栈　　310\n12.8 保护格式化字符串　　310\n12.9 只读重定位表　　312\n12.10 沙盒　　313\n12.11 增强源代码　　313\n12.12 访问控制机制　　315\n12.13 保护内核　　316\n12.13.1 指针和日志限制　　316\n12.13.2 保护零地址页　　317\n12.13.3 只读的内存区域　　318\n12.14 其他加固措施　　318\n12.15 漏洞利用缓解技术总结　　320\n12.16 禁用缓解机制　　322\n12.16.1 更改personality　　322\n12.16.2 修改二进制文件　　323\n12.16.3 调整内核　　323\n12.17 对抗缓解技术　　323\n12.17.1 对抗栈保护　　324\n12.17.2 对抗ASLR　　324\n12.17.3 对抗数据执行保护　　324\n12.17.4 对抗内核级保护机制　　325\n12.18 展望未来　　325\n12.18.1 进行中的官方项目　　325\n12.18.2 社区的内核加固工作　　326\n12.18.3 一些预测　　326\n12.19 小结　　327\n第13章　硬件层的攻击　　328\n13.1 设备的硬件接口　　328\n13.1.1 UART 串行接口　　329\n13.1.2 I2C、SPI 和单总线接口　　331\n13.1.3 JTAG　　334\n13.1.4 寻找调试接口　　343\n13.2 识别组件　　353\n13.2.1 获得规格说明书　　353\n13.2.2 难以识别的组件　　354\n13.3 拦截、监听和劫持数据　　355\n13.3.1 USB　　355\n13.3.2 I2C、SPI和UART串行端口　　359\n13.4 窃取机密和固件　　364\n13.4.1 无损地获得固件　　364\n13.4.2 有损地获取固件　　365\n13.4.3 拿到dump文件后怎么做　　368\n13.5 陷阱　　371\n13.5.1 定制的接口　　371\n13.5.2 二进制私有数据格式　　371\n13.5.3 熔断调试接口　　372\n13.5.4 芯片密码　　372\n13.5.5 bootloader密码、热键和哑终端　　372\n13.5.6 已定制的引导过程　　373\n13.5.7 未暴露的地址线　　373\n13.5.8 防止逆向的环氧树脂　　373\n13.5.9 镜像加密、混淆和反调试　　373\n13.6 小结　　374\n附录A　工具　　375\n附录B　开源代码库　　386",
      "pages": "394",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s28030419.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s28030419.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s28030419.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/26348151\/",
      "id": "26348151",
      "publisher": "人民邮电出版社",
      "isbn10": "711538570X",
      "isbn13": "9787115385703",
      "title": "Android安全攻防权威指南",
      "url": "http:\/\/api.douban.com\/v2\/book\/26348151",
      "alt_title": "Android Hacker's Handbook",
      "author_intro": "Joshua J. Drake\n是国际知名黑客，Accuvant LABS公司研究部门总监，曾在世界著名黑客大赛Pwn2Own上攻陷IE浏览器中的Java插件，曾发现Google Glass漏洞。\nPau Oliva Fora\n是viaForensics公司的移动安全工程师，为主流Android OEM提供咨询服务。\nZach Lanier\n是Duo Security公司的资深安全研究员，在信息安全的不同领域中有十多年的工作经验。\nCollin Mulliner\n是美国东北大学的博士后研究员，主要研究兴趣是移动和嵌入式系统的安全和隐私，重点关注移动智能手机。\nStephen A. Ridley\n是一位安全研究员与技术作者，在软件开发、软件安全和逆向工程领域有十几年的经验。\nGeorg Wicherski\n是CrowdStrike公司的资深安全研究员。",
      "summary": "《Android安全攻防权威指南》由世界顶尖级黑客打造，是目前最全面的一本Android系统安全手册。书中细致地介绍了Android系统中的漏洞挖掘、分析，并给出了大量利用工具，结合实例从白帽子角度分析了诸多系统问题，是一本难得的安全指南。移动设备管理者、安全研究员、Android应用程序开发者和负责评估Android安全性的顾问都可以在本书中找到必要的指导和工具。\n在本书中你可以：\n熟悉实现安全性的细节，以及由Android操作系统开放性带来的复杂问题；\n绕开常见安全隐患，了解智能手机最新黑客攻击策略；\n回顾曾成功攻破Android操作系统的各类攻击；\n探索ROOT操作、分区布局和引导过程；\n理解Android生态圈的复杂性，包括各个硬件厂商和软件开发者的影响。",
      "price": "89.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 23,
        "average": "7.3",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Reto Meier"
      ],
      "pubdate": "2010",
      "tags": [
        {
          "count": 32,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 15,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 9,
          "name": "开发",
          "title": "开发"
        },
        {
          "count": 4,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 3,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 1,
          "name": "进阶",
          "title": "进阶"
        },
        {
          "count": 1,
          "name": "教材",
          "title": "教材"
        },
        {
          "count": 1,
          "name": "技术",
          "title": "技术"
        }
      ],
      "origin_title": "Professional Android Application Development",
      "image": "https://img3.doubanio.com\/mpic\/s4405510.jpg",
      "binding": "",
      "translator": [
        "王鹏杰",
        "霍建同"
      ],
      "catalog": "第1章 Android简介\n1.1 一些背景信息\n1.1.1 不远的过去\n1.1.2 未来的前景\n1.2 对Android的误解\n1.3 开放的移动开发平台\n1.4 自带的Android应用程序\n1.5 Android SDK功能\n1.5.1 对包括摄像头、GPS和加速计在内的硬件的访问\n1.5.2 自带的Google地图、地理编码和基于位置的服务\n1.5.3 后台服务\n1.5.4 SQLite数据存储和检索数据库\n1.5.5 共享数据和应用程序间通信\n1.5.6 使用Google Talk的P2P服务\n1.5.7 扩展的数据支持和2D／3D图形\n1.5.8 优化的内存和进程管理\n1.6 开放手机联盟简介\n1.7 运行Android的环境\n1.8 从事Android开发的原因\n1.8.1 推动Android普及的因素\n.1.8.2 Android的独到之处\n1.8.3 改变移动开发格局\n1.9 开发框架简介\n1.9.1 开发包中的资源\n1.9.2 理解Android软件栈\n1.9.3 Dalvik虚拟机\n1.9.4 Android应用程序架构\n1.9.5 Android库\n1.9.6 高级Android库\n1.10 小结\n第2章 开始入手\n2.1 Android开发\n2.1.1 开始前的准备工作\n2.1.2 创建第一个Android活动\n2.1.3 Android应用程序的类型\n2.2 面向移动设备的开发\n2.2.1 关于硬件设计的考虑事项\n2.2.2 考虑用户环境\n2.2.3 Android开发\n2.3 To-Do List示例\n2.4 Android开发工具\n2.4.1 Android模拟器\n2.4.2 Dalvik调试监控服务(DDMS)\n2.4.3 Android调试桥(ADB)\n2.5 小结\n第3章 创建应用程序和活动\n3.1 Android应用程序的组成部分\n3.2 程序清单简介\n3.3 使用清单编辑器\n3.4 Android应用程序生命周期\n3.5 理解应用程序的优先级和进程状态\n3.6 分离资源\n3.6.1 创建资源\n3.6.2 使用资源\n3.6.3 To-DoList资源示例\n3.6.4 为不同的语言和硬件创建资源\n3.6.5 运行时配置更改\n3.7 深入探讨Android活动\n3.7.1 创建一个活动\n3.7.2 活动生命周期\n3.7.3 Android活动类\n3.8 小结\n第4章 创建用户界面\n4.1 Android UI基本设计\n4.2 View简介\n4.2.1 使用View创建Activity(活动)用户界面\n4.2.2 Android Widget工具箱\n4.3 布局简介\n4.4 创建新的View\n4.4.1 修改现有的View\n4.4.2 创建复合控件\n4.4.3 创建定制的Widget和控件\n4.4.4 使用定制的控件\n4.5 创建和使用菜单\n4.5.1 Android菜单系统简介\n4.5.2 定义活动的菜单\n4.5.3 动态更新菜单项\n4.5.4 处理菜单选择\n4.5.5 子菜单和上下文菜单\n4.5.6 To-Do List示例续\n4.6 小结\n第5章 Intent、广播接收器、\nAdapter和Internet\n5.1 Intent简介\n5.1.1 使用Intent来启动活动\n5.1.2 使用Intent Filter来为隐式Intent提供服务\n5.1.3 使用Intent Filter作为插件和扩展\n5.1.4 使用Intent来广播事件\n5.2 Adapter简介\n5.2.1 Android提供的部分Adapter简介\n5.2.2 使用Adapter绑定数据\n5.3 使用Internet资源\n5.3.1 连接到Internet资源\n5.3.2 利用Internet资源\n5.4 Dialog简介\n5.4.1 Dialog类简介\n5.4.2 使用活动作为对话框\n5.5 创建一个地震查看器\n5.6 小结\n第6章 数据存储、检索和共享\n6.1 Android中的数据保存技术\n6.2 保存简单的应用程序数据\n6.2.1 创建和保存preference\n6.2.2 检索共享的preference\n6.2.3 保存活动状态\n6.2.4 为地震查看器创建一个Preference页\n6.3 保存和载入文件\n6.3.1 将静态文件作为资源添加\n6.3.2 文件管理工具\n6.4 Android中的数据库\n6.4.1 SQLite简介\n6.4.2 Cursor和内容值\n6.4.3 使用Android数据库\n6.5 内容提供器简介\n6.5.1 使用内容提供器\n6.5.2 本地Android内容提供器\n6.5.3 创建一个新的内容提供器\n6.5.4 创建和使用地震内容提供器\n6.6 小结\n第7章 地图、地理编码和基于位置的服务\n7.1 使用基于位置的服务\n7.2 使用Test Proyider构建模拟器\n7.2.1 更新模拟位置提供器中的位置\n7.2.2 创建一个应用程序来管理Test Location Provider\n7.3 选择——个Location Provider\n7.3.1 查找可用的提供器\n7.3.2 根据要求标准查找提供器\n7.4 确定自己所在的位置\n7.4.1 “Where Am I”示例\n7.4.2 追踪移动\n7.4.3 更新“WhereAmI”示例中的位置\n7.5 使用邻近提醒\n7.6 使用Geocoder\n7.6.1 反向地理编码\n7.6.2 前向地理编码\n7.6.3 对“Where Am I”示例进行地理编码\n7.7 创建基于地图的活动\n7.7.1 MapView和MapActivity简介\n7.7.2 创建一个基于地图的活动\n7.7.3 配置和使用MapView\n7.7.4 使用MapController\n7.7.5 对“Where Am I”示例使用地图\n7.7.6 创建和使用覆盖(Overlay)\n7.7.7 MyLocationOverlay简介\n7.7.8 ItemizedOverlay和Overlayltem简介\n7.7.9 将View固定到地图和地图的某个位置上\n7.8 对Earthquake示例添加地图功能\n7.9 小结\n第8章 后台工作\n8.1 服务简介\n8.1.1 创建和控制服务\n8.1.2 将活动和服务绑定\n8.2 使用后台工作线程\n8.2.1 创建新的线程\n8.2.2 为GUI操作同步线程\n8.2.3 将Earthquake Service移动到后台线程\n8.3 创建一个Toast\n8.3.1 定制Toast\n8.3.2 在工作(worker)线程中使用Toast\n8.4 Notification简介\n8.4.1 Notification Manager简介\n8.4.2 创建Notification\n8.4.3 触发Notification\n8.4.4 向Earthquake Monitor中添加Notiflcation\n8.4.5 高级Notification技术\n8.4.6 持续的和连续的Notification\n8.5 使用Alarm\n8.6 使用Alarm更新Earthquake\n8.7 小结\n第9章 P2P通信\n9.1 Android即时消息简介\n9.1.1 使用GTalk服务\n9.1.2 和GTalk服务绑定\n9.1.3 建立GTalk连接，开始一个IM会话\n9.1.4 在线状态和联系人列表简介\n9.1.5 管理聊天会话\n9.1.6 发送和接收数据信息\n9.2 SMS简介\n9.2.1 在应用程序中使用SMS\n9.2.2 发送SMS信息\n9.2.3 监听SMS消息\n9.2.4 紧急响应的SMS示例\n9.2.5 紧急响应自动化\n9.3 小结\n第10章 访问Android硬件\n10.1 使用媒体API\n10.1.1 播放媒体资源\n10.1.2 录制多媒体\n10.2 使用摄像头\n10.2.1 控制摄像头设置\n10.2.2 使用摄像头预览\n10.2.3 照相\n10.3 Sensor Manager简介\n10.4 使用加速计和指南针\n10.4.1 加速计介绍\n10.4.2 检测加速度的改变\n10.4.3 创建一个速度计\n10.4.4 确定方向\n10.4.5 创建指南针和地平仪\n10.5 Android电话功能\n10.5.1 打电话\n10.5.2 监控电话状态和电话活动\n10.5.3 监控数据连通性和活动\n10.5.4 访问手机的属性和状态\n10.5.5 控制电话\n10.6 使用蓝牙\n10.6.1 蓝牙服务介绍\n10.6.2 控制本地蓝牙设备\n10.6.3 发现并配对蓝牙设备\n10.6.4 管理蓝牙连接\n10.6.5 使用蓝牙进行通信\n10.6.6 使用蓝牙耳机\n10.7 管理网络和Wi-Fi连接\n10.7.1 监控和管理Internet连接\n10.7.2 管理活动的连接\n10.7.3 管理你的Wi-Fi\n10.8 控制设备震动\n10.9 小结\n第11章 Android高级开发\n11.1 Android的安全性\n11.1.1 Linux内核安全\n11.1.2 权限简介\n11.1.3 声明和实施权限\n11.1.4 为广播Intent实施权限\n11.2 使用AIDL来支持服务IPC\n11.3 使用Internet服务\n11.4 构建内容丰富的用户界面\n11.4.1 使用动画\n11.4.2 使用主题来为应用程序添加皮肤\n11.4.3 高级画布绘图\n11.4.4 SurfaceView简介\n11.4.5 创建交互式控件\n11.5 小结",
      "pages": "398",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s4405510.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s4405510.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s4405510.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4865048\/",
      "id": "4865048",
      "publisher": "清华大学出版社",
      "isbn10": "7302228442",
      "isbn13": "9787302228448",
      "title": "Android高级编程",
      "url": "http:\/\/api.douban.com\/v2\/book\/4865048",
      "alt_title": "Professional Android Application Development",
      "author_intro": "RetocMeier出生于澳大利西南的珀斯市,1现居伦敦\nReto是一位经验丰富的软件开发人员,2拥有逾10年的GUI程序架构.c设计和开发经验.a他在涉足IT行业前曾从事过海洋石油和天然气开发以及金融工作.\nReto始终不渝地追求掌握新技术,3从2007年Android发布之初Reto就迷恋上了此项技术.a他利用业余时间研究包括WPF在内的多种开发平台以及Google的各种开发工具.\n详情请访问Reto的个人网站RadioactiveYak,4网址是http：／／blog.3radioactiveyak.3com.a4a",
      "summary": "第1章简要介绍了Android，包括它是什么，以及它如何适应当前的移动开发。然后详细地讲述了Android作为一个开放平台能够提供什么功能，并解释了它为什么是一个创建移动应用程序的良机。\n第2章讲述了移动开发的一些最佳实践，并解释了如何下载AndroidSDK和开始开发应用程序。该章同时也介绍了Android开发工具，并说明了如何从头创建新的应用程序。\n第3-6章深入地探讨了基本的Android应用程序组件。首先讲述了组成Android应用程序和它的生命周期的每个部分，在介绍“活动”内容及其生存期与生命周期之前，将简要介绍应用程序清单和外部资源。\n之后将学习如何使用布局和View创建用户界面，并且还将了解在应用程序组件之间执行动作和发送信息的Intent机制。接着将介绍Intemet资源，再后详细地讲述了数据存储、检索和共享。读者在此将了解首选保存机制、文件处理和数据库。在这个部分的最后还对如何使用内容提供器来共享应用程序数据进行了讲解。\n第7～10章涉及到了较为高级的主题。首先介绍了地图以及基于位置的服务，接着介绍了服务、后台线程和Notification的用法。\n接着介绍了Android的通信功能，包括通过即时通信和SMS来发送和接收消息。然后是有关硬件的内容，包括媒体录制及播放、摄像头、加速计和定位传感器。第10章的最后介绍了通话和网络硬件，包括通话API、蓝牙和网络管理(包括WiFi和移动数据连接)。\n第11章介绍了几个高级开发主题，其中包括安全、IPC、高级图像技术以及用户与硬件的交互。",
      "price": "59.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 24,
        "average": "8.2",
        "min": 0
      },
      "subtitle": "A Learner's Guide to Creating Applications for Android Devices",
      "author": [
        "Jonathan Simon"
      ],
      "pubdate": "2011-8-5",
      "tags": [
        {
          "count": 38,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 19,
          "name": "HeadFirst",
          "title": "HeadFirst"
        },
        {
          "count": 12,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 11,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 11,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 6,
          "name": "计算机科学",
          "title": "计算机科学"
        },
        {
          "count": 6,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 5,
          "name": "英文版",
          "title": "英文版"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s6518051.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "608",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s6518051.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s6518051.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s6518051.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6530430\/",
      "id": "6530430",
      "publisher": "O'Reilly Media",
      "isbn10": "1449393306",
      "isbn13": "9781449393304",
      "title": "Head First Android Development",
      "url": "http:\/\/api.douban.com\/v2\/book\/6530430",
      "alt_title": "",
      "author_intro": "Jonathan Simon\nJonathan Simon is a developer and interaction designer who loves to make great apps for people to use—and loves to help other people make them, too. He’s worked on a dizzying array of platforms and customers, from trading systems built in Java\/Swing for JPMorganChase and Merrill Lynch, to collaborative websites built in Ruby on Rails, and now, mobile. Jonathan is a longtime veteran of the mobile space, developing J2ME mobile apps all the way back when the Motorola RAZR was the phone everyone had to have. Since then, he’s developed mobile apps for Android, iPhone, and BlackBerry. Jonathan is currently a senior engineer at AllTrails, a Yelp for the outdoors.",
      "summary": "With this digital Early Release edition of Head First Android Development, you get the entire book bundle in its earliest form – the author's raw and unedited content – so you can take advantage of this content long before the book's official release. You'll also receive updates when significant changes are made, as well as the final ebook version.\nAndroid devices are stealing market share from the iPhone with dramatic speed, and you have a killer app idea. Where to begin? Head First Android Development will help you get your first application up and running in no time with the Android SDK and Eclipse plug-in. You'll learn how to design for devices with a variety of different screen sizes and resolutions, along with mastering core programming and design principles that will make your app stand out.\nWhether you're a seasoned iPhone developer who wants to jump into the the Android Market, or someone with previous programming skills but no mobile apps in your resume, this book offers a complete learning experience for creating eye-catching, top-selling Android applications.\nYou'll learn how to:\nInstall the Android SDK and Eclipse plug-in and get started building apps\nAdd buttons, edit text fields, and build your own navigation options in the Android menu\nCustomize the look of your app with theming and adding image resources\nUse Android's content provider mechanism to add images and contact information to an app, and establish permissions for their use\nWork with the Android devices' camera, GPS, and accelerometer\nExperiment with different Android emulator configurations to simulate different devices with a variety of screen sizes\nOptimize, test, and distribute your application in the Android Market\nWe think your time is too valuable to waste struggling with new concepts. Using the latest research in cognitive science and learning theory to craft a multi-sensory learning experience, Head First Android Development uses a visually rich format designed for the way your brain works, not a text-heavy approach that puts you to sleep.",
      "price": "USD 44.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 18,
        "average": "6.7",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "eoeAndroid开发者社区"
      ],
      "pubdate": "2010 年7月",
      "tags": [
        {
          "count": 23,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 4,
          "name": "移动互联网",
          "title": "移动互联网"
        },
        {
          "count": 3,
          "name": "开发者",
          "title": "开发者"
        },
        {
          "count": 3,
          "name": "eoeandroid",
          "title": "eoeandroid"
        },
        {
          "count": 2,
          "name": "产品经理",
          "title": "产品经理"
        },
        {
          "count": 1,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 1,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 1,
          "name": "互联网",
          "title": "互联网"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s6189803.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第一篇 扬帆篇\n第1章 Android Time是时候了吗 2\n创作者 靳岩\neoeMobile.com和 eoeandroid.com创始人之一，曾编写过《Google Android 入门与实战》图书。\n该作者还参与第16章的编写。\n1.1 Android是什么，可以吃吗 2\n1.1.1 一切都从Android开始 2\n1.1.2 细说Android 2\n1.1.3 Android的演变与现状 3\n1.2 Android的发展 3\n1.2.1 Android 成长之路 3\n1.2.2 手机开放联盟 4\n1.2.3 已面市的Android手机 5\n1.2.4 OMS简介 5\n1.2.5 Android用户简析 6\n1.3 Android的前景 7\n1.3.1 Android平台的发展与Android手机的前景 7\n1.3.2 Android在其他平台的应用 7\n1.3.3 Android应用开发的前景 8\n1.4 小结 9\n.第2章 Android项目赢利模式探讨 10\n创作者 方翼\n互联网实践者，昔日eoeAndroid论坛斑竹。\n该作者还参与第15章的编写。\n2.1 我是软件开发商 10\n2.1.1 制作应用程序 10\n2.1.2 选择应用软件类型 10\n2.1.3 关于开发 10\n2.2 Android Market平台销售 11\n2.2.1 制作应用软件投放在Market上销售 11\n2.2.2 收费应用一定要有价值 11\n2.2.3 真正的用户 11\n2.2.4 Android Market平台销售存在的弊端 15\n2.2.5 本土化策略 15\n2.3 是赢利而非广告 15\n2.3.1 免费软件是大趋势 15\n2.3.2 广告 16\n2.3.3 Google Adsens 16\n2.3.4 Admob 16\n2.3.5 专业性广告 18\n2.3.6 植入性广告 18\n2.3.7 对广告创收的忠告 18\n2.4 为互联网服务商定制客户端 19\n2.4.1 术业有专攻 19\n2.4.2 提供API的互联网服务商 19\n2.4.3 没有开放API接口的网站 19\n2.5 做项目的真谛：时间换金钱 20\n2.6 做解决方案要注意的问题 20\n2.7 小结 22\n第二篇 起航篇\n第3章 用户定义与UI设计 24\n创作者 于健（ken）\n摩托罗拉中国研发中心资深交互界面设计师，从事Google Android系统的手机交互界面设计。曾供职于Palm Source北京研发中心，首位交互界面设计师，交互界面设计主管。具有多年的手机交互设计经验，对交互界面设计有着深厚的理解，在Android平台有多款优秀的设计作品上市。\n3.1 UI概述 24\n3.1.1 UI定义 24\n3.1.2 UI设计的重要性 26\n3.2 用户定义与交互设计方法 28\n3.2.1 了解自己和自己的技术 28\n3.2.2 以UI设计师的身份思考问题 28\n3.2.3 UI细节设计与开发 31\n3.3 小结 33\n第4章 Android 2.0技术 34\n创作者一 张运芳\n长期从事Android研究与应用开发，典型的Linux爱好者，开放源代码软件和 GNU\/Linux 的狂热支持者。参与并管理过20余款Android、OMS项目管理及开发。Java狂热爱好者，善于Java ME、Android、BlackBerry等移动嵌入式开发。个性开朗、幽默、善交挚友、刚毅、自强。喜好电影、音乐，曾与摇滚乐队多次同台合作；爱好电吉他、架子鼓、电贝司；目前已经谱写6首完整的乐队曲目。\n该作者还参与第7、13、14章的编写。\n创作者二 赵学\n从事Android相关产品的开发工作，专注于移动互联网应用的发布与分享。喜欢研究算法，热衷于人工智能。骨灰级的游戏玩家，曾在一家专注于Android游戏开发的公司就职。\n该作者还参与第9章的编写。\n4.1 Android 2.0来临的时代 34\n4.1.1 Android 2.0发布 34\n4.1.2 Android 2.0技术时代 34\n4.1.3 Android 2.0手机前景展望 35\n4.2 Android 2.0新特性 35\n4.2.1 Android 2.0 UI新特性 36\n4.2.2 Android 2.0新特性 41\n4.2.3 Android 2.0 自带程序新特性 43\n4.3 Android 2.0开发环境(SDK\/开发环境\/ADT) 45\n4.3.1 Android 2.0 SDK下载 45\n4.3.1.1 初见Android——新手入门 46\n4.3.1.2 再聚Android——超级Fans 57\n4.3.2 Android 2.0 SDK模式分析 60\n4.3.2.1 组件模式下的目录结构 61\n4.3.2.2 官方组件版本SDK 63\n4.3.3 Android 2.0 SDK更新元素 64\n4.3.4 Android 2.0开发环境深入与兼容性 65\n4.3.4.1 Android 2.0 开发环境的深入 65\n4.3.4.2 Android 2.0 兼容性 71\n4.4 Android 2.0前沿技术实例解析——Gestures手势 73\n4.5 小结 76\n第5章 Android基础开发实例 78\n创作者 王雪明Google粉丝，从事Android研究与应用开发。\n该作者还参与第11章的编写。\n5.1 Android体系结构介绍 78\n5.1.1 应用程序 79\n5.1.2 应用程序框架 79\n5.1.3 各种库和Android 运行环境 79\n5.1.4 Linux 内核 80\n5.2 Android执行文件apk的组成结构 80\n5.3 Android应用的逻辑组成 81\n5.3.1 人机交互界面Activity介绍 81\n5.3.2 广播接收者 84\n5.3.3 服务 84\n5.3.4 内容提供者 84\n5.4 快速构建一个Android工程项目 85\n5.5 创建Android虚拟设备 88\n5.5.1 使用create avd命令创建Android avd 88\n5.5.2 借助ADT创建Android avd 88\n5.6 运行一个Android工程 90\n5.7 调试一个Android工程 91\n5.8 签名Android的执行文件 93\n5.8.1 制作签名文件 93\n5.8.2 使用签名文件给apk签名 96\n5.9 发布应用到Android Market商店 97\n5.9.1 注册Market账号 98\n5.9.2 发布已签名的应用到Android Market商店 98\n5.9.3 通过Android Market手机客户端下载应用到手机 100\n5.10 发布应用到eoeMarket商店 101\n5.11 小结 108\n第6章 NDK底层开发与扩展 109\n创作者一 姚尚朗（IceskYsl）\neoemobile.com和 eoeAndroid. com创始人之一，Google产品重度依赖者。在移动互联网领域从事个性化推荐与分享平台的搭建和实施，崇尚敏捷开发和快速交付可用软件模式。对电信行业创新商业模式、移动互联网和Web 2.0发展趋势有独特的见解，并以实践积极探索之。曾编著过《Google Android开发入门与实战》、《Google API大全 编程·开发·实例》，合译《The Rails Way》。他随性、自由、信缘，喜欢背包去陌生的地方旅行，乐交朋友。\n该作者还参与第8、10、16章的编写。\n创作者二 马万铮\n计算机终端技术及无线终端软件技术探索者。2004年进入Motorola开发和设计软件平台及移动终端系统框架；2009年加入T3G，提供Android平台搭建及开发的技术支持。2010年，加入eoeMobile.com，担任PC终端及无线客户端软件技术总监(总工程师)。完美主义者，同时专注于应用层与中间件技术，通晓多种系统的上层与底层原理，对技术与产品要求精益求精，无限制地追求提升性能与用户体验。\n创作者三 周波\n一直从事手机应用软件的开发，曾做过的项目有诺基亚OVI Contacts客户端、中国移动快讯客户端，2009年加入eoe团队，主要做Android产品开发工作。\n6.1 NDK概述 109\n6.2 向底层开发进军 112\n6.2.1 底层开发人员需要具备的素质 112\n6.2.2 开发前的准备（环境搭建篇） 112\n6.2.2.1 Windows下的环境搭建 112\n6.2.2.2 Linux（ubuntu）下Android NDK配置与开发 117\n6.2.2.3 macbook下Android NDK配置与开发 119\n6.2.2.4 NDK项目hello-jni 121\n6.2.2.5 进一步了解NDK 123\n6.3 底层开发实例解析——实时放大镜 125\n6.3.1 实例概述 125\n6.3.2 编写程序代码 126\n6.3.2.1 创建工程 126\n6.3.2.2 编写Java代码 127\n6.3.2.3 编写和编译C文件 139\n6.3.2.4 运行程序并对比性能 150\n6.3.2.5 程序的签名与打包 151\n6.4 小结 152\n第7章 占据手机桌面的应用——Widget 153\n7.1 Widget简介 153\n7.1.1 Widget概念 153\n7.1.2 Widget市场地位 154\n7.1.3 Widget市场容量 155\n7.2 Widget的实现方式 157\n7.2.1 Widget实现的必备元素 157\n7.2.2 Widget实现的步骤 158\n7.2.2.1 创建Demo工程项目 158\n7.2.2.2 Widget 桌面布局设计 160\n7.2.2.3 添加AppWidgetProviderInfo元数据 162\n7.2.2.4 实现AppWidgetProvider 类 163\n7.2.2.5 Manifest中注册receiver——AppWidgetProvider 165\n7.2.2.6 添加桌面Widget插件 166\n7.2.2.7 实现Widget配置Activity类 167\n7.2.2.8 Manifest中注册配置Activity类 167\n7.2.2.9 AppWidgetProviderInfo元数据中设置要启动的Widget配置Activity 168\n7.2.2.10 设计Widget配置Activity布局 168\n7.2.2.11 实现Widget配置Activity的逻辑框架、结构与功能 170\n7.2.2.12 动态配置桌面Widget插件 173\n7.3 Widget实例 174\n7.3.1 Widget的构思和策划 174\n7.3.2 Widget的架构和实现 181\n7.3.2.1 总体框架设计 182\n7.3.2.2 详细框架设计 184\n7.3.2.3 代码实现 186\n7.3.2.4 Widget测试 279\n7.3.3 Widget的包装和产品化 283\n7.3.3.1 Widget包装 283\n7.3.3.2 Widget产品化 294\n7.4 Widget底层框架分析 295\n7.4.1 添加APP Widget到桌面 295\n7.4.1.1 在Home空白处长按以及Menu中单击添加时发生的事件 296\n7.4.1.2 ADD Dialog中选中Widgets后发生的事件 302\n7.4.1.3 在AppWidget Picker中点击某项后发生的事件 307\n7.4.1.4 添加APPWidget到桌面 309\n7.4.2 AppWidget的更新 318\n7.4.3 APP Widget的管理 324\n7.4.4 APP Widget框架接收的\nAction 335\n7.4.5 APP Widget的回调方法 339\n7.4.6 APP Widget的生命周期 341\n7.5 Widget产品注意问题 350\n7.6 小结 351\n第三篇 搏击篇\n第8章 传统应用软件——突围之道 353\n8.1 传统应用软件——Android背后的支柱 353\n8.1.1 应用的分类及统计 354\n8.1.2 透过表象看本质，找准方向 354\n8.1.3 立足优势和不足，寻找突破点 355\n8.2 传统应用软件——突围前的准备 355\n8.2.1 一个未被开发的新兴需求市场 355\n8.2.2 一个竞争激烈但有机可乘的市场 356\n8.2.3 换个角度思考出路 358\n8.3 传统应用软件——开始突围 360\n8.3.1 快速出击新兴的需求市场 360\n8.3.2 站在先行者的肩膀上前进 365\n8.3.3 绕过去也是一种成功 367\n8.4 小结 367\n第9章 成为游戏开发家族的一员 368\n9.1 牵引Android发展的火车头\n——Android游戏定位 368\n9.2 市场前景分析 368\n9.3 游戏开发实例《是男人就坚持20秒》 369\n9.3.1 游戏策划 370\n9.3.2 游戏构架的搭建 371\n9.3.3 美工制作 375\n9.3.4 编程实现 376\n9.3.5 后续开发展望 395\n9.3.6 开发流程总结 398\n9.4 破卵成蝶，点石成金——进阶技巧 399\n9.4.1 碰撞判断 399\n9.4.2 内存管理 405\n9.4.3 寻路算法 410\n9.5 小结 411\n第10章 移动互联网与平台化产品 412\n10.1 移动互联网平台化的那点事 412\n10.1.1 移动互联网概述及其发展趋势 412\n10.1.2 平台化概述 413\n10.1.3 平台化的诱惑 413\n10.1.4 移动互联网平台化产品，你准备好了吗 414\n10.2 移动互联网平台化产品方向的选择建议 414\n10.2.1 移动互联网产品特点 414\n10.2.2 移动互联网产品方向 415\n10.3 移动互联网平台化产品实战 416\n10.3.1 产品的选型、构思和策划 416\n10.3.2 技术选型 417\n10.3.3 产品技术架构 419\n10.3.4 服务器端技术的实现 424\n10.3.4.1 预备知识 424\n10.3.4.2 创建DB 426\n10.3.4.3 实现Web端 431\n10.3.4.4 实现管理端 443\n10.3.4.5 实现API 446\n10.3.5 应用部署 453\n10.3.6 接口文档撰写 457\n10.3.7 客户端技术实现 463\n10.4 移动互联平台化开发中需注意的问题 467\n10.5 小结 468\n第11章 传统互联网服务商迁移 469\n11.1 传统互联网服务商的特征及其移动市场分析 469\n11.2 手机壁纸服务需求分析和设计 469\n11.2.1 壁纸服务的发展概况 469\n11.2.2 Android壁纸服务的整体架构设计 470\n11.3 技术实现 472\n11.3.1 数据库实现存储 472\n11.3.2 服务器端技术实现 474\n11.3.3 客户端实现 478\n11.4 运行效果 490\n11.5 小结 491\n第12章 位置服务——随时随地的生活助手 492\n创作者一：飘信团队郑德舜\n长期从事嵌入式平台的研发工作。近两年来关注于Android平台研发，参与过若干个大型的软件研发项目，有丰富的项目实战经历和软件产品化经验。\n创作者二：飘信团队刘雪峰\n从事嵌入式平台的研究和开发工作，对各嵌入式各操作系统平台及通信产品有较好的掌握。具有丰富的项目开发及产品策划经验。\n创作者二：飘信团队吴婧婵\n致力于营销推广领域的工作。现从事房地产策划工作，独立负责项目的推广、运作。\n12.1 站在时代的壶口瀑布上——位置服务概述 492\n12.2 观念就是生产力——位置服务的前景和市场分析 493\n12.2.1 LBS行业发展概况 493\n12.2.2 LBS技术发展现状 494\n12.2.3 LBS技术发展趋势 495\n12.2.4 LBS行业发展可参考性分析 496\n12.3 做事，做市，做势——位置服务类应用实战 497\n12.3.1 思路决定出路——选择一个好的方向 497\n12.3.2 智慧与机遇的嫁接——架构和实施 500\n12.3.3 内涵与表象的兼顾——产品和包装 515\n12.4 慢工细磨，反复论证——产品过程需要注意的问题 516\n12.4.1 产品的概念 516\n12.4.2 产品的需求分析 518\n12.4.3 产品的设计 518\n12.4.4 找到产品的平衡点 518\n12.5 小结 518\n第13章 Android平台应用向OMS平台迁移 519\n13.1 OMS概述 519\n13.2 OMS特色 520\n13.2.1 OMS UI特色 520\n13.2.2 OMS业务与自带应用特色 527\n13.2.3 OMS SDK特色 528\n13.3 OMS和Android的关系 530\n13.4 普通Android应用如何向OMS平台迁移 531\n13.4.1 OMS开发平台搭建 531\n13.4.2 OMS应用和Android应用的差异 540\n13.4.3 普通Android应用向OMS平台迁移 541\n13.5 小结 542\n第14章 Android源码开发环境及源码编译 543\n14.1 快速构建Android源码开发环境 543\n14.1.1 快速安装Ubuntu 9.10或Ubuntu 10.04 543\n14.1.2 快速构建基于Ubuntu下的Android源码开发环境 546\n14.1.2.1 快速安装Android源码下载环境及编译环境 546\n14.1.2.2 下载Android源码 548\n14.2 Android源码编译技术 553\n14.2.1 常用Android 核心编译命令 553\n14.2.2 Android编译完成后的代码结构 555\n14.3 添加自己的应用程序到Android源码中 558\n14.3.1 添加自定义内置软件项目 558\n14.3.2 关于Android系统级应用使用第三方Jar包 560\n14.3.3 结合Eclipse编辑Android源码 561\n14.4 构建自己的Android桌面 563\n14.4.1 构建普通的HOME类型应用程序 564\n14.4.2 定制自己的Android HOME桌面 565\n14.5 小结 569\n第四篇 瞭望篇\n第15章 你真的准备好了吗 572\n15.1 Android 战场上的人们 572\n15.1.1 中国Android事业的发展 572\n15.1.2 Android在中国 573\n15.2 对于从业者的挑战与机遇 574\n15.2.1 对于从业者的挑战 574\n15.2.2 我们的机遇 575\n15.3 观念的转变 576\n15.4 小结 576\n第16章 Android行动是时候了 577\n16.1 智能手机系统的现况和发展趋势 577\n16.1.1 智能手机系统群雄逐鹿 577\n16.1.2 智能手机业发展趋势 581\n16.2 Android应用商店现况和发展趋势 584\n16.3 Android 从业者何去何从 587\n16.4 小结 588",
      "pages": "588",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s6189803.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s6189803.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s6189803.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4908228\/",
      "id": "4908228",
      "publisher": "电子工业出版社",
      "isbn10": "7121111551",
      "isbn13": "9787121111556",
      "title": "It's Android Time",
      "url": "http:\/\/api.douban.com\/v2\/book\/4908228",
      "alt_title": "",
      "author_intro": "",
      "summary": "It's Android Time！我们深信这个时代很快就会到来，我们需要做的就是早早进入这个行业，对其行业的趋势做相关的判断，对其中各式各样的产品及其方向都应该有所了解。\n本书对Android相关的产品定义和方向进行了详细的调查和分析，以实例的形式循序渐进地引导大家进一步了解Android的知识。\n本书深入Android底层讲述如何进行底层开发，同时会站在更高的层面和方向上看待和剖析Android及其开发相关的内容。本书总体的策划思路是：我们将现在看到的或者想到的产品方向进行汇总和归纳，评估每个方向的市场容量，然后选取市场容量足够大的方向用一个或者几个例子讲述如何在这个方向上进行产品的规划、设计、开发和发布等。我们力求选取的方向清晰，又保证选取的方向能被实践证明具有可操作性。",
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 16,
        "average": "7.7",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "林学森"
      ],
      "pubdate": "2014-5-1",
      "tags": [
        {
          "count": 44,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 14,
          "name": "内核原理",
          "title": "内核原理"
        },
        {
          "count": 5,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 3,
          "name": "linux",
          "title": "linux"
        },
        {
          "count": 3,
          "name": "操作系统",
          "title": "操作系统"
        },
        {
          "count": 2,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 1,
          "name": "[编程]",
          "title": "[编程]"
        },
        {
          "count": 1,
          "name": "rdd",
          "title": "rdd"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s27997453.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "第1篇　Android编译篇\n第1章　Android系统简介　2\n1．1　Android系统发展历程　2\n1．2　Android系统特点　4\n1．3　Android系统框架　8\n第2章　Android源码下载及编译　10\n2．1　Android源码下载指南　10\n2．1．1　基于Repo和Git的版本管理　10\n2．1．2　Android源码下载流程　11\n2．2　原生态系统编译指南　12\n2．2．1　建立编译环境　13\n2．2．2　编译流程　15\n2．3　定制产品的编译与烧录　17\n2．3．1　定制新产品　17\n2．3．2　Linux内核编译　21\n2．3．3　烧录　22\n2．4　Android系统映像文件　23\n2．4．1　boot．img　23\n2．4．2　ramdisk．img　25\n2．4．3　system．img　26\n2．5　OTA系统升级　26\n2．5．1　生成升级包　27\n2．5．2　获取升级包　28\n2．5．3　OTA升级-RecoveryMode　29\n2．6　Android反编译　31\n第3章　Android编译系统　34\n3．1　Makefile入门　34\n3．2　Android编译系统　35\n3．2．1　Makefile依赖树的概念　36\n3．2．2　树根节点droid　36\n3．2．3　main．mk解析　38\n3．2．4　droidcore节点　39\n3．2．5　dist_files　41\n3．2．6　Android．mk的编写规则　42\n第2篇　Android原理篇\n第4章　操作系统基础　48\n4．1　计算机体系结构(Computer Architecture)　48\n4．1．1　冯·诺依曼结构　48\n4．1．2　哈佛结构　48\n4．2　什么是操作系统　49\n4．3　进程间通信的经典实现　51\n4．3．1　共享内存(Shared Memory)　52\n4．3．2　管道(Pipe)　54\n4．3．3　Unix Domain Socket　55\n4．3．4　RPC(RemoteProcedure Calls)　58\n4．4　同步机制的经典实现　58\n4．4．1　信号量(Semaphore)　58\n4．4．2　Mutex　59\n4．4．3　管程(Monitor)　59\n4．4．4　同步范例　60\n4．5　Android中的同步机制　61\n4．5．1　进程间同步——Mutex　61\n4．5．2　条件判断——Condition　62\n4．5．3　“栅栏、障碍”——Barrier　64\n4．5．4　加解锁的自动化操作——Autolock　66\n4．6　操作系统内存管理基础　66\n4．6．1　虚拟内存(Virtual Memory)　66\n4．6．2　内存保护(Memory Protection)　69\n4．6．3　内存分配与回收　69\n4．6．4　进程间通信——mmap　70\n4．7　Android中的Low Memory Killer　71\n4．8　Android匿名共享内存(Anonymous Shared Memory)　74\n4．8．1　Ashmem设备　74\n4．8．2　Ashmem应用实例　78\n4．9　JNI　83\n4．9．1　Java函数的本地实现　83\n4．9．2　本地代码访问JVM　86\n4．10　学习Android系统的两条线索　88\n第5章　Android进程\/线程管理　89\n5．1　Android进程和线程　89\n5．2　Handler， MessageQueue，Runnable与Looper　95\n5．3　UI主线程——ActivityThread　102\n5．4　Thread类　105\n5．4．1　Thread类的内部原理　105\n5．4．2　Thread休眠和唤醒　106\n5．4．3　Thread实例　110\n5．5　Android应用程序的典型启动流程　112\n第6章　进程间通信——Binder　114\n6．1　智能指针　117\n6．1．1　智能指针的设计理念　117\n6．1．2　强指针sp　120\n6．1．3　弱指针wp　121\n6．2　进程间的数据传递载体——Parcel　128\n6．3　Binder驱动与协议　135\n6．3．1　打开Binder驱动——binder_open　136\n6．3．2　binder_mmap　137\n6．3．3　binder_ioctl　140\n6．4　“DNS”服务器——ServiceManager(Binder Server)　141\n6．4．1　ServiceManager的启动　141\n6．4．2　ServiceManager的构建　142\n6．4．3　获取ServiceManager服务——设计思考　147\n6．4．4　ServiceManagerProxy　151\n6．4．5　IBinder和BpBinder　153\n6．4．6　ProcessState和IPCThreadState　155\n6．5　Binder客户端——Binder Client　185\n6．6　Android接口描述语言——AIDL　190\n6．7　匿名Binder Server　202\n第7章　Android启动过程简析　205\n7．1　第一个系统进程(init)　205\n7．1．1　init．rc语法　205\n7．1．2　init．rc实例分析　208\n7．2　系统关键服务的启动简析　209\n7．2．1　Android的“DNS服务器”——ServiceManager　209\n7．2．2　“孕育”新的线程和进程——Zygote　209\n7．2．3　Android的“系统服务”——SystemServer　211\n第8章　管理Activity和组件运行状态的系统进程——Activity ManagerService (AMS)　213\n8．1　AMS功能概述　213\n8．2　管理当前系统中Activity状态——Activity Stack　215\n8．3　startActivity流程　217\n8．4　完成同一任务的“集合”——Activity Task　224\n8．4．1　“后进先出”——Last In，First Out　225\n8．4．2　管理Activity Task　226\n第9章　GUI系统之SurfaceFlinger　229\n9．1　OpenGL ES与EGL　229\n9．2　Android的硬件接口——HAL　231\n9．3　Android终端显示设备的“化身”——Gralloc与Framebuffer　233\n9．4　Android中的本地窗口　237\n9．4．1　FramebufferNativeWindow　239\n9．4．2　应用程序端的本地窗口——Surface　245\n9．5　BufferQueue详解　249\n9．5．1　BufferQueue的内部原理　249\n9．5．2　BufferQueue中的缓冲区分配　252\n9．5．3　应用程序的典型绘图流程　258\n9．5．4　应用程序与BufferQueue的关系　263\n9．6　SurfaceFlinger　267\n9．6．1　“黄油计划”——Project Butter　267\n9．6．2　SurfaceFlinger的启动　271\n9．6．3　接口的服务端——Client　275\n9．7　VSync的产生和处理　279\n9．7．1　VSync信号的产生和分发　279\n9．7．2　VSync信号的处理　285\n9．7．3　handleMessageTransaction　287\n9．7．4　“界面已经过时\/无效，需要重新绘制”——handleMessageInvalidate　291\n9．7．5　合成前的准备工作——preComposition　293\n9．7．6　可见区域——rebuildLayerStacks　295\n9．7．7　为“Composition”搭建环境——setUpHWComposer　299\n9．7．8　doDebugFlashRegions　301\n9．7．9　doComposition　302\n第10章　GUI系统之“窗口管理员”——WMS　309\n10．1　“窗口管理员”——WMS综述　310\n10．1．1　WMS的启动　312\n10．1．2　WMS的基础功能　312\n10．1．3　WMS的工作方式　313\n10．1．4　WMS，AMS与Activity间的联系　314\n10．2　窗口属性　316\n10．2．1　窗口类型与层级　316\n10．2．2　窗口策略(Window Policy)　320\n10．2．3　窗口属性(LayoutParams)　322\n10．3　窗口的添加过程　324\n10．3．1　系统窗口的添加过程　324\n10．3．2　Activity窗口的添加过程　333\n10．3．3　窗口添加实例　337\n10．4　Surface管理　340\n10．4．1　Surface申请流程(relayout)　341\n10．4．2　Surface的跨进程传递　344\n10．4．3　Surface的业务操作　347\n10．5　performLayoutAndPlaceSurfacesLockedInner　347\n10．6　窗口大小的计算过程　349\n10．7　启动窗口的添加与销毁　358\n10．7．1　启动窗口的添加　358\n10．7．2　启动窗口的销毁　362\n10．8　窗口动画　363\n10．8．1　窗口动画类型　364\n10．8．2　动画流程跟踪——WindowStateAnimator　365\n10．8．3　AppWindowAnimator　368\n10．8．4　动画的执行过程　370\n第11章　让你的界面炫彩起来的GUI系统之View体系　377\n11．1　应用程序中的View框架　377\n11．2　Activity中View Tree的创建过程　380\n11．3　在WMS中注册窗口　386\n11．4　ViewRoot的基本工作方式　388\n11．5　View Tree的遍历时机　389\n11．6　View Tree的遍历流程　393\n11．7　View和ViewGroup属性　402\n11．7．1　View的基本属性　402\n11．7．2　ViewGroup的属性　408\n11．7．3　View，ViewGroup和ViewParent　408\n11．7．4　Callback接口　408\n11．8　“作画“工具集——Canvas　411\n11．8．1　“绘制UI”——Skia　412\n11．8．2　数据中介——Surface．lockCanvas　413\n11．8．3　解锁并提交结果——unlockCanvasAndPost　417\n11．9　draw和onDraw　417\n11．10　View中的消息传递　423\n11．10．1　View中TouchEvent的投递流程　423\n11．10．2　ViewGoup中TouchEvent的投递流程　427\n11．11　View动画　430\n第12章　“问渠哪得清如许，为有源头活水来”——InputManagerService与输入事件　436\n12．1　事件的分类　436\n12．2　事件的投递流程　439\n12．2．1　InputManagerService　440\n12．2．2　InputReaderThread　441\n12．2．3　InputDispatcherThread　441\n12．2．4　ViewRootImpl对事件的派发　445\n第13章　应用不再同质化——音频系统　447\n13．1　音频基础　448\n13．1．1　声波　448\n13．1．2　音频的录制、存储与回放　448\n13．1．3　音频采样　449\n13．1．4　Nyquist–Shannon采样定律　451\n13．1．5　声道和立体声　451\n13．1．6　声音定级——Weber–Fechner law　452\n13．1．7　音频文件格式　453\n13．2　音频框架　454\n13．2．1　Linux中的音频框架　454\n13．2．2　TinyAlsa　456\n13．2．3　Android系统中的音频框架　457\n13．3　音频系统的核心——AudioFlinger　459\n13．3．1　AudioFlinger服务的启动和运行　460\n13．3．2　AudioFlinger对音频设备的管理　461\n13．3．3　PlaybackThread的循环主体　468\n13．3．4　AudioMixer　473\n13．4　策略的制定者——AudioPolicyService　475\n13．4．1　AudioPolicyService概述　475\n13．4．2　AudioPolicyService的启动过程　477\n13．4．3　AudioPolicyService与音频设备　480\n13．5　音频流的回放——AudioTrack　482\n13．5．1　AudioTrack应用实例　482\n13．5．2　AudioPolicyService的路由实现　489\n13．6　音频数据流　494\n13．6．1　AudioTrack中的音频流　495\n13．6．2　AudioTrack和AudioFlinger间的数据交互　498\n13．6．3　AudioMixer中的音频流　504\n13．7　音量控制　506\n13．8　音频系统的上层建筑　510\n13．8．1　从功能入手　510\n13．8．2　MediaPlayer　511\n13．8．3　MediaRecorder　514\n13．8．4　一个典型的多媒体录制程序　517\n13．8．5　MediaRecorder源码解析　518\n13．8．6　MediaPlayerService简析　520\n13．9　Android支持的媒体格式　523\n13．9．1　音频格式　523\n13．9．2　视频格式　523\n13．9．3　图片格式　524\n13．9．4　网络流媒体　524\n13．10　ID3信息简述　525\n13．11　Android多媒体文件管理　528\n13．11．1　MediaStore　529\n13．11．2　多媒体文件信息的存储“仓库”——MediaProvider　530\n13．11．3　多媒体文件管理中的“生产者”——MediaScanner　533\n第3篇　应用原理篇\n第14章　Intent的匹配规则　538\n14．1　Intent属性　538\n14．2　Intent的匹配规则　540\n14．3　Intent匹配源码简析　546\n第15章　APK应用程序的资源适配　551\n15．1　资源类型　552\n15．1．1　状态颜色资源　553\n15．1．2　图形资源　554\n15．1．3　布局资源　555\n15．1．4　菜单资源　556\n15．1．5　字符串资源　556\n15．1．6　样式资源　557\n15．1．7　其他资源　558\n15．1．8　属性资源　558\n15．2　提供可选资源　561\n15．3　最佳资源的匹配流程　565\n15．4　屏幕适配　567\n15．4．1　屏幕适配的重要参数　567\n15．4．2　如何适配多屏幕　569\n第16章　Android字符编码格式　572\n16．1　字符编码格式背景　572\n16．2　ISO\/IEC 8859　573\n16．3　ISO\/IEC 10646　573\n16．4　Unicode　574\n16．5　String类型　577\n16．5．1　构建String　578\n16．5．2　String对多种编码的兼容　579\n第17章　Android和OpenGL ES　583\n17．1　3D图形学基础　584\n17．1．1　计算机3D图形　584\n17．1．2　图形管线　585\n17．2　Android中的OpenGL ES简介　587\n17．3　图形渲染API—EGL　588\n17．3．1　EGL与OpenGL ES　588\n17．3．2　egl．cfg　588\n17．3．3　EGL接口解析　590\n17．3．4　EGL实例　593\n17．4　简化OpenGL ES开发——GLSurfaceView　593\n第18章　“系统的UI”——SystemUI　601\n18．1　SystemUI的组成元素　601\n18．2　SystemUI的实现　603\n18．3　Android壁纸资源——WallpaperService　610\n18．3．1　WallPaperManagerService　611\n18．3．2　ImageWallpaper　613\n第19章　Android常用的工具“小插件”——Widget机制　616\n19．1　“功能的提供者”——AppWidgetProvider　616\n19．2　AppWidgetHost　618\n第20章　Android应用程序的编译和打包　624\n20．1　“另辟蹊径”采用第三方工具——Ant　624\n20．2　通过命令行编译和打包APK　625\n20．3　APK编译过程详解　626\n20．4　信息安全基础概述　628\n20．5　应用程序签名　633\n20．6　应用程序签名源码简析　636\n第4篇　Android系统工具\n第21章　软件版本管理　642\n21．1　版本管理简述　642\n21．2　Git的安装　643\n21．2．1　Linux环境下安装Git　643\n21．2．2　Windows环境下安装Git　644\n21．3　Git的使用　644\n21．3．1　基础配置　644\n21．3．2　新建仓库　646\n21．3．3　文件状态　647\n21．3．4　忽略某些文件　649\n21．3．5　提交更新　649\n21．3．6　其他命令　650\n21．4　Git原理简析　650\n21．4．1　分布式版本系统的特点　651\n21．4．2　安全散列算法——SHA-1　652\n21．4．3　四个重要对象　653\n21．4．4　三个区域　657\n21．4．5　分支的概念与实例　658\n第22章　系统调试辅助工具　662\n22．1　万能模拟器——Emulator　662\n22．1．1　QEMU　662\n22．1．2　Android工程中的QEMU　667\n22．1．3　模拟器控制台(Emulator Console)　670\n22．1．4　实例：为Android模拟器添加串口功能　672\n22．2　此Android非彼Android　674\n22．3　快速建立与模拟器或真机的通信渠道——ADB　676\n22．3．1　ADB的使用方法　676\n22．3．2　ADB的组成元素　678\n22．3．3　ADB源代码解析　679\n22．3．4　ADB Protocol　684",
      "pages": "687",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s27997453.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s27997453.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s27997453.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/25921329\/",
      "id": "25921329",
      "publisher": "人民邮电出版社",
      "isbn10": "7115348413",
      "isbn13": "9787115348418",
      "title": "深入理解Android内核设计思想",
      "url": "http:\/\/api.douban.com\/v2\/book\/25921329",
      "alt_title": "",
      "author_intro": "林学森，香港中文大学计算机硕士，曾于多家跨国企业担任研发工作，并已在国内外会议、杂志上发表多篇一作文章。现为某行业领先企业Android软件部创始人、负责人。有丰富的技术研发与项目管理经验，擅长系统架构规划与核心问题分析。",
      "summary": "《深入理解Android内核设计思想》适用于Android 4.3以上的版本。全书从操作系统的基础知识入手，全面剖析进程\/线程、内存管理、Binder机制、GUI显示系统、多媒体管理、输入系统等核心技术在Android中的实现原理。书中讲述的知识点大部分来源于工程项目研发，因而具有较强的实用性，希望可以让读者“知其然，更知其所以然”。全书分为编译篇、系统原理篇、应用原理篇、系统工具篇共4篇22章，基本涵盖了参与Android开发所需具备的知识，并通过大量图片与实例来引导读者学习，以求尽量在源代码分析外为读者提供更易于理解的思维方式。\n《深入理解Android内核设计思想》既适合Android系统工程师，也适合于应用开发工程师来阅读提升Android开发能力。读者可以在《深入理解Android内核设计思想》潜移默化的学习过程中更深刻地理解Android系统，并将所学知识自然地应用到实际开发难题的解决中。",
      "price": "108.00"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 29,
        "average": "6.8",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "吴亚峰",
        "苏亚光"
      ],
      "pubdate": "2010-7",
      "tags": [
        {
          "count": 23,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 16,
          "name": "游戏开发",
          "title": "游戏开发"
        },
        {
          "count": 5,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 3,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 2,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 1,
          "name": "T.工业技术",
          "title": "T.工业技术"
        },
        {
          "count": 1,
          "name": "图书馆",
          "title": "图书馆"
        },
        {
          "count": 1,
          "name": "武汉时代",
          "title": "武汉时代"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s6190942.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "第1篇  Android游戏兵法——谋攻篇  第1章  Android平台简介    1.1  Android的来龙去脉    1.2  掀起Android的盖头来      1.2.1  选择Android的理由      1.2.2  Android的应用程序框架    1.3  Android开发环境的搭建      1.3.1  SDK的下载及安装      1.3.2  Eclipse集成开发环境的搭建      1.3.3  虚拟设备的创建与模拟器的运行      1.3.4  第一个Android程序      1.3.5  Android程序的监控与调试    1.4  小结  第2章  Android游戏开发之前台渲染    2.1  创建Android用户界面      2.1.1  布局管理      2.1.2  常用控件及其事件处理    2.2  图形与动画在Android中的实现      2.2.1  简单图形的绘制      2.2.2  贴图的艺术      2.2.3  自定义动画的播放    2.3  Android平台下的多媒体开发      2.3.1  音频的播放      2.3.2  视频的播放      2.3.3  Camera图像采集    2.4  小结  第3章  Android游戏开发之交互式通信    3.1  Android应用程序的基本组件      3.1.1  Activity组件      3.1.2  Service组件      3.1.3  Broadcast Receiver组件      3.1.4  Content Provider组件      3.1.5  AndroidManifest.xml文件简介    3.2  应用程序的内部通信      3.2.1  Handler类简介      3.2.2  使用Handler进行内部通信    3.3  应用程序组件之间的通信      3.3.1  Intent类简介      3.3.2  IntentFilter类简介      3.3.3  示例1：与Android系统组件通信      3.3.4  示例2：应用程序组件间通信示例Activity部分的开发      3.3.5  示例3：应用程序组件间通信示例Service部分的开发    3.4  小结  第4章  Android游戏开发之数据存储和传感器    4.1  数据存储在Android平台的实现      4.1.1  私有文件夹文件的写入与读取      4.1.2  读取Resources和Assets中的文件      4.1.3  轻量级数据库SQLite简介      4.1.4  SQLite的使用示例      4.1.5  Content Provider的使用      4.1.6  Preferences的使用    4.2  Android平台下传感器应用的开发      4.2.1  传感器应用的开发流程      4.2.2  常用传感器简介      4.2.3  传感器应用开发示例      4.2.4  使用SensorSimulator模拟传感器变化      4.2.5  使用新版本的API开发传感器应用    4.3  小结  第5章  Android游戏开发之网络编程  第6章  不一样的游戏，不一样的体验  第7章  游戏背后的数学与物理  第8章  游戏中的人工智能  第9章  游戏开发小秘技第2篇  Android游戏兵法——实战篇  第10章  体育游戏——疯狂足球  第11章  益智游戏——推箱子  第12章  滚屏动作游戏——太空保卫战  第13章  棋牌游戏——中国象棋人机对弈  第14章  D物理传感器游戏——小球快跑  第15章  冒险游戏——胜利大逃亡  第16章  策略游戏——回到战国",
      "pages": "500",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s6190942.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s6190942.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s6190942.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4910569\/",
      "id": "4910569",
      "publisher": "人民邮电出版社",
      "isbn10": "7115227500",
      "isbn13": "9787115227508",
      "title": "Android 2.0游戏开发实战宝典",
      "url": "http:\/\/api.douban.com\/v2\/book\/4910569",
      "alt_title": "",
      "author_intro": "吴亚峰，毕业于北京邮电大学，后留学澳大利亚卧龙岗大学取得硕士学位，1998年开始从事Java的开发，有十多年的Java开发经验与培训经验，主要的研究方向是Java EE。现在为Java EE独立软件开发工程师，同时兼任Sun授权、Java培训中心认证教师，为数十家著名企业培训了上千名软件开发人员，曾编写过《精通NetBeans——Java桌面、Web与企业级程序开发详解》及《Java SE 6.0编程指南》等畅销技术书籍。\n    苏亚光：JavaME独立软件工程师，有软件领域7年的从业经验，在软件开发和计算机教学方面有着丰富的经验。早期主要从事底层软件的设计与开发工作，现主要从事JavaEE企业应用程序的开发、设计等方面的工作。同时，在SOA领域也做了很多有益的工作。",
      "summary": "《Android 2.0游戏开发实战宝典》以Android手机游戏的开发为主题，结合真实的游戏案例向读者详细介绍了Android平台下游戏开发的整个流程，同时在游戏开发的介绍过程中还分享了笔者多年积累的开发技巧与经验。全书分为两篇，共16章，第1篇以简单易懂的实例为依托，详细介绍了Android的前台渲染技术、常用界面布局、网络开发、SQLite数据库的存取、传感器应用的开发以及游戏中经常使用的人工智能等相关知识。第2篇详细介绍了7个真实的游戏案例，涵盖了手机游戏中的7个不同种类，包括体育类、益智类、滚屏动作类、棋牌类、3D物理传感器类、冒险类以及策略类游戏等。每一个游戏都是按照实际的开发步骤进行介绍，并逐步地将Android手机游戏的整个开发过程展现在读者面前。同时在源代码中还包含了详细的注释，以尽量帮助读者掌握代码中的每一个细节。\n《Android 2.0游戏开发实战宝典》的讲述由浅入深，从游戏开发的基础知识到开发大型游戏，结构清晰、语言简洁，非常适合Android游戏初学者和Android游戏进阶开发者阅读参考。",
      "price": "79.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 30,
        "average": "7.9",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Reto Meier"
      ],
      "pubdate": "2008-11-24",
      "tags": [
        {
          "count": 20,
          "name": "android",
          "title": "android"
        },
        {
          "count": 6,
          "name": "google",
          "title": "google"
        },
        {
          "count": 5,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 4,
          "name": "Mobile",
          "title": "Mobile"
        },
        {
          "count": 1,
          "name": "不错",
          "title": "不错"
        },
        {
          "count": 1,
          "name": "wrox",
          "title": "wrox"
        },
        {
          "count": 1,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 1,
          "name": "Professional",
          "title": "Professional"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s4251758.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "432",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4251758.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4251758.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4251758.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/3092005\/",
      "id": "3092005",
      "publisher": "Wrox",
      "isbn10": "0470344717",
      "isbn13": "9780470344712",
      "title": "Professional Android Application Development",
      "url": "http:\/\/api.douban.com\/v2\/book\/3092005",
      "alt_title": "",
      "author_intro": "Professional Android Development is a developer's guide to building mobile applications using the Android SDK. This hands-on approach takes readers through a series of projects, each introducing a new Android platform feature and highlighting the techniques and best practices to get the most out of Android. Providing concise and compelling examples, Professional Android Development shows how to quickly construct real-world mobile applications for Android phones.\nWhile most readers will have experience using mobile phones and developing software, many will not have written applications specifically for mobiles. Professional Android Development begins by offering an introduction to the Android software stack and examining the philosophy behind creating robust, consistent, and appealing applications for mobile phones. From this common base readers progress to increasingly complex examples that illustrate the features available for constructing their mobile phone projects.\nReaders create full Android applications in a series of exercises designed to introduce new concepts, APIs, and Android functionality. The exercises begin as simple tasks that introduce readers to the anatomy, lifecycle, and UI metaphor of an Android application. Each step adds a particular piece of functionality to construct increasingly feature rich Android applications. Readers can use the exercises and the completed projects as a basis for developing their own Android applications.\nThe projects are written in Java using Eclipse with the Android plugin. While Android uses Java syntax, the power of the platform lies in the Android APIs. Many readers will already be familiar with Java and it's easy to learn, so readers with different development backgrounds should find the transition straightforward. Readers more comfortable with an alternative Java development environment should also find it easy to use their preferred tools.",
      "summary": "A hands-on guide to building mobile applications, \"Professional Android Application Development\" features concise and compelling examples that show you how to quickly construct real-world mobile applications for Android phones. Fully up-to-date for version 1.0 of the Android software development kit, it covers all the essential features, and explores the advanced capabilities of Android (including GPS, accelerometers, and background Services) to help you construct increasingly complex, useful, and innovative mobile applications for Android phones.This book includes: an introduction to mobile development, Android, and how to get started; an in-depth look at Android applications and their life cycle, the application manifest, Intents, and using external resources; details for creating complex and compelling user interfaces by using, extending, and creating your own layouts and Views and using Menus; a detailed look at data storage, retrieval, and sharing using preferences, files, databases, and Content Providers; instructions for making the most of mobile portability by creating rich map-based applications as well as using location-based services and the geocoder; and, a look at the power of background Services, using threads, and a detailed look at Notifications. This book also includes: coverage of Android's communication abilities including SMS, the telephony APIs, network management, and a guide to using Internet resources; details for using Android hardware, including media recording and playback, using the camera, accelerometers, and compass sensors; and, advanced development topics including security, IPC, advanced 2D \/ 3D graphics techniques, and user-hardware interaction. This book is for anyone interested in creating applications for the Android mobile phone platform. It includes information that will be valuable whether you're an experienced mobile developer or making your first foray, via Android, into writing mobile applications. It will give the grounding and knowledge you need to write applications using the current SDK, along with the flexibility to quickly adapt to future enhancements.",
      "price": "$44.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 19,
        "average": "7.6",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Onur Cinar"
      ],
      "pubdate": "2012-12-5",
      "tags": [
        {
          "count": 26,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 18,
          "name": "NDK",
          "title": "NDK"
        },
        {
          "count": 12,
          "name": "C++",
          "title": "C++"
        },
        {
          "count": 5,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 4,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 3,
          "name": "android",
          "title": "android"
        },
        {
          "count": 2,
          "name": "with",
          "title": "with"
        },
        {
          "count": 2,
          "name": "Pro",
          "title": "Pro"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s24601303.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "416",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s24601303.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s24601303.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s24601303.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/20285069\/",
      "id": "20285069",
      "publisher": "Apress",
      "isbn10": "1430248270",
      "isbn13": "9781430248279",
      "title": "Pro Android C++ with the NDK",
      "url": "http:\/\/api.douban.com\/v2\/book\/20285069",
      "alt_title": "",
      "author_intro": "Onur Cinar has over 17 years of experience in design, development, and management of large scale complex software projects, primarily in mobile and telecommunication space. His expertise spans  VoIP, video communication, mobile applications, grid computing, and networking technologies on diverse platforms. He has been actively working with Android platform since its beginning.  He has a Bachelor of Science degree in Computer Science from Drexel University in Philadelphia, PA, United States. He is currently working at Skype as the Sr. Product Engineering Manager for Skype client on Android platform",
      "summary": "Android is one of the major players in the mobile phone market. Android is a mobile platform that is built on the top of Linux operating system. The native-code support on Android offers endless opportunities to application developers, not limited the functionality that is provided by Android framework. Pro Android C++ with the NDK Native Development Kit) is an advanced tutorial and professional reference for today's more sophisticated app developers now porting, developing or employing C++ and other native code to integrate into the Android platform to run more graphically intense apps, more sophisticated game apps and better performing apps in general.\nIntroduces the Android platform, and getting up to speed with the Android NDK, and exploring the APIs that are provided in native space.\nGives an overview of Java Native Interface (JNI), native multithreading,  the C++ Standard Template Library (STL), and NEON\/SIMD optimization from an advanced perspective, with tips and recommendations.\nUsing a native-code (C\/C++) game app case study, this book explores tools for troubleshooting, debugging, analyzing memory issues, unit testing, unit test code coverage, performance measurement, on native applications, as well as integrating  the Android NDK toolchain into existing Autoconf, Makefile, CMake, or JAM based build systems.\nWhat you’ll learn\nWhat is the Android platform, and getting up to speed with the Android NDK\nWhat are the Android NDK APIs including Native Activity support, OpenGL ES, OpenSL ES, OpenMAX AL, JNI Graphics, and Sensor APIs.\nHow to use Java Native Interface (JNI), Simplified Wrapper and Interface Generator (SWIG) to automatically generate the JNI code to connect native-code to the Java world.\nWhat are and how to use C++ and  the Standard Template Library (STL)\nHow to do multithreading through POSIX Threads How to optimize code through NEON\/SIMD, compiler vectorization, and intrinsics\nHow to debug through GDB, DDD, and the Eclipse Debugger How to analyze memory through Valgrind, Electric Fence, Memwatch, YAMC\nHow to measure App performance through GProf\nHow to do unit testing and code coverage through GCov\nHow to use and integrate the Android NDK toolchain into existing build systems such as Autoconf, Makefiles, CMake, and JAM\nWho this book is for\nThis book is for software professionals who are interested in leveraging the Android NDK to port their existing native-code app, such as C++, to the Android platform, as well as existing Android developers who are interested in improving their apps overall performance by utilizing native-code.",
      "price": "USD 49.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 40,
        "average": "8.7",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "任玉刚"
      ],
      "pubdate": "2015-9-1",
      "tags": [
        {
          "count": 113,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 28,
          "name": "进阶",
          "title": "进阶"
        },
        {
          "count": 27,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 22,
          "name": "Android进阶",
          "title": "Android进阶"
        },
        {
          "count": 10,
          "name": "技术",
          "title": "技术"
        },
        {
          "count": 6,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 4,
          "name": "注重思想，提升能力",
          "title": "注重思想，提升能力"
        },
        {
          "count": 4,
          "name": "Programming",
          "title": "Programming"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s28283341.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "第1章  Activity的生命周期和启动模式 \/ 1\n1.1  Activity的生命周期全面分析 \/ 1\n1.1.1  典型情况下的生命周期分析 \/ 2\n1.1.2  异常情况下的生命周期分析 \/ 8\n1.2  Activity的启动模式 \/ 16\n1.2.1  Activity的LaunchMode \/ 16\n1.2.2  Activity的Flags \/ 27\n1.3  IntentFilter的匹配规则 \/ 28\n第2章  IPC机制 \/ 35\n2.1  Android IPC简介 \/ 35\n2.2  Android中的多进程模式 \/ 36\n2.2.1  开启多进程模式 \/ 36\n2.2.2  多进程模式的运行机制 \/ 39\n2.3  IPC基础概念介绍 \/ 42\n2.3.1  Serializable接口 \/ 42\n2.3.2  Parcelable接口 \/ 45\n2.3.3  Binder \/ 47\n2.4  Android中的IPC方式 \/ 61\n2.4.1  使用Bundle \/ 61\n2.4.2  使用文件共享 \/ 62\n2.4.3  使用Messenger \/ 65\n2.4.4  使用AIDL \/ 71\n2.4.5  使用ContentProvider \/ 91\n2.4.6  使用Socket \/ 103\n2.5  Binder连接池 \/ 112\n2.6  选用合适的IPC方式 \/ 121\n第3章  View的事件体系 \/ 122\n3.1  View基础知识 \/ 122\n3.1.1  什么是View \/ 123\n3.1.2  View的位置参数 \/ 123\n3.1.3  MotionEvent和TouchSlop \/ 125\n3.1.4  VelocityTracker、GestureDetector和Scroller \/ 126\n3.2  View的滑动 \/ 129\n3.2.1  使用scrollTo\/scrollBy \/ 129\n3.2.2  使用动画 \/ 131\n3.2.3  改变布局参数 \/ 133\n3.2.4  各种滑动方式的对比 \/ 133\n3.3  弹性滑动 \/ 135\n3.3.1  使用Scroller \/ 136\n3.3.2  通过动画 \/ 138\n3.3.3  使用延时策略 \/ 139\n3.4  View的事件分发机制 \/ 140\n3.4.1  点击事件的传递规则 \/ 140\n3.4.2  事件分发的源码解析 \/ 144\n3.5  View的滑动冲突 \/ 154\n3.5.1  常见的滑动冲突场景 \/ 155\n3.5.2  滑动冲突的处理规则 \/ 156\n3.5.3  滑动冲突的解决方式 \/ 157\n第4章  View的工作原理 \/ 174\n4.1  初识ViewRoot和DecorView \/ 174\n4.2  理解MeasureSpec \/ 177\n4.2.1  MeasureSpec \/ 177\n4.2.2  MeasureSpec和LayoutParams的对应关系 \/ 178\n4.3  View的工作流程 \/ 183\n4.3.1  measure过程 \/ 183\n4.3.2  layout过程 \/ 193\n4.3.3  draw过程 \/ 197\n4.4  自定义View \/ 199\n4.4.1  自定义View的分类 \/ 200\n4.4.2  自定义View须知 \/ 201\n4.4.3  自定义View示例 \/ 202\n4.4.4  自定义View的思想 \/ 217\n第5章  理解RemoteViews \/ 218\n5.1  RemoteViews的应用 \/ 218\n5.1.1  RemoteViews在通知栏上的应用 \/ 219\n5.1.2  RemoteViews在桌面小部件上的应用 \/ 221\n5.1.3  PendingIntent概述 \/ 228\n5.2  RemoteViews的内部机制 \/ 230\n5.3  RemoteViews的意义 \/ 239\n第6章  Android的Drawable \/ 243\n6.1  Drawable简介 \/ 243\n6.2  Drawable的分类 \/ 244\n6.2.1  BitmapDrawable \/ 244\n6.2.2  ShapeDrawable \/ 247\n6.2.3  LayerDrawable \/ 251\n6.2.4  StateListDrawable \/ 253\n6.2.5  LevelListDrawable \/ 255\n6.2.6  TransitionDrawable \/ 256\n6.2.7  InsetDrawable \/ 257\n6.2.8  ScaleDrawable \/ 258\n6.2.9  ClipDrawable \/ 260\n6.3  自定义Drawable \/ 262\n第7章  Android动画深入分析 \/ 265\n7.1  View动画 \/ 265\n7.1.1  View动画的种类 \/ 265\n7.1.2  自定义View动画 \/ 270\n7.1.3  帧动画 \/ 272\n7.2  View动画的特殊使用场景 \/ 273\n7.2.1  LayoutAnimation \/ 273\n7.2.2  Activity的切换效果 \/ 275\n7.3  属性动画 \/ 276\n7.3.1  使用属性动画 \/ 276\n7.3.2  理解插值器和估值器 \/ 280\n7.3.3  属性动画的监听器 \/ 282\n7.3.4  对任意属性做动画 \/ 282\n7.3.5  属性动画的工作原理 \/ 288\n7.4  使用动画的注意事项 \/ 292\n第8章  理解Window和WindowManager \/ 294\n8.1  Window和WindowManager \/ 294\n8.2  Window的内部机制 \/ 297\n8.2.1  Window的添加过程 \/ 298\n8.2.2  Window的删除过程 \/ 301\n8.2.3  Window的更新过程 \/ 303\n8.3  Window的创建过程 \/ 304\n8.3.1  Activity的Window创建过程 \/ 304\n8.3.2  Dialog的Window创建过程 \/ 308\n8.3.3  Toast的Window创建过程 \/ 311\n第9章  四大组件的工作过程 \/ 316\n9.1  四大组件的运行状态 \/ 316\n9.2  Activity的工作过程 \/ 318\n9.3  Service的工作过程 \/ 336\n9.3.1  Service的启动过程 \/ 336\n9.3.2  Service的绑定过程 \/ 344\n9.4  BroadcastReceiver的工作过程 \/ 352\n9.4.1  广播的注册过程 \/ 353\n9.4.2  广播的发送和接收过程 \/ 356\n9.5  ContentProvider的工作过程 \/ 362\n第10章  Android的消息机制 \/ 372\n10.1  Android的消息机制概述 \/ 373\n10.2  Android的消息机制分析 \/ 375\n10.2.1  ThreadLocal的工作原理 \/ 375\n10.2.2  消息队列的工作原理 \/ 380\n10.2.3  Looper的工作原理 \/ 383\n10.2.4  Handler的工作原理 \/ 385\n10.3  主线程的消息循环 \/ 389\n第11章  Android的线程和线程池 \/ 391\n11.1  主线程和子线程 \/ 392\n11.2  Android中的线程形态 \/ 392\n11.2.1  AsyncTask \/ 392\n11.2.2  AsyncTask的工作原理 \/ 395\n11.2.3  HandlerThread \/ 402\n11.2.4  IntentService \/ 403\n11.3  Android中的线程池 \/ 406\n11.3.1  ThreadPoolExecutor \/ 407\n11.3.2  线程池的分类 \/ 410\n第12章  Bitmap的加载和Cache \/ 413\n12.1  Bitmap的高效加载 \/ 414\n12.2  Android中的缓存策略 \/ 417\n12.2.1  LruCache \/ 418\n12.2.2  DiskLruCache \/ 419\n12.2.3  ImageLoader的实现 \/ 424\n12.3  ImageLoader的使用 \/ 441\n12.3.1  照片墙效果 \/ 441\n12.3.2  优化列表的卡顿现象 \/ 446\n第13章  综合技术 \/ 448\n13.1  使用CrashHandler来获取应用的crash信息 \/ 449\n13.2  使用multidex来解决方法数越界 \/ 455\n13.3  Android的动态加载技术 \/ 463\n13.4  反编译初步 \/ 469\n13.4.1  使用dex2jar和jd-gui反编译apk \/ 470\n13.4.2  使用apktool对apk进行二次打包 \/ 470\n第14章  JNI和NDK编程 \/ 473\n14.1  JNI的开发流程 \/ 474\n14.2  NDK的开发流程 \/ 478\n14.3  JNI的数据类型和类型签名 \/ 484\n14.4  JNI调用Java方法的流程 \/ 486\n第15章  Android性能优化 \/ 489\n15.1  Android的性能优化方法 \/ 490\n15.1.1  布局优化 \/ 490\n15.1.2  绘制优化 \/ 493\n15.1.3  内存泄露优化 \/ 493\n15.1.4  响应速度优化和ANR日志分析 \/ 496\n15.1.5  ListView和Bitmap优化 \/ 501\n15.1.6  线程优化 \/ 501\n15.1.7  一些性能优化建议 \/ 501\n15.2  内存泄露分析之MAT工具 \/ 502\n15.3  提高程序的可维护性 \/ 506",
      "pages": "524",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s28283341.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s28283341.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s28283341.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/26599538\/",
      "id": "26599538",
      "publisher": "电子工业出版社",
      "isbn10": "7121269392",
      "isbn13": "9787121269394",
      "title": "Android开发艺术探索",
      "url": "http:\/\/api.douban.com\/v2\/book\/26599538",
      "alt_title": "",
      "author_intro": "",
      "summary": "《Android开发艺术探索》是一本Android进阶类书籍，采用理论、源码和实践相结合的方式来阐述高水准的Android应用开发要点。《Android开发艺术探索》从三个方面来组织内容。第一，介绍Android开发者不容易掌握的一些知识点；第二，结合Android源代码和应用层开发过程，融会贯通，介绍一些比较深入的知识点；第三，介绍一些核心技术和Android的性能优化思想。\n《Android开发艺术探索》侧重于Android知识的体系化和系统工作机制的分析，通过《Android开发艺术探索》的学习可以极大地提高开发者的Android技术水平，从而更加高效地成为高级开发者。而对于高级开发者来说，仍然可以从《Android开发艺术探索》的知识体系中获益。",
      "price": "79.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 6,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Joshua J. Drake",
        "Zach Lanier",
        "Collin Mulliner",
        "Pau Oliva Fora",
        "Stephen A. Ridley",
        "Georg Wicherski"
      ],
      "pubdate": "2014-3-31",
      "tags": [
        {
          "count": 20,
          "name": "android",
          "title": "android"
        },
        {
          "count": 16,
          "name": "security",
          "title": "security"
        },
        {
          "count": 13,
          "name": "安全",
          "title": "安全"
        },
        {
          "count": 7,
          "name": "Hacking",
          "title": "Hacking"
        },
        {
          "count": 7,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 4,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 4,
          "name": "Security",
          "title": "Security"
        },
        {
          "count": 2,
          "name": "英文版",
          "title": "英文版"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s28348441.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "576",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s28348441.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s28348441.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s28348441.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/22024053\/",
      "id": "22024053",
      "publisher": "Wiley",
      "isbn10": "111860864X",
      "isbn13": "9781118608647",
      "title": "Android Hacker's Handbook",
      "url": "http:\/\/api.douban.com\/v2\/book\/22024053",
      "alt_title": "",
      "author_intro": "",
      "summary": "The first comprehensive guide to discovering and preventing attacks on the Android OS  As the Android operating system continues to increase its share of the smartphone market, smartphone hacking remains a growing threat. Written by experts who rank among the world's foremost Android security researchers, this book presents vulnerability discovery, analysis, and exploitation tools for the good guys. Following a detailed explanation of how the Android OS works and its overall security architecture, the authors examine how vulnerabilities can be discovered and exploits developed for various system components, preparing you to defend against them. If you are a mobile device administrator, security researcher, Android app developer, or consultant responsible for evaluating Android security, you will find this guide is essential to your toolbox. A crack team of leading Android security researchers explain Android security risks, security design and architecture, rooting, fuzz testing, and vulnerability analysis Covers Android application building blocks and security as well as debugging and auditing Android apps Prepares mobile device administrators, security researchers, Android app developers, and security consultants to defend Android systems against attack  Android Hacker's Handbook  is the first comprehensive resource for IT professionals charged with smartphone security.",
      "price": "USD 50.00"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 15,
        "average": "7.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Ed Burnette"
      ],
      "pubdate": "2011-6",
      "tags": [
        {
          "count": 21,
          "name": "android",
          "title": "android"
        },
        {
          "count": 9,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 5,
          "name": "mobile",
          "title": "mobile"
        },
        {
          "count": 3,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 2,
          "name": "2011",
          "title": "2011"
        },
        {
          "count": 2,
          "name": "计算机技术",
          "title": "计算机技术"
        },
        {
          "count": 1,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 1,
          "name": "第3版",
          "title": "第3版"
        }
      ],
      "origin_title": "Hello, Android : Introducing Google's Mobile Development Platform",
      "image": "https://img1.doubanio.com\/mpic\/s7634743.jpg",
      "binding": "平装",
      "translator": [
        "田俊静",
        "张　波",
        "黄湘情"
      ],
      "catalog": "第一部  分Android简介第1章  快速入门  2  1.1  安装工具  2    1.1.1  Java 5.0+  2    1.1.2 Eclipse  3    1.1.3  AndroidSDK启动程序软件包  4    1.1.4  AndroidSDK组件  4    1.1.5  Eclipse插件  5  1.2  创建第一个程序  7  1.3  在模拟器上运行程序  8    1.3.1  创建一个AVD  8    1.3.2  再试一次  10  1.4  在手机上运行程序  10  1.5  快速阅读指南  11第2章  基本概念  12  2.1  Android的系统架构  12    2.1.1  Linux内核  13    2.1.2  本机库  13    2.1.3  Android运行时  14    2.1.4  应用程序框架  15    2.1.5  应用程序和小部件  15  2.2  它还活着  16    2.2.1  进程不等于应用程序  17    2.2.2  应用程序生命周期  17  2.3  构建块  19    2.3.1  活动  19    2.3.2  意图  19    2.3.3  服务  19    2.3.4  内容提供者  20  2.4  使用资源  20  2.5  安全性  20  2.6  快速阅读指南  21第二部分 Android基础知识第3章  设计用户界面  24  3.1  数独游戏简介  24  3.2  声明性设计  25  3.3  创建启动界面  26  3.4  使用替代资源  33  3.5  实现About对话框  35  3.6  应用主题  39  3.7  添加菜单  41  3.8  添加设置  42  3.9  开始新游戏  44  3.10  调试程序  45    3.10.1  利用日志消息调试程序  46    3.10.2  利用调试器调试程序  47  3.11  退出游戏  47  3.12  快速阅读指南  47第4章  绘制2D图形  49  4.1  Android图形基础  49    4.1.1  Color类  49    4.1.2  Paint类  50    4.1.3  Canvas类  50    4.1.4  Path类  51    4.1.5  Drawable类  52  4.2  在数独程序中添加图形  53    4.2.1  开始游戏  54    4.2.2  定义Game类  54    4.2.3  定义PuzzleView类  56    4.2.4  绘制游戏盘面  57    4.2.5  绘制数字  60  4.3  处理输入  61    4.3.1  定义和更新选定区域  61    4.3.2  输入数字  63    4.3.3  增加提示  64    4.3.4  抖动屏幕  65  4.4  其他问题  66    4.4.1  创建软键盘  66    4.4.2  实现游戏逻辑  71    4.4.3  其他功能  73  4.5  更多改进  74  4.6  快速阅读指南  75第5章  多媒体  76  5.1  播放音频  76  5.2  播放视频  81  5.3  为数独游戏配上音乐  85  5.4  快速阅读指南  88第6章  存储本地数据  89  6.1  为数独游戏添加选项  89  6.2  继续玩前一个游戏  91  6.3  记住当前位置  92  6.4  访问内部文件系统  94  6.5  访问SD卡  95  6.6  快速阅读指南  96第三部分  高级主题第7章  互联的世界  98  7.1  通过意图实现浏览  99  7.2  利用视图打开网页  102  7.3  JavaScript与Java通信  106  7.4  使用Web服务  112  7.5  快速阅读指南  122第8章  定位与环境感知  124  8.1  位置，位置，位置  124    8.1.1  我在哪里  125    8.1.2  更新位置  127    8.1.3  模拟说明  130  8.2  充分利用传感器  130    8.2.1  了解传感器  130    8.2.2  解析传感器的读数  131    8.2.3  模拟说明  132  8.3  地图功能  133    8.3.1  嵌入MapView  133    8.3.2  准备就绪  136    8.3.3  模拟说明  137  8.4  快速阅读指南  137第9章  SQL实战  138  9.1  SQLite简介  138  9.2  SQL基础  139    9.2.1  DDL语句  140    9.2.2  修改语句  140    9.2.3  查询语句  140  9.3  你好，数据库  141    9.3.1  使用SQLiteOpenHelper  142    9.3.2  定义主程序  143    9.3.3  添加一行  145    9.3.4  运行一个查询  145    9.3.5  显示查询结果  146  9.4  数据绑定  147  9.5  使用ContentProvider  150    9.5.1  更改主程序  152    9.5.2  添加一行  152    9.5.3  运行一个查询  152  9.6  实现ContentProvider  153  9.7  快速阅读指南  154第10 章  利用OpenGL实现3D图形  155  10.1  理解3D图形  155  10.2  OpenGL简介  156  10.3  构建一个OpenGL程序  157  10.4  渲染场景  158  10.5  构建一个模型  162  10.6  光线、相机  165  10.7  动作  166  10.8  应用纹理  167  10.9  透明效果  169  10.10  测量平滑度  170  10.11  快速阅读指南  171第四部分  下一代产品第11章  多点触控  174  11.1  多点触控概述  174  11.2  创建触控示例  176  11.3  了解触控事件  178  11.4  设置图像变换  180  11.5  实现拖动动作  181  11.6  实现捏压缩放动作  182    11.6.1  两个点之间的距离  183    11.6.2  两个点的中点  183  11.7  快速阅读指南  184第12章  主界面  185  12.1  Hello，Widget  185    12.1.1  创建第一个小部件程序  185    12.1.2  调用所有小部件  187    12.1.3  拉伸以适合屏幕尺寸  188    12.1.4  使用和扩展  189    12.1.5  运行小部件  189    12.1.6  最新进展  190    12.1.7  快乐之旅  192  12.2  动态壁纸  192    12.2.1  创建壁纸项目  193    12.2.2  服务简介  195    12.2.3  创建一个绘图引擎  196    12.2.4  重用OpenGL代码  197    12.2.5  创建和销毁引擎  198    12.2.6  管理Surface  199    12.2.7  可视化壁纸  201    12.2.8  响应用户的输入  201  12.3  快速阅读指南  203第13章  一次编写，到处测试  204  13.1  启动模拟器  204  13.2  创建适用于多个版本的程序  205  13.3  AndroidAPI的发展  206  13.4  大量错误  212  13.5  各种屏幕尺寸  213  13.6  在SD卡上安装程序  214  13.7  快速阅读指南  215第14章  发布到AndroidMarket  216  14.1  准备工作  216  14.2  签名  217  14.3  发布  218  14.4  更新  219  14.5  结语  220第五部分  附录附录A  Java与Android：语言及其API  222附录B  参考书目  226",
      "pages": "225",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s7634743.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s7634743.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s7634743.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6428936\/",
      "id": "6428936",
      "publisher": "人民邮电",
      "isbn10": "7115252971",
      "isbn13": "9787115252975",
      "title": "Android基础教程（第3版·修订版）",
      "url": "http:\/\/api.douban.com\/v2\/book\/6428936",
      "alt_title": "Hello, Android : Introducing Google's Mobile Development Platform",
      "author_intro": "Ed Burnette 资深软件技术专家。拥有20多年软件开发经验。SAS高级计算机实验室的联合创始人和高级研究员。他是Planet Android(www.planetandroid.com)网站的创办人和ZDNet的专栏作家。除本书外，他还出版了Google Web Toolkit：Faking the Pain out of Ajex和Eclipse IDE Pocket Guide等著作。",
      "summary": "《Android基础教程(第3版·修订版)》，本书是一部关于Android开发的基础教程，采用Pragmatic系列图书一贯由浅入深、循序渐进的方式讲解了Android程序设计的核心概念和技术。",
      "price": "43.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 23,
        "average": "6.3",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Jason Ostrander"
      ],
      "pubdate": "2012-10",
      "tags": [
        {
          "count": 31,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 12,
          "name": "UI",
          "title": "UI"
        },
        {
          "count": 7,
          "name": "UI基础教程",
          "title": "UI基础教程"
        },
        {
          "count": 3,
          "name": "交互设计",
          "title": "交互设计"
        },
        {
          "count": 1,
          "name": "编程\/算法",
          "title": "编程\/算法"
        },
        {
          "count": 1,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 1,
          "name": "有电子版",
          "title": "有电子版"
        },
        {
          "count": 1,
          "name": "技术",
          "title": "技术"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s23009039.jpg",
      "binding": "平装",
      "translator": [
        "刘文斌"
      ],
      "catalog": "",
      "pages": "242",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s23009039.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s23009039.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s23009039.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/19985909\/",
      "id": "19985909",
      "publisher": "人民邮电出版社",
      "isbn10": "7115292825",
      "isbn13": "9787115292827",
      "title": "Android UI基础教程",
      "url": "http:\/\/api.douban.com\/v2\/book\/19985909",
      "alt_title": "",
      "author_intro": "",
      "summary": "《Android UI基础教程》介绍了Android编程专家Jason Ostrander将展示如何为Android应用程序创建用户界面。《Android UI基础教程》从最基础的概念开始讲起，如视图、活动等，一直深入到诸如使用RenderScript的高级绘图技术，几乎涵盖了为应用程序创建UI的所有内容。作者在《Android UI基础教程》中不仅会介绍概念和技术，还会传授创建灵活布局的最佳实践，并帮助读者优化UI，让应用程序运行流畅，从而拥有最佳的性能。《Android UI基础教程》不仅会告诉读者创建灵活布局的最佳方法，还会帮助开发者优化已有的UI界面，从而使他们的应用运行更加流畅，拥有最佳性能。学习完《Android UI基础教程》，读者可以自己创建一个成功的Android应用的UI界面。",
      "price": "45.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 13,
        "average": "7.3",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "(美)达西\/\/康德尔|译者:李卉\/\/张魏\/\/祝延彬"
      ],
      "pubdate": "2011-7",
      "tags": [
        {
          "count": 23,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 9,
          "name": "移动开发",
          "title": "移动开发"
        },
        {
          "count": 3,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 3,
          "name": "教材",
          "title": "教材"
        },
        {
          "count": 3,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 3,
          "name": "google",
          "title": "google"
        },
        {
          "count": 2,
          "name": "android",
          "title": "android"
        },
        {
          "count": 1,
          "name": "二手",
          "title": "二手"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s6538026.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第一部分  Android概览    第1章  Android简介    第2章  搭建你的Android开发环境    第3章  编写    第一个Android应用程序 第二部分  Android应用程序设计精髓    第4章  剖析Android应用程序    第5章  使用Android Manifest文件定义应用程序    第6章  管理应用程序资源第三部分  Android用户界面设计精髓    第7章  探索用户界面屏幕元素    第8章  使用布局设计用户界面    第9章  绘图与动画第四部分  使用常用Android API    第10章  使用Android数据和存储API    第11章  使用内容提供器在应用程序间共享数据    第12章  使用Android网络API    第13章  使用Android Web API    第14章  使用位置服务API    第15章  使用Android多媒体API    第16章  使用Android电话API    第17章  通过OpenGL ES使用Android 3D图形    第18章  使用Android NDK    第19章  使用Android可选硬件API第五部分  更多Android应用程序设计原则    第20章  使用通知    第21章  使用服务    第22章  扩展Android应用程序    第23章  用户账户管理与数据同步    第24章  处理高级用户输入    第25章  面向不同设备配置和语言第六部分  对外发布你的Android应用程序    第26章  移动软件开发过程    第27章  设计和开发“防弹”Android应用程序    第28章  测试Android应用程序    第29章  销售你的Android应用程序第七部分  附录附录A  Android模拟器快速入门附录B  Android DDMS快速入门附录C  Android调试桥快速入门附录D  Eclipse技巧和诀窍附录E  SQLite快速入门",
      "pages": "508",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s6538026.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s6538026.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s6538026.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6525423\/",
      "id": "6525423",
      "publisher": "人民邮电",
      "isbn10": "7115251819",
      "isbn13": "9787115251817",
      "title": "Android移动开发一本就够",
      "url": "http:\/\/api.douban.com\/v2\/book\/6525423",
      "alt_title": "",
      "author_intro": "Shane Conder拥有丰富的开发经验，在过去的10年中，他把主要精力集中在移动和嵌入式开发领域，迄今已设计并开发了基于BREW、J2ME、Windows Mobile和Android的诸多商业软件。Shane撰写了大量关于移动通信行业和评估移动开发平台的文章，这些文章发表在他的个人技术博客上，在领域内受到了广泛的关注。Shane获得了加州大学授予的计算机科学学士学位。\n    Lauren Darcey\n\n    Lauren Darcey是一家专注于移动开发的软件公司的技术主管，所涉及的技术包括Android、iPhone、Blackberry、Palm Pre、BREW和J2ME，还包括咨询服务。拥有20年专业软件产品研发经验的Lauren被公认为企业架构和商业级移动应用开发的权威。Lauren获得了加州大学圣克鲁兹分校授予的计算机科学专业学士学位。",
      "summary": "《Android移动开发一本就够》由Lauren Darcey、Schane Conder所著\n，涵盖了Android开发从概念、技术到市场推广应用的全部话题，内容包括\n：Android概览、Android应用程序设计精髓、Android用户界面设计精髓、\n常用Android API、更多Android应用程序设计原则、对外发布你的Android\n应用程序和附录7个部分。附录还包含了Android开发常用工具(如模拟器、\nDDMS、调试桥、Eclipse和SQLite等)的使用指南。\n    《Android移动开发一本就够》不仅适合Android应用程序开发人员阅读\n，还能为QA测试人员提供指导。另外《Android移动开发一本就够》还可以\n帮助项目经理更好地管理项目进程和项目团队，帮助市场推广人员更好地把\n握市场，创造令人瞩目的销售业绩。",
      "price": "75.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 14,
        "average": "7.3",
        "min": 0
      },
      "subtitle": "开发智能手机与平板电脑应用",
      "author": [
        "(美)李伟梦 著"
      ],
      "pubdate": "2012-12-1",
      "tags": [
        {
          "count": 19,
          "name": "android",
          "title": "android"
        },
        {
          "count": 8,
          "name": "android4",
          "title": "android4"
        },
        {
          "count": 7,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 7,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 2,
          "name": "计算机技术",
          "title": "计算机技术"
        },
        {
          "count": 2,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 2,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 1,
          "name": "京东",
          "title": "京东"
        }
      ],
      "origin_title": "Beginning Android 4 Application Development",
      "image": "https://img1.doubanio.com\/mpic\/s24174493.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "目    录\n\n第1章  Android编程入门\t1\n1.1  Android简介\t2\n1.1.1Android版本\t2\n1.1.2Android功能\t3\n1.1.3Android架构\t3\n1.1.4市场上的Android设备\t4\n1.1.5Android Market\t7\n1.1.6  Android开发社区\t7\n1.2  获得所需工具\t8\n1.2.1  Android SDK\t8\n1.2.2  安装Android SDK工具\t9\n1.2.3  配置Android SDK\nManager\t10\n1.2.4  Eclipse\t11\n1.2.5  Android开发工具\t12\n1.2.6  创建Android虚拟\n设备(AVD)\t14\n1.3  创建第一个Android应用\n程序\t17\n1.4  Android应用程序剖析\t24\n1.5  本章小结\t28\n第2章  活动、碎片和意图\t31\n2.1  理解活动\t31\n2.1.1  如何对活动应用样式\n和主题\t36\n2.1.2  隐藏活动标题\t37\n2.1.3  显示对话框窗口\t38\n2.1.4  显示进度对话框\t43\n2.1.5  显示更复杂的进度对话框\t46\n2.2  使用意图链接活动\t50\n2.2.1  解决意图筛选器的冲突\t54\n2.2.2  从意图返回结果\t56\n2.2.3  使用意图对象传递数据\t59\n2.3  碎片\t65\n2.3.1  动态添加碎片\t70\n2.3.2  碎片的生命周期\t72\n2.3.3  碎片之间进行交互\t76\n2.4  使用意图调用内置应用程序\t80\n2.4.1  理解意图对象\t85\n2.4.2  使用意图筛选器\t86\n2.4.3  添加类别\t91\n2.5  显示通知\t93\n2.6  本章小结\t98\n第3章  Android用户界面\t101\n3.1  了解屏幕的构成\t101\n3.1.1  视图和视图组\t102\n3.1.2  LinearLayout\t103\n3.1.3  AbsoluteLayout\t109\n3.1.4  TableLayout\t110\n3.1.5  RelativeLayout\t111\n3.1.6  FrameLayout\t113\n3.1.7  ScrollView\t115\n3.2  适应显示方向\t118\n3.2.1  锚定视图\t119\n3.2.2  调整大小和重新定位\t121\n3.3  管理屏幕方向的变化\t124\n3.3.1  配置改变时保持状态\n信息\t127\n3.3.2  检测方向改变\t128\n3.3.3  控制活动的方向\t129\n3.4  使用Action Bar\t130\n3.4.1  向Action Bar添加动作项\t132\n3.4.2  定制动作项和应用\n程序图标\t138\n3.5  以编程方式创建用户界面\t139\n3.6  侦听用户界面通知\t142\n3.6.1  重写活动中定义的方法\t142\n3.6.2  为视图注册事件\t146\n3.7  本章小结\t149\n第4章  使用视图设计用户界面\t151\n4.1  基本视图\t151\n4.1.1  TextView视图\t152\n4.1.2  Button、ImageButton、EditText、\nCheckBox、ToggleButton、\nRadioButton和RadioGroup\n视图\t152\n4.1.3  ProgressBar视图\t163\n4.1.4  AutoCompleteTextView\n视图\t169\n4.2  选取器视图\t171\n4.2.1  TimePicker视图\t171\n4.2.2  DatePicker视图\t176\n4.3  使用列表视图显示长列表\t183\n4.3.1  ListView视图\t183\n4.3.2  使用Spinner视图\t191\n4.4  了解特殊碎片\t194\n4.4.1  使用ListFragment\t194\n4.4.2  使用DialogFragment\t199\n4.4.3  使用PreferenceFragment\t202\n4.5  本章小结\t206\n第5章  使用视图显示图片和菜单\t209\n5.1  使用图像视图显示图片\t209\n5.1.1  Gallery和ImageView\n视图\t209\n5.1.2  ImageSwitcher\t217\n5.1.3  GridView\t222\n5.2  将菜单和视图一起使用\t225\n5.2.1  创建辅助方法\t226\n5.2.2  选项菜单\t228\n5.2.3  上下文菜单\t230\n5.3  其他一些视图\t233\n5.3.1  AnalogClock和DigitalClock\n视图\t233\n5.3.2  WebView\t234\n5.4  本章小结\t240\n第6章  数据持久化\t243\n6.1  保存和加载用户首选项\t243\n6.1.1 使用活动访问首选项\t244\n6.1.2  通过编程检索和修改首\n选项值\t250\n6.1.3  修改首选项文件的默认\n名称\t252\n6.2  将数据持久化到文件中\t254\n6.2.1  保存到内部存储器\t254\n6.2.2  保存到外部存储器\n(SD卡)\t259\n6.2.3  选择最佳存储选项\t262\n6.2.4  使用静态资源\t263\n6.3  创建和使用数据库\t264\n6.3.1  创建DBAdapter辅助类\t265\n6.3.2  以编程方式使用数据库\t270\n6.3.3  预创建数据库\t277\n6.4  本章小结\t281\n第7章  内容提供者\t283\n7.1  在Android中共享数据\t283\n7.2  使用内容提供者\t284\n7.2.1  预定义查询字符串常量\t289\n7.2.2  投影\t292\n7.2.3  筛选\t293\n7.2.4  排序\t294\n7.3  创建自己的内容提供者\t295\n7.4  使用内容提供者\t304\n7.5  本章小结\t309\n第8章  消息传递\t311\n8.1  SMS消息传递\t311\n8.1.1  以编程方式发送SMS\n消息\t312\n8.1.2  发送消息后获取反馈\t315\n8.1.3  使用意图发送SMS消息\t318\n8.1.4  接收SMS消息\t319\n8.1.5  说明和警告\t334\n8.2  发送电子邮件\t335\n8.3  本章小结\t338\n第9章  基于位置的服务\t339\n9.1  显示地图\t339\n9.1.1  创建项目\t340\n9.1.2  获取Maps API密钥\t340\n9.1.3  显示地图\t343\n9.1.4  显示缩放控件\t346\n9.1.5  改变视图\t349\n9.1.6  导航到特定位置\t350\n9.1.7  添加标记\t353\n9.1.8  获取触摸的位置\t356\n9.1.9  地理编码和反向地理\n编码\t358\n9.2  获取位置数据\t362\n9.3  监控一个位置\t371\n9.4  项目—创建一个位置跟踪\n应用程序\t372\n9.5  本章小结\t378\n第10章  联网\t381\n10.1  通过HTTP使用Web服务\t381\n10.1.1  下载二进制数据\t384\n10.1.2  下载文本内容\t390\n10.1.3  通过GET方法访问Web\n服务\t392\n10.2  使用JSON服务\t397\n10.3  套接字编程\t405\n10.4  本章小结\t414\n第11章  开发Android服务\t417\n11.1  创建自己的服务\t417\n11.1.1  在服务中执行长时间运行\n的任务\t421\n11.1.2  在服务中执行重复的\n任务\t426\n11.1.3  使用IntentService在单独的\n线程上执行异步任务\t430\n11.2  在服务和活动之间通信\t433\n11.3  将活动绑定到服务\t437\n11.4  理解线程\t442\n11.5  本章小结\t448\n第12章  发布Android应用程序\t451\n12.1  为发布做准备\t451\n12.1.1  版本化\t451\n12.1.2  对Android应用程序进行\n数字签名\t454\n12.2  部署APK文件\t459\n12.2.1  使用adb.exe工具\t459\n12.2.2  使用Web服务器\t461\n12.2.3  在Android Market上\n发布\t462\n12.3  本章小结\t467\n附录A  使用Eclipse进行Android\n开发\t469\n附录B  使用Android模拟器\t483\n附录C  练习答案\t595\n",
      "pages": "595",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s24174493.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s24174493.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s24174493.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/20368753\/",
      "id": "20368753",
      "publisher": "清华大学出版社",
      "isbn10": "7302301514",
      "isbn13": "9787302301516",
      "title": "Android 4编程入门经典",
      "url": "http:\/\/api.douban.com\/v2\/book\/20368753",
      "alt_title": "Beginning Android 4 Application Development",
      "author_intro": "作 者 简 介\nWei-Meng Lee是Developer Learning Solutions公司(www.learn2develop.net)的创始人和技术专家，这家技术公司专门从事最新移动技术的培训。Wei-Meng Lee具有多年的培训经验，他的培训课程特别强调实践学习法。这种动手学习编程的方法比通过阅读书籍、教程和文档来理解主题要容易得多。\nWei-Meng Lee还是Beginning iOS 5 Application Development(Wrox, 2010)和Beginning Android Application Development(Wrox, 2011)的作者。读者可以通过weimenglee@learn2develop.net与他联系。\n技术编辑简介\nChaim Krause是US Army’s Command and General Staff College学院的模拟专家(Simulation Specialist)，他为该学院开发了运行在多种平台(从iOS和Android设备到Windows桌面操作系统和Linux服务器)的各种各样的软件产品，并且还担负其他一些工作。Python是他最喜欢的语言，但是他本人擅长使用多种语言，比如使用Java和JavaScript\/HTML5\/CSS等编写代码。很幸运，他的软件开发职业生涯是在Borland开始的，当时他是Delphi语言的高级开发支持工程师。除了计算机相关的工作，Chaim喜欢techno音乐和dubstep音乐，以及和自己的两条雪橇犬Dasher和Minnie玩踏板车。",
      "summary": "Android 4的问世，标志着Google将Android操作系统的大旗插到了智能手机和平板电脑的阵营中。这本指南书将教会您成功开发Android应用程序所需的一切。本书涵盖了Android应用程序开发的所有基础，包括用户界面、网络、SMS消息传递、数据库、基于位置的服务和部署等。资深作者Wei-Meng Lee为您铺就了一条成功开发和部署Android应用程序的康庄大道。\n主要内容\n◆ 讨论了如何适应不同的显示方向、如何理解屏幕的组件\n以及如何处理用户界面通知\n◆ 描述了在使用TextView、ProgressBar、AutoComplete-\nTextView、TimePicker、ListView等视图设计用户界面时\n涉及的元素\n◆ 演示了如何使用视图显示图片和菜单\n◆ 讲解了如何使用内容提供者和如何创建自己的内容提供者\n◆ 示范了如何将长时间运行的任务放到单独的线程中\n◆ 介绍了如何构建使用SMS消息传递跟踪位置的应用程序\n◆ 阐述了如何使用JSON和套接字编程构建自己的聊天应用\n程序\n◆ 探讨了如何准备Android应用程序来发布到Android\nMarket上",
      "price": "68.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 19,
        "average": "7.3",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Reto Meier"
      ],
      "pubdate": "2012-5-1",
      "tags": [
        {
          "count": 32,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 9,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 5,
          "name": "Application",
          "title": "Application"
        },
        {
          "count": 4,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 4,
          "name": "Professional",
          "title": "Professional"
        },
        {
          "count": 4,
          "name": "Development",
          "title": "Development"
        },
        {
          "count": 3,
          "name": "计算机技术",
          "title": "计算机技术"
        },
        {
          "count": 3,
          "name": "2012",
          "title": "2012"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s9064518.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "864",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s9064518.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s9064518.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s9064518.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6915691\/",
      "id": "6915691",
      "publisher": "Wrox",
      "isbn10": "1118102274",
      "isbn13": "9781118102275",
      "title": "Professional Android 4 Application Development",
      "url": "http:\/\/api.douban.com\/v2\/book\/6915691",
      "alt_title": "",
      "author_intro": "",
      "summary": "Developers, build mobile Android apps using Android 4 The fast-growing popularity of Android smartphones and tablets creates a huge opportunities for developers. If you're an experienced developer, you can start creating robust mobile Android apps right away with this professional guide to Android 4 application development. Written by one of Google's lead Android developer advocates, this practical book walks you through a series of hands-on projects that illustrate the features of the Android SDK. That includes all the new APIs introduced in Android 3 and 4, including building for tablets, using the Action Bar, Wi-Fi Direct, NFC Beam, and more. Shows experienced developers how to create mobile applications for Android smartphones and tablets  Revised and expanded to cover all the Android SDK releases including Android 4.0 (Ice Cream Sandwich), including all updated APIs, and the latest changes to the Android platform. Explains new and enhanced features such as drag and drop, fragments, the action bar, enhanced multitouch support, new environmental sensor support, major improvements to the animation framework, and a range of new communications techniques including NFC and Wi-Fi direct.  Provides practical guidance on publishing and marketing your applications, best practices for user experience, and more This book helps you learn to master the design, lifecycle, and UI of an Android app through practical exercises, which you can then use as a basis for developing your own Android apps.",
      "price": "USD 44.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 27,
        "average": "6.6",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "李宁"
      ],
      "pubdate": "2011-9",
      "tags": [
        {
          "count": 22,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 13,
          "name": "Android开发权威指南",
          "title": "Android开发权威指南"
        },
        {
          "count": 8,
          "name": "移动开发",
          "title": "移动开发"
        },
        {
          "count": 5,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 5,
          "name": "开发权威指南",
          "title": "开发权威指南"
        },
        {
          "count": 3,
          "name": "android",
          "title": "android"
        },
        {
          "count": 2,
          "name": "开发权威",
          "title": "开发权威"
        },
        {
          "count": 2,
          "name": "计算机",
          "title": "计算机"
        }
      ],
      "origin_title": "李宁",
      "image": "https://img3.doubanio.com\/mpic\/s6918436.jpg",
      "binding": "",
      "translator": [],
      "catalog": "《android开发权威指南》\n第一部分 准 备 篇\n第1章 初识庐山真面目——android开发简介 2\n1.1 android的基本概念 2\n1.1.1 android简介 2\n1.1.2 android的版本 4\n1.1.3 android的系统构架 5\n1.1.4 android的应用程序框架 6\n1.2 jil widget介绍 7\n1.3 小结 8\n第2章 工欲善其事，必先利其器——搭建和使用android开发环境 9\n2.1 开发包及工具的安装 9\n2.1.1 开发android程序都需要些什么 9\n2.1.2 安装jdk和配置java开发环境 10\n2.1.3 eclipse的安装与汉化 11\n2.1.4 安装androidsdk 12\n2.1.5 安装eclipse插件adt 13\n2.2 真实体验——编写第一个android程序（随机绘制圆饼） 15\n2.2.1 创建android工程 15\n2.2.2 在模拟器中运行android程序 17\n.2.2.3 界面控件的布局 19\n2.2.4 编写代码 20\n2.2.5 调试程序 23\n2.2.6 在手机上运行和调试程序 28\n2.3 迁移android工程可能发生的错误 29\n2.4 不需要写一行代码的开发工具：appinventor 31\n2.4.1 appinventor简介 31\n2.4.2 appintentor的下载和安装 31\n2.4.3 用拖曳控件的方式设计界面 33\n2.4.4 像拼图一样拼装代码 34\n2.5 小结 37\n第二部分 基 础 篇\n第3章 千里之行始于足下——android程序设计基础 40\n3.1 android应用程序框架 40\n3.1.1 android项目的目录结构 40\n3.1.2 androidmanifest.xml文件的结构 42\n3.2 android应用程序中的资源 44\n3.3 android的应用程序组件 44\n3.3.1 activity（android的窗体） 45\n3.3.2 service（服务） 45\n3.3.3 broadcast receiver（广播接收器） 45\n3.3.4 content provider（内容提供者） 46\n3.4 android程序的ui设计 46\n3.4.1 手工配置xml布局文件 46\n3.4.2 adt自带的可视化ui设计器 47\n3.4.3 使用droiddraw设计ui布局 47\n3.5 小结 48\n第4章 我的ui我做主——用户界面开发基础 49\n4.1 activity的使用方法 49\n4.1.1 创建activity 49\n4.1.2 配置activity 50\n4.1.3 显示其他的activity（intent与activity） 52\n4.2 activity的生命周期 55\n4.3 在不同activity之间传递数据 60\n4.3.1 使用intent传递数据 60\n4.3.2 使用静态变量传递数据 62\n4.3.3 使用剪切板传递数据 63\n4.3.4 使用全局对象传递数据 65\n4.3.5 返回数据到前一个activity 67\n4.4 视图（view） 68\n4.4.1 视图简介 68\n4.4.2 使用xml布局文件定义视图 69\n4.4.3 在代码中控制视图 70\n4.5 布局（layout） 72\n4.5.1 框架布局（framelayout） 72\n4.5.2 线性布局（linearlayout） 75\n4.5.3 相对布局（relativelayout） 79\n4.5.4 表格布局（tablelayout） 81\n4.5.5 绝对布局（absolutelayout） 82\n4.5.6 重用xml布局文件 82\n4.5.7 优化xml布局文件 85\n4.5.8 查看apk文件中的布局 86\n4.6 小结 87\n第5章 良好的学习开端—— 控件（widget）详解 88\n5.1 常用xml属性解析 88\n5.1.1 android:id属性 88\n5.1.2 控件的宽度（android:layout_width）和高度（android:layout_height） 88\n5.1.3 android:layout_margin属性 89\n5.1.4 android:padding属性 89\n5.1.5 android:layout_weight属性 90\n5.1.6 android:layout_gravity和android: gravity属性 90\n5.1.7 android:visibility属性 91\n5.1.8 android:background属性 91\n5.1.9 指定单击事件方法（android:onclick属性） 92\n5.1.10 控件焦点属性（android:focusable和android:focusable-intouchmode） 92\n5.2 textview（显示文本的控件） 93\n5.2.1 显示富文本（url、不同大小、字体、颜色的文本） 93\n5.2.2 在textview中显示表情图像和文字 97\n5.2.3 单击链接弹出activity 100\n5.2.4 为指定文本添加背景 103\n5.2.5 带边框的textview 106\n5.2.6 设置行间距 110\n5.2.7 在未显示完的文本后面加省略号（…） 111\n5.2.8 用textview实现走马灯效果 113\n5.2.9 垂直滚动textview中的文本 114\n5.3 edittext（编辑文本的控件） 115\n5.3.1 像qq一样输入表情图像 115\n5.3.2 在edittext中输入特定的字符 117\n5.3.3 autocompletetext-view（自动完成输入内容的控件） 118\n5.4 按钮和复选框控件 120\n5.4.1 button（普通按钮控件） 120\n5.4.2 图文混排的按钮 122\n5.4.3 imagebutton（图像按钮控件） 124\n5.4.4 radiobutton（选项按钮控件） 124\n5.4.5 togglebutton（开关状态按钮控件） 125\n5.4.6 checkbox（复选框控件） 126\n5.5 imageview（显示图像的控件） 128\n5.5.1 imageview控件的基本用法 128\n5.5.2 显示指定区域的图像 129\n5.5.3 缩放和旋转图像 132\n5.6 时间与日期控件 133\n5.6.1 datepicker（输入日期的控件） 133\n5.6.2 timepicker（输入时间的控件） 134\n5.6.3 datepicker、timepicker与textview同步显示日期和时间 134\n5.6.4 analogclock和digitalclock（显示时钟的控件） 136\n5.7 进度条控件 137\n5.7.1 progressbar（进度条控件） 137\n5.7.2 seekbar（拖动条控件） 139\n5.7.3 设置progressbar和seekbar的颜色及背景图 140\n5.7.4 ratingbar（评分控件） 143\n5.8 列表控件 145\n5.8.1 listview（普通列表控件） 145\n5.8.2 为listview列表项添加复选框和选项按钮 147\n5.8.3 对列表项进行增、删、改操作 149\n5.8.4 改变列表项的背景色 153\n5.8.5 listactivity（封装listview的activity） 154\n5.8.6 expandablelistview（可扩展的列表控件） 155\n5.8.7 spinner（下拉列表控件） 157\n5.9 滚动控件 160\n5.9.1 scrollview（垂直滚动控件） 160\n5.9.2 horizontalscrollview（水平滚动控件） 161\n5.9.3 可垂直和水平滚动的视图 162\n5.9.4 gallery（画廊控件） 163\n5.10 imageswitcher（图像切换控件） 164\n5.11 gridview（网格控件） 166\n5.12 tabhost（标签控件） 168\n5.13 viewstub（惰性装载控件） 169\n5.14 小结 171\n第6章 友好的菜单——menu介绍与实例 172\n6.1 菜单的基本用法 172\n6.1.1 创建选项菜单（options menu） 172\n6.1.2 带图像的选项菜单 173\n6.1.3 关联activity 173\n6.1.4 响应菜单的单击动作 174\n6.1.5 动态添加、修改和删除选项菜单 175\n6.1.6 带复选框和选项按钮的子菜单 176\n6.1.7 上下文菜单 178\n6.1.8 菜单事件 179\n6.1.9 从菜单资源中装载菜单 180\n6.2 菜单特效 181\n6.2.1 自定义菜单 181\n6.2.2 模拟ucweb效果菜单 184\n6.2.3 quickcontactbadge与联系人菜单 189\n6.3 小结 192\n第7章 友好地互动交流——信息提醒（对话框、toast与notification） 193\n7.1 对话框的基本用法 193\n7.1.1 带2个按钮（确认\/取消）的对话框 193\n7.1.2 带3个按钮（覆盖\/忽略\/取消）的对话框 195\n7.1.3 简单列表对话框 196\n7.1.4 单选列表对话框 198\n7.1.5 多选列表对话框 199\n7.1.6 进度对话框 201\n7.1.7 登录对话框 205\n7.1.8 使用activity托管对话框 207\n7.2 对话框的高级应用 209\n7.2.1 阻止单击按钮关闭对话框 209\n7.2.2 改变对话框的显示位置 213\n7.2.3 在对话框按钮和内容文本中插入图像 215\n7.2.4 改变对话框的透明度 216\n7.3 toast 217\n7.3.1 toast的基本用法 217\n7.3.2 永不关闭的toast 218\n7.3.3 用popupwindow模拟toast提示信息框 221\n7.4 通知（notification） 221\n7.4.1 在状态栏上显示通知信息 222\n7.4.2 notification的清除动作 224\n7.4.3 永久存在的notification 225\n7.4.4 自定义notification 226\n7.5 小结 227\n第8章 移动的信息仓库——数据存储 228\n8.1 读写key-value对：sharedpreferences 228\n8.1.1 sharedpreferences的基本用法 228\n8.1.2 数据的存储位置和格式 229\n8.1.3 存取复杂类型的数据 230\n8.1.4 设置数据文件的访问权限 233\n8.1.5 可以保存设置的activity：preferenceactivity 234\n8.2 文件存储 238\n8.2.1 openfileoutput和openfileinput方法 238\n8.2.2 读写sd卡中的文件 239\n8.2.3 sax引擎读取xml文件的原理 241\n8.2.4 将xml文件转换成java对象 242\n8.2.5 文件压缩（jar、zip） 245\n8.3 sqlite数据库 249\n8.3.1 sqlite数据库管理工具 249\n8.3.2 sqliteopenhelper类与自动升级数据库 251\n8.3.3 数据绑定与simplecursoradapter类 252\n8.3.4 操作sd卡上的数据库 255\n8.3.5 将数据库与应用程序一起发布 256\n8.3.6 内存数据库 257\n8.4 小结 258\n第9章 android中的窗口——activity 259\n9.1 调用其他程序中的activity 259\n9.1.1 直接拨号 259\n9.1.2 将电话号传入拨号程序 259\n9.1.3 调用拨号程序 260\n9.1.4 浏览网页 261\n9.1.5 向e-mail客户端传递e-mail地址 261\n9.1.6 发送e-mail 261\n9.1.7 查看联系人 262\n9.1.8 显示系统设置界面（设置主界面、wifi设置界面） 263\n9.1.9 启动处理音频的程序 264\n9.2 自定义activity action 264\n9.3 activity的高级应用 266\n9.3.1 activitygroup 266\n9.3.2 自定义半透明窗口 268\n9.3.3 activity之间切换的动画效果 269\n9.4 小结 270\n第10章 全局事件——广播（broadcast） 271\n10.1 什么是广播 271\n10.2 接收系统广播 272\n10.2.1 短信拦截 272\n10.2.2 用代码注册广播接收器 274\n10.2.3 广播接收器的优先级 275\n10.2.4 来去电拦截 276\n10.2.5 截获屏幕休眠与唤醒 280\n10.2.6 开机自动运行 281\n10.2.7 显示手机电池的当前电量 282\n10.3 发送广播 284\n10.4 验证广播接收器是否注册 285\n10.5 小结 286\n第11章 跨应用数据源——content provider 287\n11.1 content provider的作用 287\n11.2 获得系统数据 288\n11.2.1 读取联系人信息 288\n11.2.2 查看收到的短信 290\n11.3 自定义contentprovider 291\n11.3.1 查询城市信息 291\n11.3.2 为content provider添加访问权限 297\n11.4 小结 298\n第12章 一切为用户服务——service基础与实例 299\n12.1 service基础 299\n12.1.1 service的生命周期 299\n12.1.2 绑定activity和service 302\n12.1.3 开机启动service 305\n12.1.4 判断service是否已注册 306\n12.1.5 判断service是否已开始 307\n12.2 跨进程访问（aidl服务） 308\n12.2.1 什么是aidl服务 308\n12.2.2 建立aidl服务的步骤 308\n12.2.3 建立aidl服务 308\n12.2.4 传递复杂数据的aidl服务 312\n12.2.5 aidl与来去电自动挂断 317\n12.3 小结 319\n第13章 做好应用桥梁——网络与通信 320\n13.1 webview控件 320\n13.1.1 用webview控件浏览网页 320\n13.1.2 用webview控件装载html代码 322\n13.2 访问http资源 324\n13.2.1 提交http get和http post请求 324\n13.2.2 httpurlconnection类 326\n13.2.3 上传文件 327\n13.3 客户端socket 330\n13.3.1 连接服务器 331\n13.3.2 扫描服务器打开的端口 331\n13.3.3 发送和接收数据 333\n13.3.4 获得无线路由分配给手机的ip地址 334\n13.3.5 设置socket选项 335\n13.4 服务端socket 339\n13.4.1 手机服务器的实现 339\n13.4.2 利用socket在应用程序之间通信 340\n13.5 蓝牙通信 342\n13.5.1 蓝牙简介 342\n13.5.2 打开和关闭蓝牙设备 343\n13.5.3 搜索蓝牙设备 344\n13.5.4 蓝牙数据传输 346\n13.6 小结 351\n第14章 炫酷你的应用——多媒体开发 352\n14.1 音乐 352\n14.1.1 播放音乐 352\n14.1.2 录音 353\n14.2 视频 354\n14.2.1 使用videoview播放视频 354\n14.2.2 使用surfaceview播放视频 355\n14.2.3 录制视频 357\n14.3 相机 357\n14.3.1 调用系统的拍照功能 358\n14.3.2 自定义拍照功能 359\n14.4 铃声 364\n14.5 小结 366\n第15章 2d游戏开发 367\n15.1 绘制游戏的画布 367\n15.1.1 在view上实现动画效果 367\n15.1.2 在surfaceview上实现动画效果 371\n15.2 图形绘制基础 374\n15.2.1 绘制像素点 374\n15.2.2 绘制直线 374\n15.2.3 绘制圆形 375\n15.2.4 绘制弧 375\n15.2.5 绘制文本 376\n15.2.6 综合绘制各种图形 376\n15.3 高级图像处理技术 380\n15.3.1 绘制位图 380\n15.3.2 图像的透明度 382\n15.3.3 旋转图像 383\n15.3.4 路径 384\n15.3.5 shader的渲染效果 388\n15.4 帧（frame）动画 392\n15.4.1 animationdrawable与帧动画 392\n15.4.2 播放gif动画 394\n15.5 补间（tween）动画 397\n15.5.1 移动补间动画 397\n15.5.2 缩放补间动画 399\n15.5.3 旋转补间动画 402\n15.5.4 透明度补间动画 403\n15.6 小结 404\n第16章 有趣的android应用 405\n16.1 传感器 405\n16.1.1 如何使用传感器 405\n16.1.2 加速度传感器（accelerometer） 409\n16.1.3 重力传感器（gravity） 409\n16.1.4 光线传感器（light） 410\n16.1.5 陀螺仪传感器（gyroscope） 411\n16.1.6 方向传感器（orientation） 411\n16.1.7 其他传感器 412\n16.2 输入输出技术 413\n16.2.1 语音识别 413\n16.2.2 手势输入 415\n16.2.3 语音朗读（tts） 417\n16.3 google地图 419\n16.4 gps定位 423\n16.5 桌面上的小东西 425\n16.5.1 窗口小部件（appwidget） 425\n16.5.2 快捷方式 431\n16.5.3 实时文件夹 433\n16.6 应用更华丽——动态壁纸 435\n16.7 小结 441\n第三部分 高 级 篇\n第17章 html5与移动web开发 444\n17.1 html5简介 444\n17.2 html5精彩效果演示 445\n17.3 html5在android中的应用 447\n17.4 html5的画布（canvas） 448\n17.4.1 canvas概述 448\n17.4.2 检测浏览器是否支持canvas 449\n17.4.3 在web页面中使用canvas 450\n17.4.4 使用路径（path） 452\n17.4.5 设置线条风格 453\n17.4.6 设置填充类型 453\n17.4.7 填充矩形区域 454\n17.4.8 使用渐变色（gradient） 454\n17.4.9 拉伸画布对象 455\n17.4.10 在canvas上绘制文本 456\n17.4.11 使用阴影 457\n17.5 调试javascript 458\n17.6 小结 459\n第18章 输入法开发 460\n18.1 android输入法简介 460\n18.2 控制输入法 461\n18.3 输入法实战 462\n18.3.1 实现输入法的步骤 463\n18.3.2 编写输入法程序 463\n18.3.3 输入法服务的生命周期 466\n18.3.4 预输入文本 467\n18.3.5 输入法设置 467\n18.4 小结 468\n第19章 android opengl es开发基础 469\n19.1 opengl简介 469\n19.2 什么是opengl es 469\n19.3 多边形 470\n19.4 颜色 474\n19.5 旋转三角形 475\n19.6 旋转立方体 477\n19.7 小结 478\n第20章 opengl es的超酷效果 479\n20.1 保持平衡的旋转文本 479\n20.2 左右摇摆的android机器人 482\n20.3 纠缠在一起的旋转立方体 485\n20.4 透明背景的旋转立方体 486\n20.5 触摸旋转的立方体 487\n20.6 2d和3d的综合旋转效果 489\n20.7 旋转立体天空 491\n20.8 小结 493\n第21章 android ndk编程 494\n21.1 android ndk简介 494\n21.2 安装、配置和测试ndk开发环境 495\n21.2.1 系统和软件要求 495\n21.2.2 下载和安装android ndk 495\n21.2.3 下载和安装cygwin 495\n21.2.4 配置android ndk的开发环境 498\n21.3 第一个ndk程序：世界你好 499\n21.3.1 编写和调用ndk程序 499\n21.3.2 用命令行方式编译ndk程序 501\n21.3.3 在eclipse中集成android ndk 502\n21.4 背景不断变化的三角形（ndk 版opengl es） 504\n21.5 使用ndk opengl esapi实现千变万化的3d效果 507\n21.6 使用ndk调用音频api 510\n21.7 本地activity（native activity） 511\n21.8 android ndk配置文件详解 513\n21.8.1 android ndk定义的变量 513\n21.8.2 android ndk定义的函数 514\n21.8.3 描述模块的变量 515\n21.8.4 配置application.mk文件 516\n21.9 小结 516\n第22章 测试驱动开发（tdd） 517\n22.1 junit测试框架 517\n22.2 测试activity 517\n22.3 测试content provider 521\n22.4 测试service 523\n22.5 测试普通类 523\n22.6 小结 525\n第四部分 综合实例篇\n第23章 android综合案例一——蓝牙聊天 528\n23.1 蓝牙聊天主界面 528\n23.2 添加选项菜单 530\n23.3 搜索和连接蓝牙设备 530\n23.4 使设备可被其他蓝牙设备发现 533\n23.5 发送和接收聊天信息 533\n23.6 小结 537\n第24章 android综合案例二——月球登陆（游戏） 538\n24.1 游戏的玩法 538\n24.2 实现游戏界面 539\n24.3 设置游戏难度 540\n24.4 开始游戏 541\n24.5 控制飞船喷火 544\n24.6 控制飞船改变飞行方向 544\n24.7 判断飞船是否成功 着陆 545\n24.8 小结 546\n第25章 android综合案例三——全键盘输入法（应用） 547\n25.1 安装输入法 547\n25.2 输入法的初始化工作 548\n25.3 响应键盘操作 549\n25.4 根据edittext控件的 属性显示不同的软键盘 551\n25.5 小结 553\n第26章 android综合案例四——贪吃蛇（游戏） 554\n26.1 游戏玩法 554\n26.2 游戏主界面设计 555\n26.3 控制小蛇的移动 557\n26.4 小结 560\n第27章 android综合案例五—— 新浪微博客户端 （应用） 561\n27.1 新浪微博简介 561\n27.1.1 新浪微博客户端 561\n27.1.2 新浪微博开放 api 563\n27.2 使用新浪微博开发 api 563\n27.3 创建和配置新浪微 博客户端工程 564\n27.4 登录新浪微博 564\n27.5 功能按钮 567\n27.6 显示“我的首页”的微博 569\n27.7 评论微博 572\n27.8 转发微博 573\n27.9 写微博 574\n27.10 小结 576\n第28章 android综合案例六—— 笑脸连连看 （游戏） 577\n28.1 游戏玩法 577\n28.2 准备图像素材 578\n28.3 实现主界面 578\n28.4 随机生成连连看 图像 580\n28.5 选中两个相同图像 后消失 580\n28.6 用定时器限制游戏 时间 581\n28.7 小结 582",
      "pages": "582",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s6918436.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s6918436.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s6918436.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6801007\/",
      "id": "6801007",
      "publisher": "人民邮电出版社",
      "isbn10": "7115257140",
      "isbn13": "9787115257147",
      "title": "Android开发权威指南",
      "url": "http:\/\/api.douban.com\/v2\/book\/6801007",
      "alt_title": "李宁",
      "author_intro": "",
      "summary": "第一部分 准备篇，包括第1章和第2章，第1章 Android开发简介、第2章 搭建和使用Android开发环境。\n第二部分 基础篇，包括第3章~第16章，第3章 Android程序设计基础、第4章 用户界面开发基础、第5章 控件（Widget）详解、第6章 菜单、第7章 信息提醒（对话框、Toast与Notification）、第8章 数据存储、第9章 Android中的窗口——Activity、第10章 全局事件——广播（Broadcast）、第11章 跨应用数据源 Content Provider、第12章 服务（Service）、第13章 网络与通讯、第14章 多媒体开发、第15章 2D游戏开发、第16章 有趣的Android应用。\n第三部分 高级篇，包括第17章~第22章，第17章 HTML5与移动Web开发、第18章 输入法开发、第19章 Android OpenGL ES开发基础、第20章 OpenGL ES的超酷效果、第21章 NDK编程、第22章 测试驱动开发（TDD）。\n第四部分 综合实例篇，包括第23章~第28章，第23章 蓝牙聊天、第24章 月球登陆（游戏）、第25章 全键盘输入法（应用）、第26章 贪吃蛇（游戏）、第27章 新浪微博客户端（应用）、第28章 笑脸连连看（游戏）。",
      "price": "79.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 21,
        "average": "7.4",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "佘志龙\/\/陈昱勋\/\/郑名杰\/\/陈小凤|改编:王世江"
      ],
      "pubdate": "2011-11",
      "tags": [
        {
          "count": 26,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 6,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 4,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 3,
          "name": "工具书",
          "title": "工具书"
        },
        {
          "count": 3,
          "name": "Java",
          "title": "Java"
        },
        {
          "count": 2,
          "name": "范例",
          "title": "范例"
        },
        {
          "count": 2,
          "name": "Android开发",
          "title": "Android开发"
        },
        {
          "count": 2,
          "name": "程序设计",
          "title": "程序设计"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s8483778.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第1章  了解、深入、动手做    1.1  红透半边天的Android    1.2  本书目的及范例涵盖范围    1.3  如何阅读本书    1.4  使用本书范例    1.5  参考网站  第2章  Android初体验  第3章  用户人机界面  第4章  史上超豪华的手机控件  第5章  交互式通信服务与手机控制  第6章  手机自动服务纪实  第7章  娱乐多媒体  第8章  当Android与Internet接轨  第9章  Google服务与Android完美整合  第10章  创意Android程序设计  第11章  HTML5 Mobile应用程序开发  附录",
      "pages": "818",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s8483778.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s8483778.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s8483778.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6974691\/",
      "id": "6974691",
      "publisher": "人民邮电",
      "isbn10": "7115264309",
      "isbn13": "9787115264305",
      "title": "Google Android SDK开发范例大全",
      "url": "http:\/\/api.douban.com\/v2\/book\/6974691",
      "alt_title": "",
      "author_intro": "分别来自手机制造业、电视媒体业、网络、电信产业、软件开发等领域，擅长嵌入式系统软件设计、J2ME游戏开发、Android开发，以及J2EE、JSP、Servlet、JavaBean、PHP、C#等程序语言，熟悉面向对象技术与Eclipse、Netbeans开发工具，积累多年大型项目开发、跨系统整合经验。\n    分别来自手机制造业、电视媒体业、网络、电信产业、软件开发等领域，擅长嵌入式系统软件设计、J2ME游戏开发、Android开发，以及J2EE、JSP、Servlet、JavaBean、PHP、C#等程序语言，熟悉面向对象技术与Eclipse、Netbeans开发工具，积累多年大型项目开发、跨系统整合经验。\n    分别来自手机制造业、电视媒体业、网络、电信产业、软件开发等领域，擅长嵌入式系统软件设计、J2ME游戏开发、Android开发，以及J2EE、JSP、Servlet、JavaBean、PHP、C#等程序语言，熟悉面向对象技术与Eclipse、Netbeans开发工具，积累多年大型项目开发、跨系统整合经验。\n    分别来自手机制造业、电视媒体业、网络、电信产业、软件开发等领域，擅长嵌入式系统软件设计、J2ME游戏开发、Android开发，以及J2EE、JSP、Servlet、JavaBean、PHP、C#等程序语言，熟悉面向对象技术与Eclipse、Netbeans开发工具，积累多年大型项目开发、跨系统整合经验。",
      "summary": "《Google Android SDK开发范例大全(第3版)》在上一版的基础上，以Android手机应用程序开发（采用Android SDK 2.3.3）为主题，超过200多个范例全面且深度地整合了手机、网络及服务等多个开发领域，为读者提高程序设计能力提供了很大的帮助。\n全书共分11章，主要以范例集的方式来讲述Android的知识点，详细介绍了开发Android的人机交互界面、Android常用的开发控件、Android手机收发短信等通信服务、开发Android手机的自动服务功能和娱乐多媒体功能以及整合Android与Google强大的网络服务等内容。随书光盘中包括了所有范例的程序代码。\n《Google Android SDK开发范例大全(第3版)》继承前两版由浅入深的方式，范例总数由原先的160多个增加到了200多个，在用户交互界面、手机控件、交互式通信服务、手机自助服务、娱乐多媒体等方面均增加了相应的范例来介绍新的开发技术，特别是新增加了第11章来专门介绍HTML5技术在Android移动设备里的应用，相信当下两个热门技术的交汇会碰撞出不一样的火花。\n《Google Android SDK开发范例大全(第3版)》内容由Android的基础知识到实际开发应用，结构清晰、语言简洁，非常适合Android的初学者和Android的进阶程序开发者阅读参考。",
      "price": "99.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 12,
        "average": "7.1",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "梅尔"
      ],
      "pubdate": "2010-12",
      "tags": [
        {
          "count": 27,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 3,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 2,
          "name": "编程语言",
          "title": "编程语言"
        },
        {
          "count": 2,
          "name": "SW",
          "title": "SW"
        },
        {
          "count": 1,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 1,
          "name": "工作以来读过的书",
          "title": "工作以来读过的书"
        },
        {
          "count": 1,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 1,
          "name": "SW-Platform\/Framework\/Architect",
          "title": "SW-Platform\/Framework\/Architect"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s6264420.jpg",
      "binding": "",
      "translator": [
        "王超"
      ],
      "catalog": "第1章 android简介 1\n1.1 一些背景信息 2\n1.1.1 不远的过去 2\n1.1.2 未来的前景 3\n1.2 对android的误解 3\n1.3 开放的移动开发平台 4\n1.4 自带的android应用程序 4\n1.5 android sdk的特征 5\n1.5.1 访问硬件(包括摄像头、gps和加速计) 6\n1.5.2 自带的google地图、地理编码和基于位置的服务 6\n1.5.3 后台服务 6\n1.5.4 sqlite 数据存储和检索数据库 7\n1.5.5 共享数据和应用程序间通信 7\n1.5.6 使用小组件、live folder和live wallpaper增强主屏幕 7\n1.5.7 广泛的媒体支持和2d\/3d图形 8\n1.5.8 优化的内存和进程管理 8\n1.6 开放手机联盟简介 8\n1.7 运行android的环境 8\n1.8 从事移动开发的原因 9\n1.9 从事android开发的原因 9\n.1.9.1 推动android普及的因素 10\n1.9.2 android的独到之处 10\n1.9.3 改变移动开发格局 11\n1.10 开发框架简介 11\n1.10.1 开发包中的资源 12\n1.10.2 理解android软件栈 12\n1.10.3 dalvik虚拟机 14\n1.10.4 android应用程序架构 14\n1.10.5 android库 15\n1.11 小结 15\n第2章 开始入手 17\n2.1 android开发 18\n2.1.1 开始前的准备工作 18\n2.1.2 创建第一个android应用程序 22\n2.1.3 android应用程序的类型 27\n2.2 面向移动设备的开发 29\n2.2.1 硬件限制带来的设计考虑事项 29\n2.2.2 考虑用户环境 32\n2.2.3 android开发 33\n2.3 to-do list示例 36\n2.4 android开发工具 40\n2.4.1 android虚拟设备和sdk管理器 41\n2.4.2 android模拟器 42\n2.4.3 dalvik调试监控服务(ddms) 43\n2.4.4 android调试桥(adb) 43\n2.5 小结 44\n第3章 创建应用程序和活动 45\n3.1 android应用程序的组成部分 46\n3.2 应用程序清单简介 47\n3.3 使用清单编辑器 52\n3.4 android应用程序生命周期 53\n3.5 理解应用程序的优先级和进程状态 54\n3.6 分离资源 55\n3.6.1 创建资源 55\n3.6.2 使用资源 62\n3.6.3 to-do list资源示例 65\n3.6.4 为不同的语言和硬件创建资源 66\n3.6.5 运行时配置更改 67\n3.7 application类简介 69\n3.7.1 扩展和使用application类 69\n3.7.2 重写应用程序的生命周期事件 70\n3.8 深入探讨android活动 71\n3.8.1 创建一个活动 71\n3.8.2 活动生命周期 73\n3.8.3 android活动类 78\n3.9 小结 78\n第4章 创建用户界面 79\n4.1 android ui基本设计 80\n4.2 视图简介 80\n4.2.1 使用视图创建活动的用户界面 81\n4.2.2 android widget工具箱 82\n4.3 布局简介 83\n4.3.1 使用布局 83\n4.3.2 优化布局 85\n4.4 创建新视图 85\n4.4.1 修改现有的视图 86\n4.4.2 创建复合控件 90\n4.4.3 创建定制的视图 93\n4.4.4 使用定制的控件 103\n4.5 drawable资源 104\n4.5.1 形状、颜色和渐变 104\n4.5.2 复合drawable 107\n4.5.3 ninepatch drawable 110\n4.6 分辨率和像素密度无关性 110\n4.6.1 资源框架和分辨率无关性 111\n4.6.2 分辨率无关性的最佳实践 112\n4.6.3 反复测试 114\n4.7 创建和使用菜单 115\n4.7.1 android菜单系统简介 115\n4.7.2 定义活动的菜单 117\n4.7.3 菜单项选项 118\n4.7.4 动态更新菜单项 119\n4.7.5 处理菜单选择 120\n4.7.6 子菜单和上下文菜单 120\n4.7.7 使用xml定义菜单 122\n4.7.8 to-do list示例续 123\n4.8 小结 128\n第5章 意图、广播接收器、adapter和internet 131\n5.1 意图简介 132\n5.1.1 使用意图来启动活动 132\n5.1.2 使用意图过滤器来为隐式意图提供服务 138\n5.1.3 使用意图过滤器作为插件和扩展 146\n5.1.4 linkify简介 148\n5.1.5 使用意图来广播事件 151\n5.2 待处理意图简介 155\n5.3 adapter简介 156\n5.2.1 部分本地adapter简介 156\n5.2.2 定制arrayadapter 156\n5.2.3 使用adapter绑定数据 157\n5.4 使用internet资源 162\n5.4.1 连接到internet资源 163\n5.4.2 使用internet资源 164\n5.5 对话框简介 164\n5.5.1 dialog类简介 164\n5.5.2 将活动用作对话框 166\n5.5.3 管理和显示对话框 167\n5.6 创建一个地震查看器 168\n5.7 小结 176\n第6章 文件、保存状态和首选项 179\n6.1 保存简单的应用程序数据 180\n6.2 创建并保存首选项 180\n6.3 检索共享首选项 181\n6.4 为地震查看器创建一个设置活动 181\n6.5 首选项活动和首选项框架概述 189\n6.5.1 在xml中定义一个首选项屏幕布局 190\n6.5.2 首选项活动简介 192\n6.5.3 查找并使用首选项屏幕共享首选项 193\n6.5.4 共享首选项变更监听程序简介 193\n6.6 为地震查看器创建一个标准的首选项活动 194\n6.7 保存活动状态 195\n6.7.1 保存并还原实例状态 195\n6.7.2 保存to-do list活动状态 196\n6.8 保存和加载文件 198\n6.9 将静态文件作为资源添加 199\n6.10 文件管理工具 200\n6.11 小结 200\n第7章 数据库和内容提供器 201\n7.1 android数据库简介 201\n7.1.1 sqlite数据库简介 202\n7.1.2 内容提供器简介 202\n7.2 sqlite简介 202\n7.3 游标和内容值 203\n7.4 使用sqlite数据库 203\n7.4.1 使用sqliteopenhelper 206\n7.4.2 在不使用sqlitehelper的情况下打开和创建数据库 207\n7.4.3 android数据库设计注意事项 207\n7.4.4 查询数据库 207\n7.4.5 从cursor中提取结果 208\n7.4.6 添加、更新和删除行 209\n7.4.7 保存to-do list 210\n7.5 创建一个新的内容提供器 216\n7.5.1 提供对数据源的访问 217\n7.5.2 注册提供器 219\n7.6 使用内容提供器 219\n7.6.1 内容解析器简介 219\n7.6.2 查询内容 219\n7.6.3 添加、更新和删除内容 220\n7.6.4 在内容提供器中访问文件 221\n7.7 创建和使用地震内容提供器 222\n7.7.1 创建内容提供器 222\n7.7.2 使用提供器 227\n7.8 本地android内容提供器 229\n7.8.1 使用媒体库提供器 230\n7.8.2 使用联系人提供器 231\n7.9 小结 235\n第8章 地图、地理编码和基于位置的服务 237\n8.1 使用基于位置的服务 238\n8.2 配置模拟器来测试基于位置的服务 238\n8.3 更新模拟位置提供器中的位置 238\n8.4 选择一个位置提供器 239\n8.4.1 查找可用的提供器 239\n8.4.2 根据标准查找位置提供器 240\n8.5 确定自己所在的位置 241\n8.5.1 “where am i”示例 241\n8.5.2 追踪移动 244\n8.5.3 更新“where am i”示例中的位置 245\n8.6 使用邻近提醒 247\n8.7 使用地理编码器 248\n8.7.1 反向地理编码 249\n8.7.2 前向地理编码 249\n8.7.3 对“where am i”示例进行地理编码 251\n8.8 创建基于地图的活动 252\n8.8.1 mapview和mapactivity简介 252\n8.8.2 获得地图的api键 253\n8.8.3 创建一个基于地图的活动 254\n8.8.4 配置和使用mapview 255\n8.8.5 使用mapcontroller 256\n8.8.6 对“where am i”示例使用地图 256\n8.8.7 创建和使用覆盖(overlay) 260\n8.8.8 mylocationoverlay简介 267\n8.8.9 itemizedoverlay和overlayitem简介 267\n8.8.10 将视图固定到地图和地图的某个位置上 269\n8.9 对earthquake示例添加地图功能 271\n8.10 小结 276\n第9章 后台工作 277\n9.1 服务简介 278\n9.1.1 创建和控制服务 279\n9.1.2 将活动和服务绑定 289\n9.1.3 后台服务的优先级 291\n9.2 使用后台线程 292\n9.2.1 使用asynctask运行异步任务 292\n9.2.2 使用asynctask将earthquake service移动到后台线程 294\n9.2.3 手动创建线程和gui线程同步 295\n9.3 创建一个toast 297\n9.3.1 定制toast 297\n9.3.2 在工作线程中使用toast 299\n9.4 通知简介 299\n9.4.1 通知管理器简介 300\n9.4.2 创建通知 300\n9.4.3 触发通知 304\n9.4.4 向地震监控器中添加通知 304\n9.4.5 高级通知技术 307\n9.4.6 持续的和连续的通知 310\n9.5 使用警报 310\n9.5.1 设置重复警报 312\n9.5.2 使用重复警报更新earthquake 313\n9.6 小结 315\n第10章 个性化手机屏幕 317\n10.1 主屏幕小组件简介 318\n10.2 创建app widgets 318\n10.2.1 创建小组件布局 319\n10.2.2 定义小组件设置 321\n10.2.3 创建小组件意图接收器并将其添加到应用程序清单中 321\n10.2.4 remote views(远程视图)和app widget manager简介 322\n10.2.5 刷新小组件 327\n10.2.6 创建并使用小组件配置活动 329\n10.3 创建地震小组件 330\n10.4 live folder简介 335\n10.4.1 创建live folder 336\n10.4.2 创建earthquake live folder 338\n10.5 将搜索添加到应用程序以及快速搜索框中 340\n10.5.1 将搜索添加到应用程序中 341\n10.5.2 在快速搜索框中显示搜索结果 344\n10.5.3 将搜索添加到earthquake示例中 344\n10.6 创建live wallpaper 348\n10.6.1 创建live wallpaper定义资源 348\n10.6.2 创建wallpaper服务 348\n10.6.3 创建wallpaper服务引擎 349\n10.7 小结 350\n第11章 音频、视频以及摄像头的使用 351\n11.1 播放音频和视频 352\n11.1.1 media player简介 352\n11.1.2 准备音频播放 353\n11.1.3 准备视频播放 354\n11.1.4 控制播放 357\n11.1.5 管理媒体播放输出 358\n11.2 录制音频和视频 358\n11.2.1 使用意图录制视频 358\n11.2.2 使用媒体刻录机 359\n11.3 使用摄像头并拍摄照片 362\n11.3.1 使用意图拍摄照片 362\n11.3.2 控制摄像头并拍摄照片 364\n11.3.3 读取并写入jpeg exif图像详细信息 368\n11.4 向媒体库中添加新媒体 369\n11.4.1 使用媒体扫描仪 369\n11.4.2 向媒体库中插入媒体 370\n11.5 原始音频操作 370\n11.5.1 录制带有音频记录的声音 370\n11.5.2 使用音频轨道播放声音 372\n11.6 语音识别 373\n11.7 小结 374\n第12章 电话服务和sms 377\n12.1 电话服务 378\n12.1.1 启动拨号程序以初始化电话呼叫 378\n12.1.2 替换本机拨号程序 378\n12.1.3 访问电话和网络属性以及状态 379\n12.1.4 监视电话状态、电话活动以及数据连接中的变化 382\n12.2 sms和mms简介 386\n12.2.1 在应用程序中使用sms和mms 386\n12.2.2 使用意图和本机客户端从应用程序中发送sms和mms 387\n12.2.3 手动发送sms消息 388\n12.2.4 监听传入的sms消息 391\n12.2.5 紧急响应程序sms示例 393\n12.2.6 自动化紧急响应程序 402\n12.3 小结 410\n第13章 蓝牙、网络和wi-fi 411\n13.1 使用蓝牙 411\n13.1.1 访问本地蓝牙设备适配器 412\n13.1.2 管理蓝牙属性和状态 413\n13.1.3 可发现性和远程设备发现 415\n13.1.4 蓝牙通信 418\n13.1.5 蓝牙数据传输示例 424\n13.2 管理网络连接 433\n13.2.1 connectivity manager(连接管理器)简介 433\n13.2.2 读取用户首选项用于后台数据传输 434\n13.2.3 监视网络详细信息 435\n13.2.4 查找并配置网络首选项以及控制硬件信号 435\n13.2.5 监视网络连接 436\n13.3 管理wi-fi 436\n13.3.1 监视wi-fi连接 437\n13.3.2 监视活动连接详细信息 437\n13.3.3 扫描热点 438\n13.3.4 管理wi-fi配置 438\n13.3.5 创建wi-fi网络配置 439\n13.4 小结 439\n第14章 传感器 441\n14.1 使用传感器和传感器管理器 442\n14.2 解释传感器数值 445\n14.3 使用指南针、加速计和方向传感器 445\n14.3.1 加速计简介 446\n14.3.2 检测加速度变化 447\n14.3.3 创建一个g-forceometer(重力测力计) 448\n14.3.4 确定设备方向 451\n14.3.5 创建一个指南针和人工地平仪 454\n14.4 控制设备振动 458\n14.5 小结 459\n第15章 android高级开发 461\n15.1 android的安全性 462\n15.1.1 linux内核安全 462\n15.1.2 权限简介 462\n15.1.3 声明和实施权限 463\n15.1.4 为广播意图实施权限 464\n15.2 使用wake lock 464\n15.3 android text to speech简介 465\n15.4 使用aidl来支持服务的ipc 467\n15.4.1 实现aidl接口 467\n15.4.2 将类对象作为parcelable传递 468\n15.4.3 实现和提供ipc接口 470\n15.5 使用internet服务 472\n15.6 构建内容丰富的用户界面 473\n15.6.1 使用动画 473\n15.6.2 高级画布绘图 484\n15.6.3 surfaceview简介 499\n15.6.4 创建交互式控件 502\n15.7 小结 508",
      "pages": "509",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s6264420.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s6264420.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s6264420.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/5412750\/",
      "id": "5412750",
      "publisher": "清华大学出版社",
      "isbn10": "7302241023",
      "isbn13": "9787302241027",
      "title": "Android 2高级编程",
      "url": "http:\/\/api.douban.com\/v2\/book\/5412750",
      "alt_title": "",
      "author_intro": "RetocMeier出生于西澳大利州的珀斯市,现居伦敦.\n他目前是Google的一名Android开发人员倡导者,帮助Android开发人员创建最优秀的应用程序.Reto是一位经验丰富的软件开发人员,拥有逾10年的GUI应用程序开发经验.进入Google之前,他曾从事过海洋石油和天然气开发以及金融工作.\nReto始终不渝地追求掌握新技术,从2007年Android发布之初Reto就迷恋上了此项技术.他经常利用业余时间研究多种开发平台以及Google的各种开发工具.\n有关Reto的详细信息清防问他的个人网站RadioactivecYak,网址是http：／／blog.radioactiveyak.com也可以在twitter上关注他,网址为http：／／www.twitter.com／retomeier",
      "summary": "《Android 2高级编程(第2版)》述如何有效利用android 2的功能来改进当前产品或创建新产品。《Android 2高级编程(第2版)》是使用android编写移动应用程序的实用精品指南，穿插了一系列示例项目来深入分析android的新功能和技术。大量示例和说明可引导您熟练掌握基础知识，使您不仅能使用当前android 功能编写赏心悦目的移动应用程序，还能灵活快捷地运用未来的android增强功能构建最前沿的解决方案。\n\n  点击链接进入英文版： \n Professional Android 2 Application Development   \n\n  点击链接进入新版： \nAndroid 4 高级编程(第3版)",
      "price": "68.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 24,
        "average": "8.8",
        "min": 0
      },
      "subtitle": "The Big Nerd Ranch Guide",
      "author": [
        "Bill Phillips",
        "Brian Hardy"
      ],
      "pubdate": "2013-4-7",
      "tags": [
        {
          "count": 19,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 11,
          "name": "android",
          "title": "android"
        },
        {
          "count": 6,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 4,
          "name": "计算机技术",
          "title": "计算机技术"
        },
        {
          "count": 3,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 3,
          "name": "新手入门",
          "title": "新手入门"
        },
        {
          "count": 3,
          "name": "Mobile",
          "title": "Mobile"
        },
        {
          "count": 2,
          "name": "Programming",
          "title": "Programming"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s28076998.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "580",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s28076998.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s28076998.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s28076998.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/7070603\/",
      "id": "7070603",
      "publisher": "Big Nerd Ranch Guides",
      "isbn10": "0321804333",
      "isbn13": "9780321804334",
      "title": "Android Programming",
      "url": "http:\/\/api.douban.com\/v2\/book\/7070603",
      "alt_title": "",
      "author_intro": "",
      "summary": "Android Programming: The Big Nerd Ranch Guide: is an introductory Android book for programmers with Java experience. Based on Big Nerd Ranch's popular Android Bootcamp course, this guide will lead you through the wilderness using hands-on example apps combined with clear explanations of key concepts and APIs. This book focuses on practical techniques for developing apps compatible with all versions of Android widely used today. Write and run code every step of the way - creating apps that catalog crime scenes, browse photos, track your jogging route, and more. Each chapter and app has been designed and tested to provide the knowledge and experience you need to get started in Android development. \"Big Nerd Ranch provided the training we needed to get hundreds of engineers building skillfully on Android. This book is a great distillation of that training and will be a huge help to anyone looking to ramp up as well.\" - Mike Shaver, Director of Mobile Engineering, Facebook \"...a must-have for the developer just starting in Android or ready for more advanced techniques. I was impressed with this book's content and clarity of presentation. The authors explain simple and complex Android topics with equal ease.\" - James Steele, author of The Android Developer's Cookbook",
      "price": "USD 49.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 12,
        "average": "7.8",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Mark L. Murphy"
      ],
      "pubdate": "2009-2-6",
      "tags": [
        {
          "count": 22,
          "name": "android",
          "title": "android"
        },
        {
          "count": 8,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 4,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 2,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 1,
          "name": "入门",
          "title": "入门"
        },
        {
          "count": 1,
          "name": "速成",
          "title": "速成"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s24638545.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "468",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s24638545.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s24638545.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s24638545.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/3338161\/",
      "id": "3338161",
      "publisher": "CommonsWare, LLC",
      "isbn10": "0981678009",
      "isbn13": "9780981678009",
      "title": "The Busy Coder's Guide to Android Development",
      "url": "http:\/\/api.douban.com\/v2\/book\/3338161",
      "alt_title": "",
      "author_intro": "",
      "summary": "",
      "price": "USD 30.00"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 16,
        "average": "7.2",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "李华明"
      ],
      "pubdate": "2011-10",
      "tags": [
        {
          "count": 21,
          "name": "android",
          "title": "android"
        },
        {
          "count": 17,
          "name": "游戏",
          "title": "游戏"
        },
        {
          "count": 11,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 6,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 5,
          "name": "入门",
          "title": "入门"
        },
        {
          "count": 3,
          "name": "游戏开发",
          "title": "游戏开发"
        },
        {
          "count": 2,
          "name": "李明华",
          "title": "李明华"
        },
        {
          "count": 1,
          "name": "游戏编程之从零开始",
          "title": "游戏编程之从零开始"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s6981964.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第1章　Android 平台介绍与环境搭建  1.1　Android平台简介\/2    1.1.1  Android操作系统平台的优势和趋势\/2    1.1.2  Android SDK与Android NDK\/2  1.2　Android开发环境的搭建\/3    1.2.1  搭配环境前的准备工作\/3    1.2.2  安装和配置环境\/6    1.2.3  SDK版本更新\/11  1.3　本章小节\/13第2章　Hello，Android！  2.1　创建第一个Android项目\/15  2.2　剖析Android Project 结构\/16  2.3　AndroidManifest.xml与应用程序功能组件\/20    2.3.1  AndroidManifest的xml语法层次\/20    2.3.2  <activity> — Activity（活动）\/21    2.3.3   <receiver>—Intent（意图）与Broacast Receiver（广播接收）\/21    2.3.4  <service>—服务\/22    2.3.5  <provider>—Content Provider（内容提供者）\/22  2.4　运行Android项目（启动Android模拟器）\/23  2.5　详解第一个Android项目源码\/25  2.6　Activity生命周期\/28    2.6.1  单个Activity的生命周期\/28    2.6.2  多个Activity的生命周期\/32    2.6.3  Android OS管理Activity的方式\/34  2.7　Android开发常见问题\/34    2.7.1  Android SDK与 Google APIs创建Emulator 的区别\/34    2.7.2  将Android项目导入Eclipse\/35    2.7.3  在Eclipse中显示Android开发环境下常用的View窗口\/37    2.7.4  在Eclipse中利用打印语句（Log）调试Android程序\/38    2.7.5  在Eclipse中真机运行Android项目\/39    2.7.6  设置Android Emulator模拟器系统语言为中文\/39    2.7.7  切换模拟器的输入法\/39    2.7.8  模拟器中创建SD Card\/40    2.7.9  模拟器横竖屏切换\/40    2.7.10  打包Android 项目\/40  2.8　本章小结\/45第3章　Android游戏开发常用的系统控件  3.1　Button\/47  3.2　Layout\/52    3.2.1  线性布局\/52    3.2.2  相对布局\/57    3.2.3  表格布局\/62    3.2.4  绝对布局\/66    3.2.5  单帧布局\/68    3.2.6  可视化编写布局\/70  3.3　ImageButton\/71  3.4　EditText\/74  3.5　CheckBox\/76  3.6　RadioButton\/79  3.7　ProgressBar\/82  3.8　SeekBar\/85  3.9　TabSpec与TabHost\/87  3.10　ListView\/91    3.10.1  ListView使用ArrayAdapter适配器\/91    3.10.2  ListView使用SimpleAdapter适配器的扩展列表\/93    3.10.3  为ListView自定义适配器\/96  3.11　Dialog\/100  3.12　系统控件常见问题\/105    3.12.1  Android中常用的计量单位\/105    3.12.2  Context\/106    3.12.3  Resources与getResources\/107    3.12.4  findViewById与 LayoutInflater\/107    3.12.5  多个Activity之间跳转\/退出\/传递数据操作\/108    3.12.6  横竖屏切换处理的三种方式\/112  3.13　本章小结\/114第4章　游戏开发基础  4.1　如何快速的进入Android游戏开发\/116  4.2　游戏的简单概括\/118  4.3　Android游戏开发中常用的三种视图\/118  4.4　View游戏框架\/119    4.4.1  绘图函数onDraw\/122    4.4.2  按键监听\/124    4.4.3  触屏监听\/128  4.5　SurfaceView游戏框架\/130    4.5.1  SurfaceView游戏框架实例\/130    4.5.2  刷屏的方式\/135    4.5.3  SurfaceView视图添加线程\/136  4.6　View 与 SurfaceView的区别\/142  4.7　Canvas 画布\/143  4.8　Paint 画笔\/148  4.9　Bitmap位图的渲染与操作\/151  4.10　剪切区域\/162  4.11　动画\/168    4.11.1  Animation动画\/168    4.11.2  自定义动画\/173  4.12　游戏适屏的简述与作用\/179  4.13　让游戏主角动起来\/181  4.14　碰撞检测\/187    4.14.1  矩形碰撞\/188    4.14.2  圆形碰撞\/190    4.14.3  像素碰撞\/192    4.14.4  多矩形碰撞\/193    4.14.5  Region碰撞检测\/196  4.15　游戏音乐与音效\/198    4.15.1  MediaPlayer\/198    4.15.2  SoundPool\/203    4.15.3  MediaPlayer与SoundPool优劣分析\/207  4.16　游戏数据存储\/207    4.16.1  SharedPreference\/208    4.16.2  流文件存储\/212    4.16.3  SQLite\/218  4.17　本章小结\/219第5章　游戏开发实战演练  5.1　项目前的准备工作\/221  5.2　划分游戏状态\/222  5.3　游戏初始化（菜单界面）\/224  5.4　游戏界面\/229    5.4.1  实现滚动的背景图\/230    5.4.2  实现主角以及与主角相关的元素\/231    5.4.3  怪物（敌机）类的实现\/236  5.5　游戏胜利与结束界面\/260  5.6　游戏细节处理\/261    5.6.1  游戏Back返回键处理\/261    5.6.2  为游戏设置背景常亮\/262  5.7　本章小结\/262第6章　游戏开发提高篇  6.1　360°平滑游戏导航摇杆\/264  6.2　多触点实现图片缩放\/268  6.3　触屏手势识别\/270  6.4　加速度传感器\/274  6.5　9patch工具的使用\/278  6.6　代码实现截屏功能\/283  6.7　效率检视工具\/285  6.8　游戏视图与系统组件共同显示\/288  6.9　蓝牙对战游戏\/290  6.10　网络游戏开发基础\/307    6.10.1  Socket\/308    6.10.2  Http\/313  6.11　本地化与国际化\/317  6.12　本章小结\/320第7章　Box2D 物理引擎  7.1　Box2D概述\/322  7.2　将Box2D类库导入Android项目中\/322  7.3　物理世界与手机屏幕坐标系之间的关系\/324  7.4　创建Box2D物理世界\/325  7.5　创建矩形物体\/327  7.6　让物体在屏幕中展现\/329  7.7　创建自定义多边形物体\/330  7.8　物理世界中的物体角度\/331  7.9　创建圆形物体\/332  7.10　多个Body的数据赋值\/333    7.10.1  遍历Body\/333    7.10.2  自定义类关联Body\/335  7.11　设置Body坐标与给Body施加力\/338    7.11.1  手动设置Body的坐标\/338    7.11.2  给Body施加力\/338  7.12　Body碰撞监听、筛选与Body传感器\/341    7.12.1  Body碰撞接触点监听\/341    7.12.2  Body碰撞筛选\/342  7.13　关节\/346    7.13.1  距离关节\/346    7.13.2  旋转关节\/348    7.13.3  齿轮关节\/349    7.13.4  滑轮关节\/351    7.13.5  移动关节\/353    7.13.6  鼠标关节\/356  7.14　通过AABB获取Body\/358  7.15　物体与关节的销毁\/360  7.16　本章小结\/361第8章　Box2D物理游戏实战  8.1　迷宫小球游戏实战\/363  8.2　堆房子游戏实战\/382  8.3　本章小结\/392",
      "pages": "392",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s6981964.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s6981964.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s6981964.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6862119\/",
      "id": "6862119",
      "publisher": "清华大学",
      "isbn10": "7302265356",
      "isbn13": "9787302265351",
      "title": "Android游戏编程之从零开始",
      "url": "http:\/\/api.douban.com\/v2\/book\/6862119",
      "alt_title": "",
      "author_intro": "",
      "summary": "《Android游戏编程之从零开始》主要系统地讲解了Android游戏开发，从最基础部分开始，让零基础的Android初学者也能快速学习和掌握Android游戏开发。《Android游戏编程之从零开始》一共8章，内容包括Android平台介绍与环境搭建、Hello，Android！项目剖析、游戏开发中常用的系统组件、游戏开发基础、游戏开发实战、游戏开发提高篇、Box2d物理引擎、物理游戏实战。随书光盘包括全书65个项目源代码。《Android游戏编程之从零开始》适合Android游戏开发的初学者使用，也适合作为Android游戏培训的教材和高校游戏专业师生的参考书。",
      "price": "59.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 20,
        "average": "6.9",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "李宁"
      ],
      "pubdate": "2010 年6月",
      "tags": [
        {
          "count": 17,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 3,
          "name": "入门",
          "title": "入门"
        },
        {
          "count": 3,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 2,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 1,
          "name": "游戏开发",
          "title": "游戏开发"
        },
        {
          "count": 1,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 1,
          "name": "设计",
          "title": "设计"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s4399414.jpg",
      "binding": "",
      "translator": [],
      "catalog": "前言\n如何使用本书的例子\n第一部分 准备篇——大军未动，粮草先行\n第1章 Android入门 2\n1.1 Android的基本概念 2\n1.1.1 Android简介 2\n1.1.2 Android的系统构架 4\n1.2 Android开发环境的搭建 5\n1.2.1 开发Android程序需要些什么 5\n1.2.2 安装Android SDK 5\n1.2.3 安装Eclipse插件ADT 6\n1.2.4 测试ADT是否安装成功 6\n1.3 Android SDK中的常用命令行工具 8\n1.3.1 启动和关闭ADB服务（adb start-server\n和adb kill-server） 8\n1.3.2 查询当前模拟器\/设备的实例\n（adb devices） 8\n1.3.3 安装、卸载和运行程序（adb install、\n. adb uninstall和am） 8\n1.3.4 PC与模拟器或真机交换文件（adb\npull和adb push） 9\n1.3.5 Shell命令 9\n1.3.6 创建、删除和浏览AVD设备\n（android） 10\n1.3.7 创建SD卡 10\n1.4 PC上的Android 10\n1.4.1 Android LiveCD 11\n1.4.2 AndroidX86 11\n1.5 Android的学习资源 12\n1.6 应用程序商店 12\n1.6.1 Android Market 12\n1.6.2 Mobile Market（MM） 12\n1.6.3 其他应用程序商店 13\n1.7 本章小结 13\n第2章 第一个Android程序 14\n2.1 编写用于显示当前日期和时间的程序 14\n2.1.1 新建一个Android工程 14\n2.1.2 界面组件的布局 15\n2.1.3 编写实际代码 15\n2.2 调试程序 18\n2.3 签名和发布应用程序 18\n2.3.1 使用命令行方式进行签名 19\n2.3.2 使用ADT插件方式进行签名 19\n2.4 DDMS透视图 20\n2.5 本章小结 21\n第二部分 基础篇——Android世界的精彩之旅\n第3章 Android应用程序架构 23\n3.1 Android应用程序中的资源 23\n3.1.1 资源存放在哪里 23\n3.1.2 资源的种类 23\n3.1.3 资源的基本使用方法 24\n3.2 Android的应用程序组件 25\n3.2.1 活动（Activity）组件 25\n3.2.2 服务（Service）组件 25\n3.2.3 广播接收者（Broadcast receivers）\n组件 26\n3.2.4 内容提供者（Content providers）\n组件 26\n3.3 AndroidManifest.xml文件的结构 26\n3.4 本章小结 27\n第4章 建立用户接口 28\n4.1 建立、配置和使用Activity 28\n4.1.1 建立和配置Activity 28\n4.1.2 Activity的生命周期 30\n实例1：演示Activity的生命周期 31\n4.2 视图（View） 33\n4.2.1 视图简介 34\n4.2.2 使用XML布局文件控制视图 34\n4.2.3 在代码中控制视图 35\n实例2：混合使用XML布局文件和代码\n来控制视图 37\n4.2.4 定制组件（Widget）的三种方式 39\n实例3：定制组件——带图像的TextView 39\n实例4：定制组件——带文本标签的\nEditText 42\n实例5：定制组件——可更换表盘的指针\n时钟 44\n4.3 使用AlertDialog类创建对话框 49\n4.3.1 AlertDialog类简介 49\n4.3.2 【确认\/取消】对话框 49\n实例6：创建询问是否删除文件的\n【确认\/取消】对话框 50\n4.3.3 带3个按钮的对话框 51\n实例7：创建【覆盖\/忽略\/取消】对话框 51\n4.3.4 简单列表对话框 52\n4.3.5 单选列表对话框 53\n4.3.6 多选列表对话框 53\n实例8：创建3种选择省份的列表对话框 54\n4.3.7 水平进度对话框和圆形进度对话框 58\n实例9：水平进度对话框和圆形进度\n对话框演示 58\n4.3.8 自定义对话框 61\n实例10：创建登录对话框 61\n实例11：使用Activity托管对话框 63\n实例12：创建悬浮对话框和触摸任何位置\n都可以关闭的对话框 64\n4.4 Toast和Notification 67\n4.4.1 用Toast显示提示信息框 67\n4.4.2 Notification与状态栏信息 68\n4.5 菜单 70\n4.5.1 创建选项菜单 70\n4.5.2 设置与菜单项关联的图像和\nActivity 71\n4.5.3 响应选项菜单项单击事件的\n3种方式 71\n4.5.4 动态添加、修改和删除选项菜单 72\n4.5.5 创建带复选框和选项按钮的子菜单 73\n4.5.6 创建上下文菜单 74\n4.5.7 菜单事件 75\n实例13：Activity菜单、子菜单、上下文\n菜单演示 75\n4.6 布局 76\n4.6.1 框架布局（FrameLayout） 76\n实例14：霓虹灯效果的TextView 77\n4.6.2 线性布局（LinearLayout） 78\n实例15：利用LinearLayout将按钮放在屏幕\n的四角和中心位置 80\n4.6.3 相对布局（RelativeLayout） 81\n实例16：利用RelativeLayout实现梅花效果\n的布局 81\n4.6.4 表格布局（TableLayout） 82\n实例17：计算器按钮的布局 82\n4.6.5 绝对布局（AbsoluteLayout） 83\n4.7 本章小结 83\n第5章 组件详解 84\n5.1 显示和编辑文本的组件 84\n5.1.1 显示文本的组件：TextView 85\n实例18：在TextView中显示URL及不同\n字体大小、不同颜色的文本 86\n实例19：带边框的TextView 88\n5.1.2 输入文本的组件：EditText 89\n实例20：在EditText中输入特定的字符 90\n实例21：按回车键显示EditText 91\n5.1.3 自动完成输入内容的组件：\nAutoCompleteTextView 92\n5.2 按钮与复选框组件 93\n5.2.1 普通按钮组件：Button 93\n实例22：异形（圆形、五角星、螺旋形\n和箭头）按钮 94\n5.2.2 图像按钮组件：ImageButton 95\n实例23：同时显示图像和文字的按钮 96\n5.2.3 选项按钮组件：RadioButton 96\n5.2.4 开关状态按钮组件：ToggleButton 97\n5.2.5 复选框组件：CheckBox 97\n实例24：利用XML布局文件动态创建\nCheckBox 98\n5.3 日期与时间组件 100\n5.3.1 输入日期的组件：DatePicker 100\n5.3.2 输入时间的组件：TimePicker 100\n实例25：DatePicker、TimePicker与\nTextView同步显示日期和时间 100\n5.3.3 显示时钟的组件：AnalogClock和\nDigitalClock 101\n5.4 进度条组件 102\n5.4.1 进度条组件：ProgressBar 102\n5.4.2 拖动条组件：SeekBar 103\n实例26：改变ProgressBar和SeekBar\n的颜色 104\n5.4.3 评分组件：RatingBar 105\n5.5 其他重要组件 106\n5.5.1 显示图像的组件：ImageView 106\n实例27：可显示图像指定区域的ImageView\n组件 107\n实例28：动态缩放和旋转图像 108\n5.5.2 列表组件：ListView 109\n实例29：可以单选和多选的ListView 111\n实例30：动态添加、删除ListView列表项 112\n实例31：改变ListView列表项选中状态\n的背景颜色 115\n5.5.3 封装ListView的Activity：\nListActivity 116\n实例32：使用SimpleAdapter建立复杂\n的列表项 116\n实例33：给应用程序评分 117\n5.5.4 可展开的列表组件：\nExpandableListView 120\n5.5.5 下拉列表组件：Spinner 121\n5.5.6 垂直滚动视图组件：ScrollView 123\n5.5.7 水平滚动视图组件：\nHorizontalScrollView 123\n实例34：可垂直和水平滚动的视图 124\n5.5.8 网格视图组件：GridView 124\n5.5.9 可循环显示和切换图像的组件：\nGallery和ImageSwitcher 125\n5.5.10 标签组件：TabHost 127\n5.6 本章小结 128\n第6章 移动存储解决方案 129\n6.1 最简单的数据存储方式：\nSharedPreferences 129\n6.1.1 使用SharedPreferences存取数据 129\n6.1.2 数据的存储位置和格式 131\n实例35：存取复杂类型的数据 131\n6.1.3 设置数据文件的访问权限 133\n6.1.4 可以保存设置的Activity：\nPreferenceActivity 134\n6.2 文件的存储 137\n6.2.1 openFileOutput和openFileInput方法 137\n实例36：SD卡文件浏览器 138\n实例37：存取SD卡中的图像 142\n6.2.2 SAX引擎读取XML文件的原理 143\n实例38：将XML数据转换成Java对象 144\n6.3 SQLite数据库 147\n6.3.1 SQLite数据库管理工具 147\n6.3.2 创建数据库和表 148\n6.3.3 模糊查询 149\n6.3.4 分页显示记录 149\n6.3.5 事务 149\n6.4 在Android中使用SQLite数据库 149\n6.4.1 SQLiteOpenHelper类与自动\n升级数据库 150\n6.4.2 SimpleCursorAdapter类与数据绑定 150\n实例39：带照片的联系人管理系统 153\n6.4.3 将数据库与应用程序一起发布 156\n实例40：英文词典 156\n6.5 抽象的标准——内容提供者\n（ContentProvider） 159\n实例41：将联系人管理和英文字典集成\n到自己的应用中 160\n6.6 本章小结 165\n第7章 应用程序之间的通讯 166\n7.1 Intent与Activity 166\n7.1.1 用Intent启动Activity，并在\nActivity之间传递数据 166\n7.1.2 调用其他应用程序中的Activity（拨打\n电话、浏览网页、发Email等） 169\n7.1.3 定制自己的Activity Action 172\n实例42：将电子词典的查询功能共享成\n一个Activity Action 174\n7.2 接收和发送广播 175\n7.2.1 接收系统广播 175\n实例43：开机可自动运行的程序 176\n实例44：收到短信了，该做点什么 176\n实例45：显示手机电池的当前电量 178\n7.2.2 在自己的应用程序中发送广播 179\n实例46：接收联系人系统中发送的添加\n联系人广播 180\n7.3 本章小结 181\n第8章 Android服务 182\n8.1 Service起步 182\n8.1.1 Service的生命周期 182\n8.1.2 绑定Activity和Service 185\n8.1.3 在BroadcastReceiver中启动Service 187\n8.2 系统服务 188\n8.2.1 获得系统服务 188\n实例47：监听手机来电 189\n实例48：来电黑名单 190\n8.2.2 在模拟器上模拟重力感应 191\n实例49：手机翻转静音 192\n8.3 时间服务 194\n8.3.1 计时器：Chronometer 194\n8.3.2 预约时间Handler 196\n8.3.3 定时器Timer 197\n8.3.4 在线程中更新GUI组件 198\n8.3.5 全局定时器AlarmManager 200\n实例50：定时更换壁纸 201\n实例51：多次定时提醒 203\n8.4 跨进程访问（AIDL服务） 205\n8.4.1 什么是AIDL服务 206\n8.4.2 建立AIDL服务的步骤 206\n实例52：建立AIDL服务 206\n实例53：传递复杂数据的AIDL服务 209\n8.5 本章小结 213\n第9章 网络 214\n9.1 可装载网络数据的组件 214\n实例54：将网络图像装载到ListView\n组件中 215\n实例55：Google图像画廊（Gallery） 217\n9.2 WebView组件 221\n9.2.1 用WebView组件浏览网页 221\n实例56：手机浏览器 221\n9.2.2 用WebView组件装载HTML代码 222\n实例57：将英文词典整合到Web页中\n（JavaScript调用Java方法） 224\n9.3 访问HTTP资源 225\n9.3.1 提交HTTP GET和HTTP POST\n请求 225\n9.3.2 HttpURLConnection类 227\n实例58：上传文件 228\n实例59：远程Apk安装器 231\n9.3.3 调用WebService 232\n实例60：通过WebService查询产品信息 233\n9.4 本章小结 236\n第10章 多媒体 237\n10.1 图形 237\n10.1.1 图形绘制基础 237\n实例61：绘制基本的图形和文本 239\n10.1.2 绘制位图 243\n实例62：用两种方式绘制位图 243\n10.1.3 设置颜色的透明度 244\n实例63：可任意改变透明度的位图 245\n10.1.4 旋转图像 246\n实例64：旋转动画 246\n10.1.5 扭曲图像 247\n实例65：按圆形轨迹扭曲图像 248\n10.1.6 拉伸图像 251\n实例66：拉伸图像演示 251\n10.1.7 路径 253\n实例67：沿着路径绘制文本 256\n实例68：可在图像上绘制图形的画板 258\n10.2 音频和视频 262\n10.2.1 使用MediaPlayer播放MP3文件 262\n10.2.2 使用MediaRecorder录音 263\n10.2.3 使用VideoView播放视频 264\n10.2.4 使用SurfaceView播放视频 264\n10.3 本章小结 265\n第三部分 进阶篇——深入Android世界的腹地\n第11章 2D动画 267\n11.1 帧（Frame）动画 267\nAnimationDrawable与帧动画 267\n实例69：通过帧动画方式播放Gif动画 269\n实例70：播放帧动画的子集 271\n11.2 补间（Tween）动画 273\n11.2.1 移动补间动画 273\n实例71：循环向右移动的EditText与\n上下弹跳的球 275\n11.2.2 缩放补间动画 277\n实例72：跳动的心 277\n11.2.3 旋转补间动画 279\n实例73：旋转的星系 279\n11.2.4 透明度补间动画 280\n实例74：投掷炸弹 281\n11.2.5 振动效果 283\n11.2.6 自定义动画渲染器（Interceptor） 284\n11.2.7 以动画方式切换View的组件\nViewFlipper 285\n11.3 本章小结 287\n第12章 OpenGL ES编程 288\n12.1 OpenGL简介 288\n12.2 构建OpenGL ES的基本开发框架 289\n12.3 2D图形绘制 290\n12.3.1 多边形 290\n12.3.2 颜色 292\n12.3.3 旋转 293\n12.4 3D图形绘制 294\n12.4.1 旋转立方体 294\n12.4.2 在立方体上显示纹理 295\n12.4.3 光照下的立方体 296\n12.4.4 透明的立方体 298\n12.5 本章小结 298\n第13章 资源、国际化与自适应 299\n13.1 Android中的资源 299\n13.1.1 Android怎么存储资源 300\n13.1.2 资源的种类 300\n13.1.3 资源文件的命名 301\n13.2 定义和使用资源 301\n13.2.1 使用系统资源 301\n13.2.2 字符串（String）资源 302\n13.2.3 数组（Array）资源 303\n13.2.4 颜色（Color）资源 305\n13.2.5 尺寸（Dimension）资源 306\n13.2.6 类型（Style）资源 307\n13.2.7 主题（Theme）资源 308\n13.2.8 绘画（Drawable）资源 309\n13.2.9 动画（Animation）资源 310\n13.2.10 菜单（Menu）资源 310\n13.2.11 布局（Layout）资源 313\n13.2.12 属性（Attribute）资源 313\n实例75：改进可显示图标的IconTextView\n组件 315\n13.2.13 XML资源 316\n13.2.14 RAW资源 317\n13.2.15 ASSETS资源 317\n13.3 国际化和资源自适应 318\n13.3.1 对资源进行国际化 318\n13.3.2 Locale与国际化 320\n13.3.3 常用的资源配置 320\n13.4 本章小结 321\n第14章 访问Android手机的硬件 322\n14.1 在手机上测试硬件 322\n14.1.1 安装Android USB驱动 322\n14.1.2 在手机上测试程序 324\n14.1.3 在手机上调试程序 324\n14.2 录音 325\n14.3 控制手机摄像头（拍照） 326\n14.3.1 调用系统的拍照功能 326\n14.3.2 实现自己的拍照Activity 328\n14.4 传感器在手机中的应用 332\n实例76：电子罗盘 333\n实例77：计步器 334\n14.5 GPS与地图定位 335\n14.5.1 Google地图 336\n14.5.2 用GPS定位到当前位置 339\n14.6 WIFI 340\n14.7 本章小结 342\n第15章 放在桌面上的小玩意 343\n15.1 窗口小部件（App Widget） 343\n15.1.1 在Android桌面上添加\nApp Widget 343\n15.1.2 开发App Widget的步骤 344\n实例78：数字时钟 346\n15.1.3 AppWidgetProvider类 348\n15.1.4 向App Widget添加配置Activity 349\n实例79：可以选择风格的数字时钟 349\n15.2 快捷方式 353\n15.2.1 向快捷方式列表中添加快捷方式 353\n15.2.2 直接将快捷方式放到桌面上 354\n15.3 实时文件夹（LiveFolder） 354\n15.4 本章小结 356\n第16章 NDK编程 357\n16.1 Android NDK简介 357\n16.2 安装、配置和测试NDK开发环境 358\n16.2.1 系统和软件要求 358\n16.2.2 下载和安装Android NDK 358\n16.2.3 下载和安装Cygwin 359\n16.2.4 配置Android NDK的开发环境 361\n16.2.5 编译和运行NDK自带的例子 362\n16.3 Android NDK开发 364\n16.3.1 JNI接口设计 364\n16.3.2 编写Android NDK程序的步骤 365\n实例80：将文件中的小写字母转换成\n大写字母（NDK版本） 365\n16.3.3 配置Android.mk文件 367\n16.3.4 Android NDK定义的变量 368\n16.3.5 Android NDK定义的函数 369\n16.3.6 描述模块的变量 369\n16.3.7 配置Application.mk文件 370\n16.4 本章小结 371\n第17章 整合Android与脚本语言 372\n17.1 Android脚本环境简介 372\n17.2 Android脚本环境安装 373\n17.3 编写和运行Android脚本 374\n17.4 本章小结 376\n第18章 Android平台的新特性展示 377\n18.1 Android平台的新特性 377\n18.1.1 Android 1.6的新特性 377\n18.1.2 Android 2.0的新特性 379\n18.2 Android Framework API演变 379\n18.2.1 Android 1.6 Framework API的变化 379\n18.2.2 Android 2.x Framework API的变化 380\n18.3 实时壁纸（Live Wallpapers，\nAndroid 2.1） 380\n18.4 补间动画渲染器（Android 1.6） 387\n18.4.1 Anticipate渲染器 388\n18.4.2 Overshoot渲染器 388\n18.4.3 Anticipate\/Overshoot渲染器 388\n18.4.4 Bounce渲染器 388\n18.5 本章小结 389\n第19章 另类的输入输出 390\n19.1 手势（Gesture） 390\n19.1.1 创建手势文件 390\n19.1.2 通过手势输入字符串 391\n19.1.3 通过手势调用程序 393\n19.1.4 编写自己的手势创建器 394\n19.2 让手机说话（TTS） 395\n19.3 本章小结 396\n第20章 蓝牙 397\n20.1 蓝牙简介 397\n20.2 打开和关闭蓝牙设备 398\n20.3 搜索蓝牙设备 398\n20.4 蓝牙Socket 400\n20.5 OBEX服务器 402\n20.6 本章小结 403\n第四部分 OPhone篇——进入OPhone世界\n第21章 OPhone入门 405\n21.1 OPhone平台概述 405\n21.1.1 OPhone的系统架构 405\n21.1.2 JIL Widget的运行环境 406\n21.1.3 OPhone应用程序展示 406\n21.2 OPhone开发环境搭建 407\n21.2.1 安装ODT和WDT 407\n21.2.2 测试一下ODT是否安装成功 407\n21.2.3 测试一下WDT是否安装成功 407\n21.3 在真机上调试程序 408\n21.4 本章小结 410\n第22章 OPhone的API扩展 411\n22.1 视频电话 411\n22.1.1 拨打视频电话 411\n22.1.2 挂断视频电话 411\n实例81：可拨打视频电话的程序 412\n22.2 搜索API 413\n22.3 本章小结 414\n第23章 JIL Widget开发详解 415\n23.1 编写第一个JIL Widget程序 415\n23.2 多媒体 417\n23.2.1 播放音频 417\n23.2.2 播放视频 418\n23.3 操作文件 418\n23.3.1 获得与文件相关的信息 419\n23.3.2 操作文件 419\n23.3.3 操作文件夹 421\n23.4 获得系统信息 422\n23.4.1 获得电池信息 422\n23.4.2 获得手机信号信息 423\n23.4.3 获得设备信息 424\n23.4.4 获得设备状态信息 424\n23.5 控制硬件 425\n23.5.1 拍照和摄像 426\n23.5.2 打电话 426\n23.5.3 手机振动 426\n23.6 本章小结 427\n第五部分 综合实例篇——实践是检验真理的唯一标准\n第24章 万年历 429\n24.1 主界面设计与实现 429\n24.1.1 万年历的核心类：Calendar 429\n24.1.2 日历内容元素的基类：\nCalendarParent 431\n24.1.3 绘制万年历边框：Border类 431\n24.1.4 绘制周名称：Week类 432\n24.1.5 绘制日期和网格：Grid类 433\n24.1.6 日历视图：CalendarView类 440\n24.1.7 生成万年历的主界面 442\n24.2 选项菜单功能 443\n24.2.1 切换到今天的日期 443\n24.2.2 指定日期 443\n24.3 可以写日记和提醒的万年历 444\n24.3.1 显示所有的记录信息：\nAllRecord类 444\n24.3.2 添加和修改记录：Record类 446\n24.3.3 设置提醒时间 447\n24.3.4 启动服务 448\n24.3.5 在广播接收器中显示提醒界面 449\n24.3.6 访问数据库：DBService 450\n24.4 本章小结 454\n第25章 知道当前位置的Google GTalk\n机器人 455\n25.1 GTalk的通讯协议和技术 455\n25.1.1 Jabber和XMPP 455\n25.1.2 XMPP客户端库：Smack和\nAsmack 456\n25.2 登录GTalk：Login类 456\n25.3 联系人信息 458\n25.3.1 显示联系人列表 458\n25.3.2 监听联系人是否上线 460\n25.4 联系人之间的通讯 461\n25.4.1 发送聊天信息 462\n25.4.2 接收聊天信息 462\n25.4.3 自动回复当前的位置\n（GPS定位） 465\n25.5 本章小结 466",
      "pages": "466",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4399414.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4399414.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4399414.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4888400\/",
      "id": "4888400",
      "publisher": "中国水利水电出版社",
      "isbn10": "7508475275",
      "isbn13": "9787508475271",
      "title": "Android\/OPhone开发完全讲义(china-pub首发)",
      "url": "http:\/\/api.douban.com\/v2\/book\/4888400",
      "alt_title": "",
      "author_intro": "李宁 高级软件工程师，毕业于东北大学，获硕士学位。曾任职于东软集团，担任项目经理一职。有10余年的软件开发经验，主持或参与开发了全国计算机等级考试考务管理系统、超市前台销售和后台管理系统、辽宁省实验中学后勤管理系统、网上评卷系统等各种大型系统。曾为《程序员》、《电脑编程技巧与维护》、IT168、天极网等杂志或网络媒体撰写了100余篇技术文章。熟悉Java、C\/C++、C#、Eclipse、NetBeans、Visual Studio、Delphi等编程语言或开发工具，尤其擅长Java、Eclipse等开发技术。..",
      "summary": "本书是国内第一本同时介绍Android和OPhone的经典著作，国内著名Android社区eoeandroid极力推荐。\n本书内容全面，详细讲解Android框架、Android用户接口、Android组件、Android的数据存储解决方案、Android的4种可跨平台通信的组件（Activity、Service、Broadcast和ContentProvider）、网络、绘图、多媒体、2D动画、OpenGL ES、资源、国际化、访问Android手机的硬件、实时壁纸、实时文件夹、NDK（利用C\/C++开发可运行在Android上的应用程序）、脚本语言（Python、Lua、Perl等）、手势输入、文字语音转换（TTS）、蓝牙及OPhone平台的技术。除此之外，在OFhone平台中内嵌了一种新的SDK：JIL Widget。这种技术可以只使用HTML、CSS、JavaScript等Web技术来编写可运行在OPhone上的程序。为了使读者更早进入实战阶段，在本书的最后给出了两个完整的例子：“万年历”和“知道当前位置的Google GTalk机器人”。\n本书适合有一定的Java基础，想通过Android进入移动开发领域的读者：已经有一定的Android开发经验，想进一步提高Android的开发能力的读者；想将本书作为Android的参考手册，随时随地查阅的读者；对Android报有浓厚兴趣的其他手机平台的开发人员；正在学习Android的在校大学生以及培训学校的学员。",
      "price": "58.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 11,
        "average": "7.7",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "赫尔曼 (Erik Hellman)"
      ],
      "pubdate": "2014-6-1",
      "tags": [
        {
          "count": 29,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 10,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 5,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 3,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 2,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 2,
          "name": "计算机科学",
          "title": "计算机科学"
        },
        {
          "count": 2,
          "name": "算法",
          "title": "算法"
        },
        {
          "count": 2,
          "name": "图灵社区",
          "title": "图灵社区"
        }
      ],
      "origin_title": "Android Programming: Pushing the Limits",
      "image": "https://img3.doubanio.com\/mpic\/s28061655.jpg",
      "binding": "平装",
      "translator": [
        "丁志虎",
        "武海峰"
      ],
      "catalog": "第一部分　构建更好的基础\n第1章　完善开发环境　　2\n1.1 　可供选择的操作系统　　2\n1.2 　Android SDK进阶　　2\n1.2.1 　adb工具　　3\n1.2.2 　用Monkey对应用UI做压力测试　　5\n1.2.3 　在Android上使用Gradle构建系统　　6\n1.2.4 　用ProGuard优化和混淆代码　　9\n1.3 　Android库项目以及第三方库　　9\n1.3.1 　使用JAR库　　9\n1.3.2 　创建库项目　　10\n1.4 　版本控制和源代码管理　　11\n1.5 　熟练使用IDE　　13\n1.5.1 　调试Android应用　　14\n1.5.2 　使用lint做静态代码分析　　15\n1.5.3 　重构代码　　18\n1.6 　Android设备上的Developer选项　　20\n1.7 　小结　　22\n1.8 　延伸阅读　　22\n第2章　在Android上编写高效的Java代码　　23\n2.1 　比较Android上的Dalvik Java和\nJava SE　　23\n2.2 　优化Android上的Java代码　　25\n2.2.1 　Android上的类型安全枚举　　26\n2.2.2 　Android中增强版的for循环　　27\n2.2.3 　队列、同步和锁　　28\n2.3 　管理和分配内存　　30\n2.4 　Android中的多线程　　33\n2.4.1 　Thread类　　34\n2.4.2 　AsyncTask　　35\n2.4.3 　Handler类　　36\n2.4.4 　选择合适的线程　　41\n2.5 　小结　　41\n2.6 　延伸阅读　　42\n第二部分　充分利用组件\n第3章　组件、清单及资源　　44\n3.1 　Android组件　　44\n3.1.1 　Activity　　44\n3.1.2 　Service　　45\n3.1.3 　BroadcastReceiver　　45\n3.1.4 　ContentProvider　　46\n3.1.5 　Application　　46\n3.1.6 　应用架构　　48\n3.2 　应用程序清单　　49\n3.2.1 　manifest元素　　49\n3.2.2 　Google Play过滤器和权限　　50\n3.2.3 　application节点元素　　51\n3.2.4 　组件元素和属性　　52\n3.2.5 　Intent过滤　　53\n3.3 　resources和assets　　55\n3.3.1 　高级string资源　　55\n3.3.2 　本地化　　57\n3.3.3 　使用资源限定符　　58\n3.3.4 　使用assets　　59\n3.4 　小结　　59\n3.5 　延伸阅读　　60\n第4章　Android用户体验和界面设计　　61\n4.1 　用户故事　　61\n4.2 　Android UI设计　　62\n4.2.1 　导航　　63\n4.2.2 　用户界面原型　　63\n4.3 　Android用户界面元素　　64\n4.4 　Android应用程序文本　　65\n4.4.1 　字体　　65\n4.4.2 　文本布局　　65\n4.5 　尺寸和大小　　66\n4.5.1 　推荐尺寸　　66\n4.5.2 　图标大小　　67\n4.5.3 　字体大小　　67\n4.6 　颜色　　68\n4.7 　图像和图标　　69\n4.7.1 　典型透视　　69\n4.7.2 　几何离子　　70\n4.7.3 　人脸识别　　70\n4.8 　可用性　　71\n4.9 　用户奖励机制　　71\n4.10 　小结　　73\n4.11 　延伸阅读　　73\n第5章　Android用户界面操作　　75\n5.1 　Activity和Fragment　　75\n5.2 　使用多个屏幕　　77\n5.3 　设计自定义视图　　79\n5.3.1 　View的生命周期　　79\n5.3.2 　钢琴键盘部件　　80\n5.4 　多点触控　　85\n5.4.1 　PointerCoordinates　　87\n5.4.2 　旋转手势　　87\n5.5 　OpenGL ES　　89\n5.6 　小结　　90\n5.7 　延伸阅读　　90\n第6章　Service和后台任务　　91\n6.1 　何时以及如何使用Service　　91\n6.2 　理解Service生命周期　　92\n6.2.1 　Service的创建和销毁　　92\n6.2.2 　启动Service　　92\n6.2.3 　绑定Service　　94\n6.2.4 　保持活跃　　96\n6.2.5 　停止Service　　97\n6.3 　在后台运行　　99\n6.3.1 　IntentService　　99\n6.3.2 　并行执行　　100\n6.4 　和Service通信　　103\n6.4.1 　使用Intent进行异步消息传递　　103\n6.4.2 　本地绑定的Servcie　　104\n6.5 　小结　　107\n6.6 　延伸阅读　　108\n第7章　Android IPC　　109\n7.1 　Binder简介　　109\n7.1.1 　Binder地址　　110\n7.1.2 　Binder事务　　111\n7.1.3 　Parcel　　112\n7.1.4 　link to death　　114\n7.2 　设计API　　114\n7.2.1 　AIDL　　115\n7.2.2 　Messenger　　119\n7.2.3 　使用库工程包装API　　122\n7.3 　保护远程API　　125\n7.4 　小结　　126\n7.5 　延伸阅读　　126\n第8章　掌握BroadcastReceiver以及配置更改　　127\n8.1 　BroadcastReceiver　　128\n8.1.1 　本地BroadcastReceiver　　129\n8.1.2 　普通广播和有序广播　　130\n8.1.3 　粘性广播　　132\n8.1.4 　定向广播　　132\n8.1.5 　启用和禁用广播接收器　　133\n8.1.6 　系统广播Intent　　133\n8.2 　设备配置更改　　137\n8.3 　小结　　137\n8.4 　延伸阅读　　138\n第9章　数据存储和序列化技术　　139\n9.1 　Android持久化选项　　139\n9.2 　在偏好文件中存储数据　　140\n9.3 　用户选项和设置用户界面　　142\n9.4 　高性能ContentProvider　　144\n9.4.1 　Android数据库设计　　144\n9.4.2 　创建和升级数据库　　145\n9.4.3 　实现查询方法　　147\n9.4.4 　数据库事务　　149\n9.4.5 　在ContentProvider中存储二进制数据　　150\n9.5 　序列化数据　　152\n9.5.1 　JSON　　152\n9.5.2 　使用Gson进行高级JSON处理　　154\n9.5.3 　Google Protocol Buffer　　156\n9.6 　应用数据备份　　159\n9.7 　小结　　160\n9.8 　延伸阅读　　160\n第10章　编写自动化测试　　162\n10.1 　Android测试原则　　162\n10.1.1 　测试内容　　163\n10.1.2 　基本的单元测试　　163\n10.1.3 　测试Activity　　165\n10.1.4 　测试Service　　167\n10.1.5 　测试ContentProvider　　168\n10.1.6 　运行测试　　171\n10.2 　持续集成　　172\n10.3 　小结　　173\n10.4 　延伸阅读　　173\n第三部分　超越极限\n第11章　高级音频、视频及相机应用　　176\n11.1 　高级音频应用　　176\n11.1.1 　低延迟音频　　176\n11.1.2 　OpenSL ES　　179\n11.1.3 　文字转语音　　183\n11.1.4 　语音识别　　184\n11.2 　使用OpenGL ES 2.0处理视频　　186\n11.3 　使用OpenGL ES 2.0处理相机　　190\n11.4 　多媒体编码　　192\n11.5 　小结　　196\n11.6 　延伸阅读　　196\n第12章　Android应用安全问题　　197\n12.1 　Android安全的概念　　197\n12.1.1 　签名和密钥　　197\n12.1.2 　Android权限　　198\n12.1.3 　保护用户数据　　199\n12.1.4 　验证调用应用　　200\n12.2 　客户端数据加密　　201\n12.2.1 　Android的加密API　　201\n12.2.2 　生成密钥　　201\n12.2.3 　加密数据　　202\n12.2.4 　解密数据　　202\n12.2.5 　处理加密数据　　203\n12.3 　Android的钥匙链管理　　204\n12.4 　设备管理API　　208\n12.5 　小结　　211\n12.6 　扩展阅读　　212\n第13章　地图、位置和活动API　　213\n13.1 　融合位置管理器　　213\n13.2 　集成Google Maps v2　　214\n13.3 　使用Google Maps　　216\n13.3.1 　地图标记　　217\n13.3.2 　绘制圆形区域　　218\n13.3.3 　绘制多边形　　219\n13.3.4 　有用的位置API工具　　220\n13.3.5 　地理编码　　221\n13.4 　使用LocationClient　　222\n13.5 　地理围栏　　223\n13.6 　活动识别　　225\n13.7 　小结　　227\n13.8 　延伸阅读　　228\n第14章　本地代码和JNI　　229\n14.1 　关于CPU体系结构　　229\n14.2 　用C语言编写Android应用程序　　230\n14.2.1 　Android NDK编译脚本　　230\n14.2.2 　本地Activity　　231\n14.3 　使用JNI　　232\n14.3.1 　从Java调用本地函数　　232\n14.3.2 　从本地调用Java方法　　235\n14.4 　Android本地API　　238\n14.4.1 　C语言库　　238\n14.4.2 　本地Android日志　　238\n14.4.3 　本地OpenGL ES 2.0　　238\n14.4.4 　OpenSL ES中的本地音频　　239\n14.5 　移植本地库到Android　　239\n14.6 　小结　　245\n14.7 　延伸阅读　　245\n第15章　隐藏的Android API　　246\n15.1 　官方API和隐藏API　　246\n15.2 　发现隐藏API　　247\n15.3 　安全地调用隐藏API　　249\n15.3.1 　从设备中提取隐藏API　　249\n15.3.2 　使用反射调用隐藏API　　252\n15.4 　隐藏API示例　　252\n15.4.1 　接收和阅读SMS　　252\n15.4.2 　Wi-Fi网络共享　　254\n15.4.3 　隐藏设置　　255\n15.5 　小结　　256\n15.6 　延伸阅读　　256\n第16章　深入研究Android平台　　257\n16.1 　解锁设备　　258\n16.1.1 　刷新出厂映像　　259\n16.1.2 　解锁非Nexus设备　　259\n16.1.3 　社区支持的固件　　260\n16.2 　Android源码　　260\n16.2.1 　设置构建环境　　260\n16.2.2 　构建并刷新固件　　261\n16.3 　编写系统应用　　262\n16.3.1 　平台证书　　262\n16.3.2 　编写签名的应用　　263\n16.4 　探索Android平台　　265\n16.4.1 　设置IDE　　265\n16.4.2 　Android项目　　265\n16.4.3 　Android Linux Kernel　　267\n16.4.4 　添加系统服务　　267\n16.4.5 　加快平台开发周期　　270\n16.5 　为AOSP贡献代码　　271\n16.6 　小结　　273\n16.7 　延伸阅读　　273\n第17章　网络、Web服务和远程API　　274\n17.1 　Android上的网络调用　　274\n17.1.1 　HttpUrlConnection　　275\n17.1.2 　Volley　　278\n17.1.3 　OkHttp和SPDY　　280\n17.1.4 　Web Socket　　281\n17.2 　集成Web服务　　285\n17.2.1 　Google Static Maps v2　　285\n17.2.2 　使用OAuth2访问Foursquare API　　286\n17.2.3 　在Android中使用Facebook SDK　　290\n17.2.4 　寻找在线Web服务和API　　294\n17.3 　网络和功耗　　294\n17.3.1 　一般准则　　295\n17.3.2 　高效的网络轮询　　296\n17.3.3 　服务器端推送　　297\n17.4 　小结　　299\n17.5 　延伸阅读　　299\n第18章　与远程设备通信　　300\n18.1 　Android中的连接技术　　300\n18.2 　Android USB　　301\n18.3 　蓝牙低功耗　　303\n18.4 　Android Wi-Fi　　306\n18.4.1 　服务发现　　306\n18.4.2 　Wi-Fi Direct　　308\n18.5 　设备上的Web服务　　311\n18.5.1 　使用Restlet创建RESTful API　　311\n18.5.2 　Web Socket服务器　　315\n18.6 　小结　　317\n18.7 　延伸阅读　　317\n第19章　Google Play Service　　318\n19.1 　授权　　318\n19.2 　Google Drive应用程序数据　　321\n19.3 　Google Cloud Endpoint　　324\n19.4 　谷歌云消息　　327\n19.5 　Google Play Game Service　　331\n19.5.1 　数据消息　　333\n19.5.2 　消息策略　　334\n19.6 　小结　　335\n19.7 　延伸阅读　　336\n第20章　在Google Play Store发布应用　　337\n20.1 　应用内付费　　338\n20.1.1 　消费产品　　340\n20.1.2 　应用内订阅　　340\n20.2 　在应用内添加广告　　341\n20.2.1 　定位广告　　342\n20.2.2 　广告颜色　　343\n20.2.3 　插播式广告　　343\n20.3 　应用程序许可　　344\n20.4 　APK扩展文件　　345\n20.4.1 　创建扩展文件　　346\n20.4.2 　下载扩展文件　　346\n20.5 　小结　　348\n20.6 　延伸阅读　　348\n",
      "ebook_url": "http:\/\/read.douban.com\/ebook\/12185211\/",
      "pages": "348",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s28061655.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s28061655.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s28061655.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/25911738\/",
      "id": "25911738",
      "publisher": "人民邮电出版社",
      "isbn10": "7115357331",
      "isbn13": "9787115357335",
      "title": "Android编程实战",
      "url": "http:\/\/api.douban.com\/v2\/book\/25911738",
      "alt_title": "Android Programming: Pushing the Limits",
      "author_intro": "作者简介：\nErik Hellman\nFactor10咨询公司资深移动开发顾问，曾任索尼公司Android团队首席架构师，主导Xperia系列产品开发；精通移动应用、Web技术、云计算和三维图形，定期在DroidCon、JFokus、JavaOne和其他专业开发人员大会上发表演讲。关于Erik的更多信息，可访问他的博客http:\/\/blog.hellsoft.se。\n译者简介：\n丁志虎\n美团移动Android工程师。主要关注Android应用开发的各种技术，爱运动，爱coding，热衷于开源社区。\n武海峰\n美团移动应用和服务Gatekeeper。主要关注移动互联网应用和安全，热衷于开源软件和GNU\/Linux。目前正在组建一支全栈QA团队。",
      "summary": "你是否从事Android操作系统开发，会创建简单的Android应用，但想进一步提升自己的开发技巧？你是否想深入挖掘Android操作系统的特性与功能，挑战现有开发水准？你是否正在想方设法创建高级、直观、创新的Android应用？毫无疑问，这本书适合你。\n本书从自定义视图、多点触摸手势讲起，到集成在线Web服务，进一步扩展到探索地理围栏和活动识别等新技术。作为一名经验丰富的Android工程师，Erik Hellman通过本书深入剖析了一些专业技巧、诀窍、容易绊倒开发者的陷阱，以及一些鲜为人知的技术：\n优化组件，以实现尽可能流畅的用户体验\n创建自定义视图\n全面理解Android SDK\n掌握Android Studio和Gradle\n使用Android音频、视频和图形API\n文本转语音以及语音识别项目\n充分利用新的Android位置API\n使用Android连接技术与远程设备通信\n执行后台处理\n使用Android加密API\n找到并安全使用隐藏API\n使用Google Play Service为应用启用云计算\n在Google Play Store中发布和销售应用",
      "ebook_price": "29.99",
      "price": "CNY 69.00"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 15,
        "average": "7.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "吴亚峰\/\/索依娜"
      ],
      "pubdate": "2010-10",
      "tags": [
        {
          "count": 27,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 6,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 3,
          "name": "Android核心技术与实例详解",
          "title": "Android核心技术与实例详解"
        },
        {
          "count": 3,
          "name": "Java",
          "title": "Java"
        },
        {
          "count": 3,
          "name": "基础",
          "title": "基础"
        },
        {
          "count": 2,
          "name": "android",
          "title": "android"
        },
        {
          "count": 1,
          "name": "技术",
          "title": "技术"
        },
        {
          "count": 1,
          "name": "1",
          "title": "1"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s6231236.jpg",
      "binding": "",
      "translator": [],
      "catalog": "基础篇第1章  Android开发起步  1.1  Android平台简介    1.1.1  Android背景介绍    1.1.2  Android平台架构  1.2  Android开发环境的搭建    1.2.1  相关软件的下载与安装    1.2.2  虚拟设备的创建和使用    1.2.3  创建“Hello Android”    1.2.4  Android应用程序的调试  1.3  小结第2章  Android应用程序的构成  2.1  Android应用程序的解析    2.1.1  目录结构    2.1.2  资源的管理与使用    2.1.3  AndroidManifest.xml简介    2.1.4  应用程序的权限  2.2  Android基本组件的介绍    2.2.1  应用程序的生命周期    2.2.2  Activity简介    2.2.3  Service简介    2.2.4  BroadcastReceiver简介    2.2.5  ContentProvider简介    2.2.6  Intent和IntentFilter简介  2.3  小结第3章  Android布局管理器  3.1  控件类概述    3.1.1  View类简介    3.1.2  ViewGroup类简介  3.2  线性布局    3.2.1  LinearLayout类简介    3.2.2  线性布局案例  3.3  表格布局    3.3.1  TableLayout类简介    3.3.2  表格布局案例  3.4  相对布局    3.4.1  RelativeLayout类简介    3.4.2  相对布局案例  3.5  帧布局    3.5.1  FrameLayout类简介    3.5.2  帧布局案例  3.6  绝对布局    3.6.1  AbsoluteLayout类简介    3.6.2  绝对布局案例  3.7  小结第4章  Android常用基本控件  4.1  文本控件的介绍    4.1.1  TextView类简介    4.1.2  EditText类简介    4.1.3  文本框使用案例  4.2  按钮控件    4.2.1  Button类简介    4.2.2  ImageButton类简介    4.2.3  9Patch图片简介    4.2.3  9Patch图片使用案例  4.3  状态开关按钮    4.3.1  ToggleButton类简介    4.3.2  开关按钮的使用  4.4  单选按钮与复选按钮    4.4.1  CheckBox和RadioButton类简介    4.4.2  单选按钮和复选按钮使用案例  4.5  图片控件    4.5.1  ImageView类简介    4.5.2  图片查看器  4.6  时钟控件    4.6.1  AnalogClock和DigitalClock类简介    4.6.2  时钟控件使用案例  4.7  日期与时间选择控件    4.7.1  DatePicker类简介    4.7.2  TimePicker类简介    4.7.3  日期时间控件使用案例  4.8  动画播放技术    4.8.1  帧动画简介    4.8.2  帧动画使用案例    4.8.3  补间动画简介    4.8.4  补间动画使用案例  4.9  小结  ……第5章  Android常用高级控件第6章  菜单与对话框高 级 篇第7章  Android事件处理模型第8章  游戏与3D应用程序开发第9章  消息广播与服务第10章  网络与数据处理第11章  手机通信功能开发第12章  手机特有Feature开发第13章  桌面组件与多媒体数据采集第14章  传感器应用的开发第15章  Google服务第16章  Android游戏开发实践——快乐数独案例篇第17章  Android地图搜索应用——美食天下第18章  Android社交分享平台——口袋微博",
      "pages": "544",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s6231236.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s6231236.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s6231236.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/5351836\/",
      "id": "5351836",
      "publisher": "电子工业",
      "isbn10": "7121117924",
      "isbn13": "9787121117923",
      "title": "Android核心技术与实例详解",
      "url": "http:\/\/api.douban.com\/v2\/book\/5351836",
      "alt_title": "",
      "author_intro": "吴亚峰，毕业于北京邮电大学，后留学澳大利亚卧龙岗大学取得硕士学位，1998年开始从事Java的开发，有十多年的Java开发经验与培训经验，主要的研究方向是Java EE。现在为Java EE独立软件开发工程师，同时兼任Sun授权、Java培训中心认证教师，为数十家著名企业培训了上千名软件开发人员，曾编写过《精通NetBeans——Java桌面、Web与企业级程序开发详解》及《Java SE 6.0编程指南》等畅销技术书籍。\n    索依娜：毕业于燕山大学，有软件领域6年的从业经验，在软件开发和计算机教学方面有着丰富的经验。工作期间曾参与省级科研项目2项，市级项目1项；教改项目2项。同时，为多个厂矿企业设计、开发了信息系统，在JavaEE及SOA领域颇有建树。",
      "summary": "《Android核心技术与实例详解》以Android应用程序的开发为主题，并结合真实的案例向读者详细介绍了.Android的基本组件的使用及应用程序开发的整个流程。全书分为三篇共18章，第一篇以简单易懂的实例为依托，详细介绍了Android平台的基本控件、高级控件、常用界面布局及菜单对话框等相关知识；第二篇介绍了Android平台的高级知识，包括消息与广播服务、网络数据处理、手机通信功能、桌面组件、多媒体采集、Google服务及3D程序开发等；第三篇则对三个真实案例的开发步骤进行详细介绍，逐步向读者讲解Android手机应用程序的真实开发过程，同时在源代码中还包含了详细的注释，以尽量帮助读者掌握代码中的每一个细节，尽快掌握Andr.oid编程。\n《Android核心技术与实例详解》的讲述由浅入深，从介绍Android平台的基本组件到带领读者开发大型应用程序，结构清晰、语言简洁，非常适合初学者和进阶开发者阅读参考。\n《Android核心技术与实例详解》附赠DVD光盘1张，其中包含了大容量的手把手教学视频、电子教案（PPT）、实例源代码等。未经许可，不得以任何方式复制或抄袭《Android核心技术与实例详解》之部分或全部内容。",
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 22,
        "average": "6.4",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "姚尚朗",
        "靳岩",
        "等"
      ],
      "pubdate": "2013-6-1",
      "tags": [
        {
          "count": 17,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 10,
          "name": "Android开发",
          "title": "Android开发"
        },
        {
          "count": 7,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 3,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 1,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 1,
          "name": "q",
          "title": "q"
        },
        {
          "count": 1,
          "name": "暑期学习。。。。。。",
          "title": "暑期学习。。。。。。"
        },
        {
          "count": 1,
          "name": "烂书",
          "title": "烂书"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s27308766.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "第1章 掀起你的盖头来——Android开发扫盲\n1.1 Android行业概述\n1.1.1 Android缘起\n1.1.2 Android市场发展轨迹\n1.1.3 Android SDK发布里程碑\n1.2 Android开发概述\n1.2.1 Android开发生态链\n1.2.2 Android国内开发者现况\n1.3 Android开发资源\n1.3.1 Android开发线上社区\n1.3.2 Android学习资料\n1.3.3 Android开发线下活动\n1.4 本章小结\n第2章 工欲善其事必先利其器——搭建环境Android\n2.1 开发Android应用前的准备\n2.1.1 操作系统要求\n2.1.2 Android软件开发包\n2.2 Windows开发环境搭建\n2.2.1 安装JDK\n2.2.2 安装Eclipse\n2.2.3 安装Android SDK\n2.2.4 安装ADT\n2.2.5 真实体验——创建Android虚拟设备（AVD）\n2.3 Linux一族——Ubuntu开发环境搭建\n2.3.1 安装JDK\n2.3.2 安装Eclipse\n2.3.3 安装Android SDK\n2.3.4 安装ADT\n2.3.5 创建Android虚拟设备（AVD）\n2.4 Mac OS一族——苹果开发环境搭建\n2.5 本章小结\n第3章 清点可用的资本——Android SDK介绍\n3.1 Android SDK概要\n3.2 深入探索Android SDK的密秘\n3.2.1 Android SDK的目录结构\n3.2.2 android.jar及其内部结构\n3.2.3 SDK文档及阅读技巧\n3.2.4 先来热身——Android SDK例子解析\n3.2.5 SDK提供的工具介绍\n3.3 Android典型包分析\n3.3.1 开发基石——Android API核心开发包介绍\n3.3.2 拓展开发外延——Android可选API介绍\n3.4 本章小结\n第4章 千里之行始于足下——Hello EoE\n4.1 Hello EoE应用分析\n4.1.1 新建一个Android项目\n4.1.2 Android项目目录结构\n4.1.3 运行项目\n4.2 调试项目\n4.2.1 设置断点\n4.2.2 Debug项目\n4.2.3 断点调试\n4.3 本章小结\n第5章 良好的学习开端——Android应用程序架构分析\n5.1 Android系统架构\n5.1.1 Applications（应用程序层）\n5.1.2 Application Framework（应用程序框架层）\n5.1.3 Libraries Android Runtime（库以及Android运行环境）\n5.1.4 Linux Kernel（Linux 内核）\n5.2 Android应用程序工程结构分析\n5.2.1 应用程序工程结构组成分析\n5.2.2 AndroidMainfest文件分析\n5.3 本章小结\n第6章 Android的核心——Activity\n6.1 什么是Activity\n6.2 Activity的生命周期\n6.3 Activity的监控范围内的三个主要循环\n6.4 Activity拥有四个基本的状态\n6.5 Task、栈以及加载模式\n6.6 配置改变\n6.7 如何保存和恢复Activity状态\n6.8 启动Activity并得到结果\n6.9 Activity小实例\n6.10 本章小结\n第7章 我来“广播”你的意图——Intent & Intent Filters & Broadcast Receivers\n7.1 什么是Intent\n7.2 Intent结构\n7.3 Intent的两种类型\n7.3.1 显式Intent\n7.3.2 隐式Intent\n7.4 什么是Intent Filter\n7.5 什么是Broadcast Receiver\n7.6 如何创建BroadcastReceiver\n7.7 BroadcastReceiver生命周期\n7.8 广播类型\n7.9 Intent&BroadcastReceiver\n7.10 本章小结\n第8章 一切为用户服务——Service\n8.1 什么是Service\n8.2 Service的两种形式\n8.3 如何创建Service\n8.3.1 创建启动形式Service\n8.3.2 创建绑定形式Service\n8.4 Service的生命周期\n8.5 Service小实例\n8.5.1 启动形式Service\n8.5.2 绑定形式Service\n8.6 本章小结\n第9章 提供数据的引擎——Content Providers\n9.1 什么是ContentProviders\n9.2 什么是ContentResolver\n9.3 如何调用系统的ContentProvider\n9.4 如何使用ContentResolver访问自定义ContentProvider\n9.5 本章小结\n第10章 我的美丽我做主——用户界面（User Interface）\n10.1 布局——Layout\n10.1.1 线性布局——Linear Layout\n10.1.2 相对布局——Relative Layout\n10.2 列表视图\n10.2.1 列视图——Listview\n10.2.2 表视图——GridView\n10.3 输入控件——Input Controls\n10.3.1 基本输入控件\n10.3.2 对话框控件——Dialog\n10.4 菜单——Menu\n10.5 活动栏——Action Bar\n10.6 通知——Notifications\n10.7 本章小结\n第11章 循序渐进——线程&进程\n11.1 线程（Thread）&进程（Process）概念\n11.2 线程、进程与Android系统组件的关系\n11.3 实现多线程的方式\n11.3.1 Thread\n11.3.2 AsyncTask\n11.4 本章小结\n第12章 信息百宝箱——全面数据存储\n12.1 SharedPreferences（分享爱好）\n12.1.1 相识SharedPreferences\n12.1.2 保存数据\n12.1.3 删除数据\n12.1.4 修改数据\n12.1.5 查询数据\n12.1.6 监听数据变化\n12.2 流文件存储\n12.2.1 基本方法简介\n12.2.2 存储流程图\n12.2.3 数据保存和查询的实例\n12.3 实战db4o数据库\n12.4 SQLite数据库\n12.4.1 什么是SQLite数据库\n12.4.2 Android中的SQLite\n12.4.3 SQLiteOpenHelper\n12.4.4 创建或打开数据库\n12.4.5 关闭数据库\n12.4.6 创建数据表\n12.4.7 删除数据表\n12.4.8 增加数据\n12.4.9 查询数据\n12.4.10 修改数据\n12.4.11 删除数据\n12.4.12 事务\n12.4.13 SQLite可视化管理工具\n12.4.14 图片的保存和查询\n12.5 记事本实例\n12.5.1 创建主界面\n12.5.2 添加内容界面的创建\n12.5.3 保存数据\n12.5.4 以列表的形式查询数据\n12.5.5 选项的菜单\n12.5.6 “查看”选项的事件\n12.5.7 “修改”选项的事件\n12.5.8 “删除”选项的事件\n12.6 本章小结\n第13章 不积跬步无以至千里——Widget\n13.1 认识Widget\n13.2 使用Widget\n13.3 Widget生命周期\n13.4 Widget设计向导\n13.4.1 添加配置页面\n13.4.2 Widget设计向导\n13.5 Widget实例——eoeWikiRecent Widget\n13.6 本章小结\n第14章 更上一层楼——网络通信和XML解析\n14.1 Android网络通信基础\n14.1.1 Apache网络接口\n14.1.2 标准Java网络接口\n14.1.3 Android网络接口\n14.2 基于HTTP协议的网络通信\n14.2.1 HTTP介绍\n14.2.2 使用Apache接口\n14.2.3 使用标准Java接口\n14.2.4 总结\n14.3 基于Socket的网络通信\n14.3.1 Socket介绍\n14.3.2 Android Socket编程\n14.4 XML解析技术介绍\n14.4.1 DOM方式\n14.4.2 SAX方式\n14.4.3 PULL方式\n14.5 本章小结\n第15章 灵活的应用\n15.1 Android自定义UI控件\n15.1.1 Android UI结构\n15.1.2 Android 绘制View的原理\n15.1.3 Android 自定义控件分析\n15.1.4 Android自定义控件小结\n15.2 片段（Fragment）布局\n15.2.1 Fragment简介\n15.2.2 Fragment设计理念\n15.2.3 创建一个Fragment\n15.2.4 添加用户界面\n15.2.5 向活动中添加一个片段\n15.2.6 添加没有UI的片段\n15.2.7 管理片段\n15.2.8 执行片段事务（Fragment Transaction）\n15.2.9 和活动进行通信\n15.2.10 小结\n15.3 画布和画笔\n15.3.1 画布简介\n15.3.2 画笔简介\n15.3.3 例子\n15.4 本章小结\n第16章 万变不离其宗——多设备适配\n16.1 多屏幕适配\n16.1.1 屏幕适配概述\n16.1.2 屏幕的分类\n16.1.3 如何支持多屏幕\n16.1.4 从项目中怎么适配多屏幕\n16.2 多语言处理\n16.2.1 多语言处理概述\n16.2.2 多语言在程序中的实现\n16.3 多版本处理\n16.3.1 支持不同的版本\n16.3.2 设备运行时检查系统的版本\n第17章 开发好应用——省电、布局、快速响应、NFC、Android bean等好玩的应用\n17.1 开发省电的应用\n17.1.1 数据传输时避免浪费电量\n17.1.2 电池续航时间优化\n17.2 近距离无线通信——NFC\n17.2.1 近距离无线通信——NFC概述\n17.2.2 近距离无线通信——NFC基础\n17.2.3 Android对NFC的支持\n17.2.4 Android应用中实现NFC\n17.3 本章小结\n第18章 没有规矩不成方圆——Android UI设计规范\n18.1 UI设计概述\n18.1.1 Android UI设计概述\n18.1.2 自成体系的风格设计\n18.2 UI设计原则（Design Principles）\n18.2.1 让我着迷-Enchant Me\n18.2.2 简化我的生活-Simplify My Life\n18.2.3 让我感到惊奇-Make Me Amazing\n18.3 UI设计规范\n18.3.1 应用结构规范\n18.3.2 导航规范\n18.3.3 通知规范\n18.4 本章小结\n第19章 综合案例一——图书信息查询\n19.1 项目介绍\n19.2 ZXing\n19.2.1 ZXing介绍\n19.2.2 ZXing调用流程\n19.3 豆瓣图书API\n19.3.1 豆瓣图书API介绍\n19.3.2 豆瓣图书API调用流程\n19.4 项目效果图\n19.5 项目编码\n19.5.1 实体类\n19.5.2 欢迎界面\n19.5.3 数据下载\n19.5.4 数据解析\n19.5.5 信息显示界面\n19.6 本章小结\n第20章 综合案例二——eoe Wiki客户端\n20.1 背景与简介\n20.1.1 eoe Wiki网站\n20.1.2 eoe Wiki客户端\n20.2 项目设计\n20.2.1 原型图设计\n20.2.2 流程图设计\n20.3 功能模块\n20.3.1 项目目录结构\n20.3.2 滑块特效\n20.3.3 网络交互\n20.3.4 JSON数据解析\n20.3.5 数据库与缓存\n20.4 最终演示\n20.5 本章小结\n第21章 综合案例三——广告查查看看\n21.1 产品开发背景\n21.2 产品功能简介\n21.3 本章小结\n第22章 综合案例四——手机信息小助手\n22.1 背景与简介\n22.1.1 应用背景与简介\n22.1.2 手机信息小助手功能规划\n22.2 手机信息小助手编码实现\n22.2.1 手机信息小助手主界面\n22.2.2 系统信息\n22.2.3 硬件信息\n22.2.4 软件信息\n22.2.5 运行时信息\n22.2.6 文件浏览器\n22.3 项目细节完善\n22.4 手机信息小助手功能展望\n22.5 本章小结\n第23章 综合案例五——“土地浏览器”实例\n23.1 土地浏览器简介\n23.1.1 为什么要开发土地浏览器\n23.1.2 土地浏览器的基本功能\n23.2 土地浏览器的设计\n23.3 土地浏览器的开发过程\n23.3.1 启动界面的开发\n23.3.2 网址输入栏的设计\n23.3.3 网址输入栏的触屏弹出和收缩\n23.3.4 网址的获取\n23.3.5 如何在本程序中打开浏览器\n23.3.6 网站标题的获取\n23.3.7 网站图标的获取\n23.3.8 网站打开进度的获得\n23.3.9 网页网址的获得\n23.3.10 网页的触屏滑动翻页\n23.3.11 网页缩放\n23.3.12 书签和历史记录\n23.3.13 底部菜单\n23.3.14 关于设置\n23.3.15 皮肤\n23.3.16 壁纸设置\n23.3.17 主页设置\n23.3.18 JavaScript设置\n23.3.19 缓存设置\n23.3.20 缓存删除\n23.3.21 其他\n23.4 本章小结\n第24章 综合案例六——地图跟踪\n24.1 百度地图示例应用分析\n24.1.1 百度地图SDK开发准备\n24.1.2 百度地图示例程序讲解\n24.2 本章小结\n后记",
      "ebook_url": "http:\/\/read.douban.com\/ebook\/13055894\/",
      "pages": "377",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s27308766.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s27308766.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s27308766.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/24701842\/",
      "id": "24701842",
      "publisher": "人民邮电出版社",
      "isbn10": "7115314640",
      "isbn13": "9787115314642",
      "title": "Android开发入门与实战",
      "url": "http:\/\/api.douban.com\/v2\/book\/24701842",
      "alt_title": "",
      "author_intro": "eoe移动开发者社区： eoe.cn是国内成立最早、规模最大的中文移动开发者社区，2009年4月上线。社区涵盖问答、博客、图书、资料下载、沙龙活动、在线课堂、线下训练营等模块。eoe相信技术可以改变世界，致力于让每个人成为优秀的移动开发者，截至2012年12月，累计帮助开发者学习移动开发技术逾100万人次。\n姚尚朗 (@IceskYsl)80后，创业者，eoe联合创始人，Google产品重度依赖者，对移动互联网发展趋势有独特见解并以实践积极探索之。著《Google Android开发入门与实战》,《Google API大全 编程.开发.实例》，《It's Android TIME：Google Android创赢路线与产品开发实战》，译《The Rails Way》。随性，自由，喜欢背包去陌生的地方旅行，乐交朋友。博客: http:\/\/www.iceskysl.com\/ 微博: @Iceskysl",
      "summary": "《Android 开发入门与实战(第二版)》遵循第一版的写作宗旨，通过本书的学习，让不懂Android开发的人系统地快速掌握Android开发的知识。《Android 开发入门与实战(第二版)》主要内容为：Android开发环境搭建、Android SDK介绍、Android应用程序结构剖析，并对Android 中最重要的组件Activity、Intents&Intent Filters&Broadcast receivers、Intent、Service、Content Providers进行了详细的讲解；然后对线程&进程、数据存储、Widget、网络通信和XML解析、多设备适配、Android UI Design（设计规范）等核心技术和读者关心的流行技术结合实例进行了详细讲解；最后精选了6个真实的案例，如图书信息查询、eoe Wiki客户端、广告查查看看、手机信息小助手、土地浏览器、地图追踪，让读者把各种技术贯穿起来，达到学以致用的目的。\n书中内容的安排循序渐进、由浅到深，跟随本书的步调，一定可以学会Android开发。《Android 开发入门与实战(第二版)》除了理论知识的介绍和演示外，还加入很多实战经验技巧和实战案例剖析，让大家在学习的时候能理论结合实战，融会贯通，真正掌握Android的开发技术。",
      "ebook_price": "35.40",
      "price": "59.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 16,
        "average": "7.6",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Satya Komatineni",
        "Dave MacLean "
      ],
      "pubdate": "2012-3-7",
      "tags": [
        {
          "count": 30,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 6,
          "name": "Programming",
          "title": "Programming"
        },
        {
          "count": 4,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 3,
          "name": "Pro",
          "title": "Pro"
        },
        {
          "count": 2,
          "name": "android",
          "title": "android"
        },
        {
          "count": 2,
          "name": "2012",
          "title": "2012"
        },
        {
          "count": 2,
          "name": "Apress",
          "title": "Apress"
        },
        {
          "count": 1,
          "name": "软件-互联网",
          "title": "软件-互联网"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s24394368.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "1020",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s24394368.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s24394368.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s24394368.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/10538023\/",
      "id": "10538023",
      "publisher": "Apress",
      "isbn10": "1430239301",
      "isbn13": "9781430239307",
      "title": "Pro Android 4",
      "url": "http:\/\/api.douban.com\/v2\/book\/10538023",
      "alt_title": "",
      "author_intro": "",
      "summary": "Pro Android 4 shows you how to build real-world and fun mobile apps using the new Android SDK 4 (Ice Cream Sandwich), which unifies Gingerbread for smartphones, Honeycomb for tablets and augments further with Google TV and more. This Android 4 book updates the best selling Pro Android 3 and covers everything from the fundamentals of building apps for embedded devices, smartphones, and tablets to advanced concepts such as custom 3D components, multi-tasking, sensors\/augmented reality, better accessories support and much more. * Using the tutorials and expert advice, you'll quickly be able to build cool mobile apps and run them on dozens of Android-based smartphones. * You'll explore and use the Android APIs, including those for media and sensors. * And you'll check out what's new with Android 4, including the improved user interface across all Android platforms, integration with services, and more. After reading this definitive tutorial and reference, you gain the knowledge and experience to create stunning, cutting-edge Android 4 apps that can make you money, while keeping you agile enough to respond to changes in the future. What you'll learn * How to use Android 4 to build Java-based mobile apps for Android smartphones and tablets * How to build irresistible standard and custom User Interfaces and User Experiences (UI and UX) across Android devices * How to populate your application with data from data sources, using Content Providers * How to build multimedia and game apps using Android's media APIs * How to use Android's location-based services, network-based services, and security * How to use new Android features, such as Fragments and the ActionBar Who this book is for This book is for professional software engineers and programmers looking to move their ideas and applications into the mobile space with Android. It assumes a passable understanding of Java, including how to write classes and handle basic inheritance structures. Table of Contents * Introducing the Android Computing Platform * Setting up Your Development Environment * Understanding Resources * Understanding Content Providers * Understanding Intents * Building User Interfaces and Using Controls * Adding Menus * Fragments * Dialogs: Regular and Fragment * Action Bar * Advanced Debugging and Analysis * Responding to Configuration Changes * Working with Preferences and Saving State * Security and Permissions * Working with Services * Exploring Packages, Processes, and Library Projects * Exploring Processes, Components, Threads, and Handlers * Advanced Async Task * Exploring Broadcast Receivers and Long Running Services * Exploring the Alarm Manager * Unveiling 2D Animation * Exploring Maps and Location Services * Using the Telephony APIs * Understanding the Media Frameworks * Home Screen Widgets * Home Screen List Widgets * Android Search User Experience * Drag and Drop * Using Sensors * Understanding the Contacts API * Deploying your Application: Android Market and Beyond",
      "price": "USD 49.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 23,
        "average": "7.4",
        "min": 0
      },
      "subtitle": "Introducing Google's Mobile Development Platform",
      "author": [
        "Ed Burnette"
      ],
      "pubdate": "2010-8-4",
      "tags": [
        {
          "count": 16,
          "name": "android",
          "title": "android"
        },
        {
          "count": 6,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 3,
          "name": "移动开发",
          "title": "移动开发"
        },
        {
          "count": 2,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 2,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 2,
          "name": "英文原版",
          "title": "英文原版"
        },
        {
          "count": 2,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 1,
          "name": "计算机技术",
          "title": "计算机技术"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s4496913.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "300",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4496913.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4496913.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4496913.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/5314243\/",
      "id": "5314243",
      "publisher": "Pragmatic Bookshelf",
      "isbn10": "1934356565",
      "isbn13": "9781934356562",
      "title": "Hello, Android",
      "url": "http:\/\/api.douban.com\/v2\/book\/5314243",
      "alt_title": "",
      "author_intro": "",
      "summary": "Android is a software toolkit for mobile phones, created by Google and the Open Handset Alliance. It's inside millions of cell phones and other mobile devices, making Android a major platform for application developers. That could be your own program running on all those devices.\n\n Within minutes,  Hello, Android  will get you started creating your first working application: Android's version of \"Hello, World.\" From there, you'll build up a more substantial example: an Android Sudoku game. By gradually adding features to the game, you'll learn the basics of Android programming. You'll also see how to build in audio and video support, add graphics using 2D and 3D OpenGL, network with web pages and web services, and store data with SQLite. You'll also learn how to publish your applications to the Android Market.\n\n The #1 book for learning Android is now in its third edition. Every page and example was reviewed and updated for compatibility with the latest versions. Freshly added material covers installing applications to the SD card, supporting multi-touch, and creating live wallpaper. You'll also find plenty of real-world advice on how to support all the Android versions in use today-everything from Cupcake (Android 1.5) to FroYo (Android 2.2) and beyond.\n\n If you'd rather be coding than reading about coding, this book is for you.",
      "price": "USD 34.95"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 11,
        "average": "7.2",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Sylvain Ratabouil"
      ],
      "pubdate": "2012-1-26",
      "tags": [
        {
          "count": 23,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 18,
          "name": "NDK",
          "title": "NDK"
        },
        {
          "count": 5,
          "name": "Programming",
          "title": "Programming"
        },
        {
          "count": 4,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 4,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 2,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 2,
          "name": "mobile",
          "title": "mobile"
        },
        {
          "count": 1,
          "name": "ndk",
          "title": "ndk"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s7444809.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "What you will learn from this book :\nJump in the starting block and create your first Android native project\nCommunicate with Java through Java Native Interfaces\nDisplay 2D and 3D graphics with OpenGL ES\nPlay sound and music with OpenSL ES\nManage Android input and sensors\nDebug applications and discover advanced ARM instructions\nPort existing C\/C++ code to Android\nCombine graphics, sound, input, sensors and physics in your application",
      "pages": "436",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s7444809.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s7444809.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s7444809.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6868985\/",
      "id": "6868985",
      "publisher": "Packt Publishing",
      "isbn10": "1849691525",
      "isbn13": "9781849691529",
      "title": "Android NDK Beginner's Guide",
      "url": "http:\/\/api.douban.com\/v2\/book\/6868985",
      "alt_title": "",
      "author_intro": "ylvain Ratabouil is a confirmed IT consultant experienced with Java and C++ technologies. He worked in his earlier years in the development of control centers for the space industry at Communication & Systèmes. He then got involved in Aeronautic industry projects at Valtech Technologies, where he now takes part in the digital revolution.\nSylvain earned a Masters degree from the IUP ISI curriculum at Paul Sabatier University in Toulouse and an MSC in Computer Science from Liverpool University.\nAs a technology lover, he is passionate about mobile technologies and cannot live without his Android smart-phone.",
      "summary": "Android NDK is all about injecting high performance into your apps. Exploit the maximum power of these mobile devices using high-performance and portable code.\nThis book will show you how to create C\/C++ enabled applications and integrate them with Java. You will learn how to access native API and port libraries used in some of the most successful Android applications.\nUsing this practical step-by-step tutorial, highlighted with comments and tricks, discover how to run C\/C++ code embedded in a Java application or in a standalone application. You will create a real native application starting from project creation through to full implementation of native API and the porting of existing third-party libraries. You will discover OpenGL ES and OpenSL ES, which are becoming the new standard in mobility. You will also understand how to access keyboard and input peripherals and how to read accelerometer or orientation sensors. Finally, you will dive into more advanced topics such as debugging and ARM assembler instructions. By the end of the book, you should know the key elements to enable you to start exploiting the power and portability of native code.",
      "price": "USD 49.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 8,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "邓凡平"
      ],
      "pubdate": "2014-4-15",
      "tags": [
        {
          "count": 17,
          "name": "android",
          "title": "android"
        },
        {
          "count": 8,
          "name": "WIFI",
          "title": "WIFI"
        },
        {
          "count": 7,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 4,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 4,
          "name": "IT",
          "title": "IT"
        },
        {
          "count": 2,
          "name": "深入理解",
          "title": "深入理解"
        },
        {
          "count": 1,
          "name": "no_ebook",
          "title": "no_ebook"
        },
        {
          "count": 1,
          "name": "已经有了",
          "title": "已经有了"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s27257261.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "前　言\n第1章　准备工作  1\n1.1?Android系统架构  2\n1.2　工具使用  2\n1.2.1　Source Insight的使用  3\n1.2.2　Eclipse的使用  3\n1.2.3　BusyBox的使用  7\n1.3?本书资源下载说明  8\n第2章　深入理解Netd  9\n2.1?概述  10\n2.2?Netd工作流程  10\n2.2.1?main函数分析  11\n2.2.2?NetlinkManager分析  12\n2.2.3?CommandListener分析  16\n2.2.4?DnsProxyListener分析  18\n2.2.5?MDnsSdListener分析  21\n2.3?CommandListener中的命令  26\n2.3.1?iptables、tc和ip命令  27\n2.3.2?CommandListener构造函数和测试工具ndc  31\n2.3.3?InterfaceCmd命令  33\n2.3.4?IpFwd和FirewallCmd命令  40\n2.3.5?ListTtysCmd和PppdCmd命令  43\n2.3.6?BandwidthControlCmd和IdletimerControlCmd命令  45\n2.3.7?NatCmd命令  47\n2.3.8?TetherCmd和SoftapCmd命令  49\n2.3.9?ResolverCmd命令  54\n2.4?NetworkManagementService介绍  55\n2.4.1?create函数详解  55\n2.4.2?systemReady函数详解  57\n2.5?本章总结和参考资料说明  58\n2.5.1?本章总结  58\n2.5.2?参考资料说明  58\n第3章　Wi-Fi基础知识  62\n3.1?概述  63\n3.2?无线电频谱和802.11协议的发展历程  63\n3.2.1?无线电频谱知识  63\n3.2.2?IEEE 802.11发展历程  64\n3.3?802.11无线网络技术  66\n3.3.1?OSI基本参考模型及相关基本概念  66\n3.3.2?802.11知识点导读  73\n3.3.3?802.11组件  74\n3.3.4?802.11 Service介绍  77\n3.3.5?802.11 MAC服务和帧  82\n3.3.6?802.11 MAC管理实体  98\n3.3.7?无线网络安全技术知识点  105\n3.4　Linux Wi-Fi编程API介绍  121\n3.4.1　Linux Wireless Extensions介绍  122\n3.4.2　nl80211介绍  125\n3.5　本章总结和参考资料说明  135\n3.5.1　本章总结  135\n3.5.2　参考资料说明  136\n第4章　深入理解wpa_supplicant  140\n4.1　概述  142\n4.2　初识wpa_supplicant  144\n4.2.1　wpa_supplicant架构  144\n4.2.2　wpa_supplicant编译配置  145\n4.2.3　wpa_supplicant命令和控制API  146\n4.2.4　git的使用  149\n4.3　wpa_supplicant初始化流程  149\n4.3.1　main函数分析  150\n4.3.2　wpa_supplicant_init函数分析  153\n4.3.3　wpa_supplicant_add_iface函数分析  158\n4.3.4　wpa_supplicant_init_iface函数分析  164\n4.4　EAP和EAPOL模块  191\n4.4.1　EAP模块分析  191\n4.4.2　EAPOL模块分析  202\n4.5　wpa_supplicant连接无线网络分析  212\n4.5.1　ADD_NETWORK命令处理  214\n4.5.2　SET_NETWORK命令处理  216\n4.5.3　ENABLE_NETWORK命令处理  218\n4.6　本章总结和参考资料说明  264\n4.6.1　本章总结  264\n4.6.2　参考资料说明  264\n第5章　深入理解WifiService  267\n5.1　概述  268\n5.2　WifiService的创建及初始化  268\n5.2.1　HSM和AsyncChannel介绍  269\n5.2.2　WifiService构造函数分析  276\n5.2.3　WifiStateMachine介绍  277\n5.3　加入无线网络分析  287\n5.3.1　Settings操作Wi-Fi分析  288\n5.3.2　WifiService操作Wi-Fi分析  295\n5.4　WifiWatchdogStateMachine介绍  312\n5.5　Captive Portal Check介绍  316\n5.6　本章总结和参考资料说明  320\n5.6.1　本章总结  320\n5.6.2　参考资料说明  320\n第6章　深入理解Wi-Fi Simple Configuration  321\n6.1　概述  322\n6.2　WSC基础知识  322\n6.2.1　WSC应用场景  323\n6.2.2　WSC核心组件及接口  325\n6.3　Registration Protocol详解  326\n6.3.1　WSC IE和Attribute介绍  328\n6.3.2　802.11管理帧WSC IE设置  331\n6.3.3　EAP-WSC介绍  335\n6.4　WSC代码分析  343\n6.4.1　Settings中的WSC处理  343\n6.4.2　 WifiStateMachine的处理  345\n6.4.3　wpa_supplicant中的WSC处理  347\n6.4.4　EAP-WSC处理流程分析  356\n6.5　本章总结和参考资料说明  370\n6.5.1　本章总结  370\n6.5.2　参考资料说明  370\n第7章　深入理解Wi-Fi P2P  371\n7.1　概述  372\n7.2　P2P基础知识  372\n7.2.1　P2P架构  372\n7.2.2　P2P Discovery技术  374\n7.2.3　P2P工作流程  389\n7.3　WifiP2pSettings和WifiP2pService介绍  392\n7.3.1　WifiP2pSettings工作流程  392\n7.3.2　WifiP2pService工作流程  397\n7.4　wpa_supplicant中的P2P  408\n7.4.1　P2P模块初始化  409\n7.4.2　P2P Device Discovery流程分析  416\n7.4.3　Provision Discovery流程分析  426\n7.4.4　GO Negotiation流程分析  433\n7.5　本章总结和参考资料说明  441\n7.5.1　本章总结  441\n7.5.2　参考资料说明  441\n第8章　深入理解NFC  443\n8.1　概述  444\n8.2　NFC基础知识  444\n8.2.1　NFC概述  445\n8.2.2　NFC R\/W运行模式  448\n8.2.3　NFC P2P运行模式  453\n8.2.4　NFC CE运行模式  459\n8.2.5　NCI原理  462\n8.2.6　NFC相关规范  464\n8.3　Android中的NFC  464\n8.3.1　NFC应用示例  465\n8.3.2　NFC系统模块  478\n8.4　NFC HAL层讨论  498\n8.5　本章总结和参考资料说明  500\n8.5.1　本章总结  500\n8.5.2　参考资料说明  500\n第9章　深入理解GPS  503\n9.1　概述  504\n9.2　GPS基础知识  504\n9.2.1　卫星导航基本原理  505\n9.2.2　GPS系统组成及原理  513\n9.2.3　OMA-SUPL协议  532\n9.3　Android中的位置管理  536\n9.3.1　LocationManager架构  536\n9.3.2　LocationManager应用示例  538\n9.3.3　LocationManager系统模块  541\n9.4　本章总结和参考资料说明  570\n9.4.1　本章总结  570\n9.4.2　参考资料说明  570\n附录  574",
      "pages": "575",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s27257261.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s27257261.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s27257261.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/25863872\/",
      "id": "25863872",
      "publisher": "机械工业出版社",
      "isbn10": "7111456831",
      "isbn13": "9787111456834",
      "title": "深入理解Android：Wi-Fi、NFC和GPS卷",
      "url": "http:\/\/api.douban.com\/v2\/book\/25863872",
      "alt_title": "",
      "author_intro": "邓凡平 资深Android系统工程师，对Android系统的设计与实现有非常深入的研究，曾担任Tieto公司高级软件架构师。畅销书“深入理解Android”系列的总策划和主笔，出版有畅销书《深入理解Android：卷I》和《深入理解Android：卷II》。喜欢钻研，乐于分享，活跃于CSDN、51CTO和开源中国等专业技术社区，撰写的Android Framework源码分析的系列文章深受读者欢迎。2013年荣获51CTO读书频道评选的“最受读者喜爱的IT图书作者奖”。",
      "summary": "本书是经典畅销书“深入理解Android”系列的新作，由资深Android系统专家邓凡平先生撰写，全志和高通等公司资深专家担任技术审校并强烈推荐。从通信专业知识和Android系统代码实现的角度，对Netd、Wi-Fi、NFC和GPS等模块的代码进行深入的剖析，旨在深刻揭示其实现原理和工作流程。其中涉及大量通信相关的专业知识，因此特意邀请全志和高通等著名芯片公司的资深专家担任技术审校。本书从实际应用的需求出发，适合所有Android系统工程师、Android应用开发工程师和BSP开发工程师阅读。\n全书共9章。第1章介绍本书的内容组成、工具使用以及参考源码的下载方法。第2章介绍Netd及相关的背景知识。第3～5章介绍Wi-Fi基础知识，重点分析了wpa_supplicant的实现，以及Android平台中特有的Wi-Fi服务模块WifiService。第6～7章讲解了Wi-Fi联盟推出的两项重要技术Wi-Fi Simple Configuration和Wi-Fi P2P，以及它们在Android平台中的代码实现。第8章详细介绍了NFC基础知识，以及NFC在Android平台中的代码实现。第9章讲解了GPS原理及Android平台中的位置管理服务架构。\n本书主要内容及特色：\n本书所讲解的Wi-Fi、NFC以及GPS模块的背后都涉及非常多的专业知识，例如与Wi-Fi相关的802.11协议、Wi-Fi Alliance（Wi-Fi联盟）定义的Wi-Fi Simple Configuration和Wi-Fi P2P协议、NFC Forum定义的一整套与NFC相关的协议、与GPS相关的卫星导航原理、AGPS和OMA-SUPL协议等。显然，如果不了解这些专业知识，就不可能真正掌握它们在Android平台中的代码实现。\n考虑到这些专业知识的重要性，本书在讲解Android平台中Wi-Fi、NFC和GPS模块的实现之前，先重点介绍与代码相关的专业知识。当然，这些专业知识内容如此丰富，在一本书中无法全部涵盖。为了方便读者进一步深入学习，本书每章的最后都会列举笔者在撰写各章时所阅读的参考资料。\n以下是本书的内容概述。\n第1章介绍本书的内容组成、使用的工具以及参考源码的下载方法。\n第2章介绍Netd以及相关的背景知识。\n第3章介绍Wi-Fi基础知识。Wi-Fi是本章的重点，而且也是当下最热门的技术。\n第4章介绍wpa_supplicant，它是Wi-Fi领域中最核心的软件实现。\n第5章介绍WifiService，它是Android平台中特有的Wi-Fi服务模块。\n第6章和第7章介绍Wi-Fi Alliance推出的两项重要技术——Wi-Fi Simple Configuration和Wi-Fi P2P，以及它们在Android平台中的代码实现。\n第8章介绍NFC背景知识以及NFC在Android平台中的代码实现。NFC也是历史比较悠久的技术，希望它能随着Android的普及而走向大众。\n第9章介绍GPS原理及Android平台中的位置管理服务架构。\n附录为笔者和审稿专家之一的吴劲良先生关于本书定位、学习方法等方面的讨论。相信这些讨论内容能引起读者的共鸣。\n本书通过理论和代码相结合的方式进行讲解，旨在引领读者一步步了解Wi-Fi、NFC和GPS模块的工作原理。总之，笔者希望读者在阅读完本书后能有以下收获。\n初步掌握Wi-Fi、NFC和GPS的专业知识。\n根据其实现代码，进一步加深对这些专业知识的理解。\n读者对象：\n适合阅读本书的读者包括：\nAndroid系统开发工程师\n系统开发工程师常常需要深入理解系统的运转过程，而本书所涉及的内容正是他们在工作和学习中最想了解的。对具体模块感兴趣的读者也可单刀直入，阅读相关章节。\nWi-Fi、NFC或GPS的BSP开发工程师\nBSP开发工程师更需要对Android平台中这些模块的工作原理及背景知识有深入的理解。虽然本书没有介绍这些模块在Linux Kernel层的实现，但了解它们在用户空间的工作流程也将极大帮助BSP开发工程师拓展自己的知识面。\n对Wi-Fi、NFC和GPS感兴趣的在校高年级本科生、研究生和其他读者\n在掌握理论的基础上，如何在实际代码中来实现或使用它们也许是众多学子最想知道的。希望这本理论与代码实现深度结合的书籍会助您一臂之力。",
      "series": {
        "id": "28292",
        "title": "深入理解Android"
      },
      "price": "89.00"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 10,
        "average": "7.4",
        "min": 0
      },
      "subtitle": "（基于Google发布的Jelly Bean原始代码，讲述Android系统的内部静态结构关系和内部运行机制，为你呈现原汁原味的Android代码分析大餐！）",
      "author": [
        "杨长刚"
      ],
      "pubdate": "2013-1",
      "tags": [
        {
          "count": 25,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 4,
          "name": "源码分析",
          "title": "源码分析"
        },
        {
          "count": 4,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 2,
          "name": "android",
          "title": "android"
        },
        {
          "count": 1,
          "name": "计算机技术",
          "title": "计算机技术"
        },
        {
          "count": 1,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 1,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 1,
          "name": "移植",
          "title": "移植"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s24929890.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第1章  智能指针\t1\n1.1  智能指针概述\t1\n1.2  引用计数基类RefBase\t2\n1.3  轻量级引用计数LightRefBase\t3\n1.4  强指针\t3\n1.4.1  强指针变量的初始化与生命周期\t3\n1.4.2  赋值操作与引用计数变化\t5\n1.5  弱指针\t5\n第2章  消息队列与线程处理\t7\n2.1  消息队列处理模型的设计\t7\n2.2  消息队列与线程处理的Java实现\t9\n2.2.1  Thread\/Runnable\t9\n2.2.2  Message\t10\n2.2.3  MessageQueue概述\t11\n2.2.4  Handler\t11\n2.2.5  Looper\t12\n2.2.6  再论Handler\t15\n2.2.7  对同步消息的支持\t16\n2.3  native层的Looper与消息队列处理\t19\n2.3.1  Looper中的睡眠等待与唤醒机制\t19\n2.3.2  Looper对文件描述符的监控与处理\t22\n2.3.3  Looper中的消息队列处理机制\t25\n2.3.4  Looper与线程执行上下文\t27\n第3章  Binder IPC及其应用\t29\n3.1  Binder IPC\t29\n3.1.1  Binder IPC与系统服务\t29\n3.1.2  Binder类结构与调用关系\t31\n3.1.3  模板函数interface_cast的背后\t33\n3.1.4  例子AudioPolicyService\t37\n3.2  Java层对Binder的封装\t40\n3.2.1  例子IMediaPlaybackService\t42\n3.2.2  例子PhoneStateListener\t47\n3.3  大内存块的跨进程共享\t52\n3.3.1  概述\t52\n3.3.2  调用接口\t53\n3.3.3  设备空间的映射\t55\n3.3.4  Server侧的处理\t57\n第4章  HAL硬件抽象层\t59\n4.1  HAL概述\t59\n4.2  硬件模块库的通用写法\t60\n4.3  硬件模块库的装载与解析\t63\n4.4  例子Lights\t65\n4.5  例子Camera\t68\n4.6  例子Power和Vibrator\t69\n第5章  Android的启动过程\t71\n5.1  Android初始化语言及解析\t71\n5.1.1  Action\t71\n5.1.2  触发器trigger\t72\n5.1.3  命令Command\t72\n5.1.4  服务Service\t74\n5.1.5  .rc文件的解析\t76\n5.2  BootChart\t82\n5.3  ueventd守护进程\t82\n5.4  init进程的启动过程\t87\n5.5  init.rc文件中的服务进程\t93\n5.6  system_server进程\t95\n5.6.1  app_process程序\t95\n5.6.2  system_server进程\t96\n第6章  输入系统\t99\n6.1  输入系统概述\t99\n6.2  读线程\t101\n6.2.1  EventHub\t101\n6.2.2  InputReader\t106\n6.2.3  InputDevice\t108\n6.2.4  InputMapper\t108\n6.2.5  QueuedInputListener\t111\n6.3  分发线程\t112\n6.3.1  InputDispatcher\t112\n6.3.2  InputChannel\t116\n6.4  输入系统的开启\t118\n第7章  MassStorage\t121\n7.1  MassStorage概述\t121\n7.2  MountService\t122\n7.3  库libsysutils.so\t123\n7.3.1  SocketListener\t123\n7.3.2  FrameworkListener\t126\n7.3.3  NetlinkListener\t127\n7.4  守护进程vold\t128\n7.4.1  NetlinkManager\t128\n7.4.2  CommandListener\t131\n7.4.3  vold的main函数\t135\n第8章  Sensor\t137\n8.1  Sensor概述\t137\n8.2  SDK API概述\t138\n8.3  Sensor管理器\t139\n8.3.1  Sensor采样数据的获取与处理\t141\n8.3.2  SensorEventQueue\t146\n8.4  SensorService\t147\n8.4.1  逻辑传感器\t149\n8.4.2  物理传感器\t150\n8.4.3  Sensor HAL\t150\n第9章  RIL\t153\n9.1  RIL概述\t153\n9.2  rild守护进程\t154\n9.3  事件处理与分发线程\t158\n9.3.1  分发线程中的事件处理\t158\n9.3.2  RIL请求的接收与处理\t161\n9.3.3  RIL响应的回送\t165\n9.4  radiooptions工具程序\t169\n9.5  RILJ\t169\n9.5.1  RILJ概述\t169\n9.5.2  RILRequest的发送过程\t171\n9.5.3  Response的处理过程\t174\n第10章  com.android.phone进程\t178\n10.1  层次状态机StateMachine\t178\n10.2  GSMPhone\t179\n10.3  GsmCallTracker\t184\n10.3.1  GsmDataConnectionTracker\t186\n10.3.2  GsmServiceStateTracker\t188\n10.3.3  DefaultPhoneNotifier\t188\n10.3.4  其他\t189\n10.4  进程com.android.phone\t190\n第11章  Graphic\t196\n11.1  Graphic概述\t196\n11.2  Java层简介\t197\n11.2.1  SurfaceSession\t198\n11.2.2  Surface\t198\n11.2.3  SurfaceView\t199\n11.2.4  TextureView\t200\n11.3  JNI层简介\t200\n11.4  SKIA库简介\t201\n11.5  库libgui.so\t202\n11.5.1  概述\t202\n11.5.2  ComposerService\t204\n11.5.3  共享控制块surface_flinger_cblk_t\t204\n11.5.4  ISurfaceComposer\t205\n11.5.5  ScreenshotClient\t207\n11.5.6  SurfaceComposerClient\t207\n11.5.7  Surface\t210\n11.5.8  SurfaceControl\t211\n11.5.9  绘图操作的前后过程\t213\n11.5.10  SurfaceTexture Client\t215\n11.6  SurfaceFlinger进程\t222\n11.6.1  图层\t223\n11.6.2  DisplayHardware简介\t228\n11.6.3  HWComposer简介\t228\n11.6.4  VSync\t229\n11.7  库libui.so简介\t247\n11.7.1  GraphicBuffer\t247\n11.7.2  FramebufferNativeWindow\t248\n11.8  RenderScript简介\t249\n第12章  OpenGL ES软件层次栈\t250\n12.1  Android中的OpenGL ES简介\t250\n12.2  Android中OpenGL软件层次栈\t251\n12.3  包裹库与hook钩子\t253\n12.3.1  libGLESv1_CM.so包裹库\t253\n12.3.2  libGLESv2包裹库\t257\n12.3.3  libEGL包裹库\t257\n12.3.4  结构体egl_t和gl_hooks_t钩子\t258\n12.4  OpenGL实现库的加载和解析\t260\n12.4.1  加载和解析的发起\t260\n12.4.2  库装载器Loader\t261\n12.5  libGLES_android库和ETC1简介\t265\n第13章  Multimedia\t267\n13.1  Multimedia概述\t267\n13.2  API类简述\t268\n13.3  多媒体播放（playback）\t270\n13.3.1  播放流程\t273\n13.3.2  来自server侧的消息事件通知\t277\n13.4  多媒体录制（Recording）\t279\n13.5  元数据（MetaData）获取\t281\n13.6  Camera\t284\n13.6.1  Camera概述\t284\n13.6.2  CameraHardwareInterface与HAL层\t287\n13.7  Camera事件通知机制\t289\n第14章  Audio\t293\n14.1  Audio概述\t293\n14.2  Audio播放AudioTrack\t295\n14.2.1  共享控制块audio_track_cblk_t\t296\n14.2.2  数据的写入\t298\n14.2.3  事件的回送及处理\t299\n14.3  Auido录音Recording\t301\n14.3.1  录音的开始过程\t303\n14.3.2  录音的停止过程\t306\n14.4  AudioFlinger\t307\n14.4.1  AudioFlinger概述\t307\n14.4.2  Track相关类概述\t308\n14.4.3  AudioFlinger中的线程\t311\n14.5  音效AudioEffect\t319\n14.5.1  EffectHandle\t320\n14.5.2  音效引擎的封装EffectModule\t320\n14.5.3  音效链EffectChain\t321\n14.5.4  音效处理引擎接口effect_interface_s\t322\n14.5.5  音效引擎库audio_effect_library_s\t323\n14.5.6  音效引擎工厂EffectFactory\t324\n14.6  音频策略服务AudioPolicyService\t326\n第15章  Stagefright\t331\n15.1  Stagefright概述\t331\n15.2  节点子类\t332\n15.3  StagefrightPlayer\t334\n15.4  视频帧的渲染输出AwesomeRenderer\t343\n15.4.1  Renderer的创建\t344\n15.4.2  AwesomeLocalRenderer\t345\n15.4.3  AwesomeNativeWindowRenderer\t347\n15.5  AudioPlayer\t347\n15.6  A\/V同步简介\t350\n15.7  StagefrightRecorder\t351\n第16章  OMXCodec\t356\n16.1  OpenMAX概述\t356\n16.1.1  组件（Component）与端口（Port）\t357\n16.1.2  组件的初始化\t358\n16.1.3  数据处理\t359\n16.1.4  组件命令OMX_Command\t360\n16.2  OMXCodec类\t362\n16.2.1  组件的创建\t362\n16.2.2  缓冲区的分配\t364\n16.2.3  数据处理流程\t370\n16.3  IOMX\t374\n16.4  OMX插件\t376\n16.4.1  平台厂家插件\t377\n16.4.2  软件OMX插件SoftOMXPlugin\t379\n16.5  组件消息的上报\t383\n第17章  GPS\t386\n17.1  GPS 简述\t386\n17.2  SDK API概述\t386\n17.3  LocationManagerService\t388\n17.4  GpsLocationProvider\t390\n17.4.1  初始化代码分析\t391\n17.4.2  消息处理与回调结构体\t392\n17.4.3  例子：位置信息的上报\t394\n17.5  HAL层简介\t396\n17.5.1  GPS的位置信息\t396\n17.5.2  GPS卫星信息\t397\n17.5.3  GPS回调函数\t397\n第18章  NFC\t399\n18.1  NFC概述\t399\n18.2  SDK API概述\t400\n18.2.1  NfcAdapter\t401\n18.2.2  NdefMessage\t401\n18.2.3  NFC Tag\t402\n18.2.4  NFC-extras\t403\n18.3  进程com.android.nfc\t403\n18.3.1  P2pEventManager\t403\n18.3.2  P2pLinkManager\t405\n18.3.3  Bluetooth Handover\t408\n18.3.4  SNEP\t409\n18.3.5  NDEF Push\t413\n18.3.6  其他类简介\t414\n18.4  JNI层\t415\n第19章  USB\t418\n19.1  SDK API概述\t418\n19.2  UsbService\t420\n19.2.1  UsbDeviceManager\t421\n19.2.2  UsbHostManager\t422\n19.3  uevent\t424\n第20章  Bluetooth和Wi-Fi简析\t429\n20.1  Bluetooth\t429\n20.1.1  Bluetooth概述\t429\n20.1.2  SDK API概述\t430\n20.1.3  Bluetooth服务\t432\n20.1.4  JNI层\t433\n20.2  Wi-Fi\t436\n20.2.1  Wi-Fi概述\t436\n20.2.2  SDK API概述\t436\n20.2.3  JNI和HAL层\t439\n20.2.4  WPA_supplicant\t440\n第21章  Debuggerd\t441\n21.1  预备知识\t441\n21.1.1  ptrace调用\t441\n21.1.2  waitpid\t442\n21.2  debuggerd守护进程\t442\n后记\t450",
      "pages": "449",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s24929890.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s24929890.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s24929890.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/20563257\/",
      "id": "20563257",
      "publisher": "",
      "isbn10": "7121193744",
      "isbn13": "9787121193743",
      "title": "深入剖析Android系统",
      "url": "http:\/\/api.douban.com\/v2\/book\/20563257",
      "alt_title": "",
      "author_intro": "杨长刚，2005年春毕业于西南交通大学计算机应用技术专业，获硕士学位；后进入手机行业从事Linux手机软件开发工作。目前在一家欧美企业从事Android方面的技术工作。作者官方博客：http:\/\/www.redwolf-blog.com\/",
      "summary": "《深入剖析Android系统》以Android Jelly Bean（4.1）的代码为蓝本，对Android的部分关键代码进行了注释分析，并辅以大量插图，讲述了Android大部分子系统中的模块和类的静态结构，让读者对Android系统的内部静态结构有着“类”粒度这一层级上的认识和了解。同时，也对关键类和函数的代码调用流程、运行时刻所位于的进程和线程上下文等动态运行场景进行了分析讲述，让读者深刻理解Android系统内部是如何运行的。《深入剖析Android系统》直接对Source Insight进行截图，保留了代码的原始行号、英文注释等信息并进行了高亮显示，方便读者阅读；代码中同时添加了作者所做的中文注释说明。",
      "price": "59.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 16,
        "average": "7.0",
        "min": 0
      },
      "subtitle": "A Developer's Guide",
      "author": [
        "Frank Ableson",
        "Charlie Collins",
        "Robi Sen"
      ],
      "pubdate": "2009-04-21",
      "tags": [
        {
          "count": 18,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 4,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 4,
          "name": "开发技术",
          "title": "开发技术"
        },
        {
          "count": 2,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 1,
          "name": "2010",
          "title": "2010"
        },
        {
          "count": 1,
          "name": "library",
          "title": "library"
        },
        {
          "count": 1,
          "name": "safari",
          "title": "safari"
        },
        {
          "count": 1,
          "name": "内核",
          "title": "内核"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s4246422.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "392",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4246422.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4246422.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4246422.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/3229044\/",
      "id": "3229044",
      "publisher": "Manning Publications",
      "isbn10": "1933988673",
      "isbn13": "9781933988672",
      "title": "Unlocking Android",
      "url": "http:\/\/api.douban.com\/v2\/book\/3229044",
      "alt_title": "",
      "author_intro": "",
      "summary": "HIGHLIGHT  Unlocking Android is a developer-focused tutorial for the Android mobile operating  system. Loaded with practical examples, this easy-to-follow book presents  practical techniques that reach far beyond the Android documentation.  DESCRIPTION  Android is a free, open source, Java-based mobile platform developed by Google.  Unlocking Android prepares the reader to embrace the Android mobile platform  in easy-to-understand language and builds on this foundation with  reusable Java code examples. It's ideal for corporate developers and hobbyists  who have an interest, or a mandate, to deliver mobile software.  The book first covers the big picture so the reader can get comfortable with the  Android approach to the mobile applications. Then the reader learns to apply  Android by following the many practical examples. The book concludes with  two deep and hands-on examples.  Unlocking Android addresses the Android application framework, its graphical  capabilities and media support, data storage, communications capabilities,  phone interactions, and notifications.  KEY POINTS Android is led by Google, based on Linux, and developed by the Open  Handset Alliance. Learn key techniques that apply both to corporate and hobbyist developers The writing is crisp, clear, and fun to read.  MARKET INFORMATION  Mobile development is hot. Unlike vendor-specific proprietary platforms,  Android can be readily customized by device manufacturers and software companies  looking to provide specific features. Any developer\/independent software  vendor (ISV) with a product on one of the major platforms available today  (Palm, Windows Mobile, Blackberry, Symbian, J2ME) will consider porting  their code to Android and will benefit from this book.",
      "price": "USD 39.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 9,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Simon Monk"
      ],
      "pubdate": "2013-1",
      "tags": [
        {
          "count": 23,
          "name": "Arduino",
          "title": "Arduino"
        },
        {
          "count": 16,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 9,
          "name": "物联网",
          "title": "物联网"
        },
        {
          "count": 7,
          "name": "嵌入式",
          "title": "嵌入式"
        },
        {
          "count": 3,
          "name": "电子",
          "title": "电子"
        },
        {
          "count": 3,
          "name": "计算机及互联网技术",
          "title": "计算机及互联网技术"
        },
        {
          "count": 2,
          "name": "教材",
          "title": "教材"
        },
        {
          "count": 2,
          "name": "术业有专攻",
          "title": "术业有专攻"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s25103466.jpg",
      "binding": "",
      "translator": [
        "唐乐"
      ],
      "catalog": "Chapter 1 蓝牙自走车\n制作\n原理讲解\n小结\nChapter 2 Android盖革计数器\nGoogle开源附件\n制作\n原理讲解\n小结\nChapter 3 Android彩灯板\n制作Arduino USB Host加料扩展板\n制作彩灯板\n使用效果\n原理讲解\n小结\nChapter 4 电视遥控器\n制作\n使用效果\n小结\nChapter 5 温度记录器\n制作\n使用效果\n原理讲解\n小结\nChapter 6 超声波距离探测器\n制作\n使用效果\n原理讲解\n小结\nChapter 7 家居自动化控制器\n制作音频连接模块\nAndroid APP\n通过互联网访问\n原理讲解\n小结\nChapter 8 电源控制\n电源控制模块的概貌\n制作电源控制模块\n整合到家居自动化控制器\n使用效果\n原理讲解\n小结\nChapter 9 智能恒温器\n制作\n使用效果\n原理讲解\n小结\nChapter 10 RFID门锁\n制作\n使用效果\n原理讲解\n小结\nChapter 11 信号旗\n制作\n原理讲解\n小结\nChapter 12 延时器\n制作\n原理讲解\n小结\n附录 Android开源附件开发入门\n学习Android编程\n学习Arduino编程\n选择学习示例\nArduino端开发\nAndroid端开发\n总结",
      "pages": "230",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s25103466.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s25103466.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s25103466.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/19957594\/",
      "id": "19957594",
      "publisher": "",
      "isbn10": "7030353765",
      "isbn13": "9787030353764",
      "title": "Arduino+Android互动智作",
      "url": "http:\/\/api.douban.com\/v2\/book\/19957594",
      "alt_title": "",
      "author_intro": "",
      "summary": "《Arduino+Android互动智作》是作者Simon Monk在Arduino应用上的又一次跨越，他采用12个示例项目成功地向读者们展示了如何将Arduino和Android结合起来，以完成许多单靠Arduino或者Android根本无法完成的任务。\n对于Arduino爱好者而言，可以通过对本书的学习将Android设备的触摸屏变成一个非常完美的人机交互界面，并且从原本“硬”的方向展开对“软”的探索。而对于Android开发者而言，本书则扩展并丰富了Android系统应用的想象空间，将单纯的人机交互扩展到Android设备与各种传感器的交互。\n《Arduino+Android互动智作》适合广大“创客”和电子爱好者自学、培训，也可作为高等院校相关专业及电子设计（制作）大赛的教学用书。",
      "price": "38.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 14,
        "average": "7.3",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "吴亚峰"
      ],
      "pubdate": "2011-6",
      "tags": [
        {
          "count": 14,
          "name": "android",
          "title": "android"
        },
        {
          "count": 9,
          "name": "游戏开发",
          "title": "游戏开发"
        },
        {
          "count": 5,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 4,
          "name": "3D",
          "title": "3D"
        },
        {
          "count": 3,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 2,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 1,
          "name": "Programming",
          "title": "Programming"
        },
        {
          "count": 1,
          "name": "游戏",
          "title": "游戏"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s6425809.jpg",
      "binding": "",
      "translator": [],
      "catalog": "",
      "pages": "689",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s6425809.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s6425809.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s6425809.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6394954\/",
      "id": "6394954",
      "publisher": "",
      "isbn10": "712113263X",
      "isbn13": "9787121132636",
      "title": "Android 3D游戏开发技术详解与典型案例",
      "url": "http:\/\/api.douban.com\/v2\/book\/6394954",
      "alt_title": "",
      "author_intro": "",
      "summary": "《Android 3D游戏开发技术详解与典型案例(附盘)》，本书分为两篇共22章，第一篇以简单易懂的实例为依托，详细介绍了opengl es各方面的基础知识，第二篇则对7个真实案例的开发步骤进行了详细的介绍，逐步向读者讲解android 3d游戏的真实开发过程，同时源代码中还包含了详细的注释，以尽量帮助读者掌握代码中的每一个细节，尽快掌握android 3d游戏开发。",
      "price": "89.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 19,
        "average": "6.4",
        "min": 0
      },
      "subtitle": "Android Apps With Html, Css, and Javascript",
      "author": [
        "Jonathan Stark"
      ],
      "pubdate": "2010-10-4",
      "tags": [
        {
          "count": 19,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 9,
          "name": "HTML",
          "title": "HTML"
        },
        {
          "count": 9,
          "name": "JavaScript",
          "title": "JavaScript"
        },
        {
          "count": 8,
          "name": "web",
          "title": "web"
        },
        {
          "count": 6,
          "name": "CSS",
          "title": "CSS"
        },
        {
          "count": 5,
          "name": "O'Reilly",
          "title": "O'Reilly"
        },
        {
          "count": 4,
          "name": "前端开发",
          "title": "前端开发"
        },
        {
          "count": 4,
          "name": "PhoneGap",
          "title": "PhoneGap"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s4585994.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "1. Getting Started\n2. Basic Styling\n3. Advanced Styling\n4. Animation\n5. Client-Side Data Storage\n6. Going Offline\n7. Going Native\n8. Submitting Your App to the Android Market",
      "pages": "184",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4585994.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4585994.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4585994.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4712417\/",
      "id": "4712417",
      "publisher": "O'Reilly Media",
      "isbn10": "1449383262",
      "isbn13": "9781449383268",
      "title": "Building Android Apps with HTML, CSS, and JavaScript",
      "url": "http:\/\/api.douban.com\/v2\/book\/4712417",
      "alt_title": "",
      "author_intro": "",
      "summary": "If you know HTML, CSS, and JavaScript, you already have the tools you need to develop Android applications. This hands-on book shows you how to use these open source web standards to design and build apps that can be adapted for any Android device --  without  having to use Java.    You'll learn how to create an Android-friendly web app on the platform of your choice, and then convert it to a native Android app with the free PhoneGap framework. Discover why device-agnostic mobile apps are the wave of the future, and start building apps that offer greater flexibility and a broader reach.    Learn the basics for making a web page look great on the Android web browser   Convert a website into a web application, complete with progress indicators and more   Add animation with jQTouch to make your web app look and feel like a native Android app   Take advantage of client-side data storage with apps that run even when the Android device is offline   Use PhoneGap to hook into advanced Android features -- including the accelerometer, geolocation, and alerts   Test and debug your app on the Web under load with real users, and then submit the finished product to the Android Market    This book received valuable community input through O'Reilly's Open Feedback Publishing System (OFPS). Learn more at http:\/\/labs.oreilly.com\/ofps.html.",
      "price": "USD 29.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 6,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "施懿民"
      ],
      "pubdate": "2014-4-15",
      "tags": [
        {
          "count": 20,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 14,
          "name": "软件测试",
          "title": "软件测试"
        },
        {
          "count": 14,
          "name": "测试",
          "title": "测试"
        },
        {
          "count": 3,
          "name": "调试",
          "title": "调试"
        },
        {
          "count": 2,
          "name": "技巧",
          "title": "技巧"
        },
        {
          "count": 2,
          "name": "android",
          "title": "android"
        },
        {
          "count": 1,
          "name": "softwareTest",
          "title": "softwareTest"
        },
        {
          "count": 1,
          "name": "我的书架",
          "title": "我的书架"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s27257271.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "前言\n第1章Android自动化测试初探  1\n1.1　快速入门  1\n1.2　待测示例程序  2\n1.3　第一个Android应用测试工程  6\n1.4　搭建自动化开发环境  12\n1.4.1　安装Eclipse和ADT开发包  12\n1.4.2　创建模拟器  13\n1.4.3　启动模拟器  21\n1.4.4　连接模拟器  23\n1.4.5　连接手机  24\n1.5　本章小结  29\n第2章　Android自动化测试基础  30\n2.1　Java编程基础  30\n2.2　JUnit简介  36\n2.2.1　添加测试异常情况的测试用例  41\n2.2.2　测试集合  43\n2.2.3　测试准备与扫尾函数  45\n2.2.4　自动化测试用例编写注意事项  47\n2.3　Android应用程序基础  47\n2.3.1　Android权限系统  47\n2.3.2　应用的组成与激活  51\n2.3.3　清单文件  54\n2.3.4　Android应用程序的单UI线程模型  56\n2.4　本章小结  57\n第3章　Android界面自动化白盒测试  58\n3.1　Instrumentation测试框架  58\n3.1.1　Android仪表盘测试工程  58\n3.1.2　仪表盘技术  60\n3.1.3　Instrumentation.ActivityMonitor嵌套类  63\n3.2　使用仪表盘技术编写测试用例  64\n3.2.1　ActivityInstrumentationTest-Case2测试用例  66\n3.2.2　sendKeys和sendRepeatedKeys函数  70\n3.2.3　执行仪表盘测试用例  72\n3.2.4　仪表盘测试技术的限制  74\n3.3　使用robotium编写集成测试用例  77\n3.3.1　为待测程序添加?robotium用例  77\n3.3.2　测试第三方应用  80\n3.3.3　robotium关键源码解释  84\n3.4　Android自动化测试在多种屏幕下的注意事项  87\n3.5　本章小结  90\n第4章　Android界面自动化黑盒测试  91\n4.1　monkey工具  91\n4.1.1　运行monkey  93\n4.1.2　monkey命令选项参考  97\n4.1.3　monkey脚本  98\n4.1.4　monkey服务器  105\n4.2　编写monkeyrunner用例  109\n4.2.1　为待测程序录制和回放用例  110\n4.2.2　运行monkeyrunner  110\n4.2.3　手工编写monkeyrunner代码  111\n4.2.4　编写monkeyrunner插件  114\n4.3　本章小结  118\n第5章　测试Android服务组件  119\n5.1　JUnit的模拟对象技术  119\n5.2　测试服务对象  128\n5.2.1　服务对象简介  128\n5.2.2　在应用中添加服务  130\n5.2.3　测试服务对象  136\n5.3　本章小结  140\n第6章　测试Android内容供应组件  142\n6.1　控制反转  142\n6.1.1　依赖注入  144\n6.1.2　服务定位器  146\n6.2　内容供应组件  147\n6.2.1　统一资源标识符  150\n6.2.2　MIME类型  152\n6.2.3　内容供应组件的虚拟表视图  152\n6.3　内容供应组件示例  154\n6.4　测试内容供应组件  159\n6.5　本章小结  163\n第7章　测试Android HTML 5应用  164\n7.1　构建Android HTML 5应用  164\n7.1.1　WebView应用  164\n7.1.2　使用视口适配Android设备的多种分辨率  170\n7.1.3　使用CSS适配多种分辨率  175\n7.1.4　使用Chrome浏览器模拟移动设备浏览器  176\n7.2　使用QUnit测试HTML 5网页  177\n7.2.1　QUnit基础  177\n7.2.2　QUnit中的断言  179\n7.2.3　测试回调函数  181\n7.2.4　测试WebView应用  182\n7.3　本章小结  185\n第8章　使用Selenium测试HTML 5浏览器应用  186\n8.1　Selenium组成部分  186\n8.2　安装Selenium IDE  187\n8.3　Selenium IDE界面  188\n8.3.1　菜单栏  188\n8.3.2　工具栏  189\n8.4　使用Selenium  189\n8.4.1　使用Selenium IDE录制测试用例  189\n8.4.2　运行Selenium测试用例  194\n8.4.3　等待操作完成  199\n8.4.4　Selenium WebDriver命令  200\n8.5　数据驱动测试  206\n8.6　Selenium编程技巧  208\n8.6.1　在测试代码中硬编码测试数据  208\n8.6.2　重构Selenium IDE生成的代码  209\n8.7　本章小结  212\n第9章　Android NDK测试  213\n9.1　安装NDK  213\n9.2　NDK的基本用法  214\n9.3　编译和部署NDK示例程序  214\n9.4　Java与C\/C++之间的交互  217\n9.4.1　Makefiles  222\n9.4.2　动态模块和静态模块  222\n9.5　在Android设备上执行NDK单元测试  223\n9.6　unittest++使用基础  228\n9.6.1　添加新测试用例  228\n9.6.2　测试用例集合  229\n9.6.3　验证宏  229\n9.6.4　数组相关的验证宏  230\n9.6.5　设置超时  230\n9.7　本章小结  231\n第10章　Android其他测试  232\n10.1　Android兼容性测试  232\n10.1.1　运行Android兼容性测试用例集合  232\n10.1.2　兼容性测试计划说明  237\n10.1.3　添加一个新的测试计划  238\n10.1.4　添加一个新的测试用例  239\n10.1.5　调查CTS测试失败  241\n10.2　Android脚本编程环境  243\n10.2.1　Android脚本环境简介  243\n10.2.2　安装SL4A  243\n10.2.3　为SL4A安装脚本引擎  244\n10.2.4　编写SL4A脚本程序  246\n10.2.5　在PC上调试脚本程序  250\n10.3　国际化测试  251\n10.4　模拟来电中断测试  254\n10.5　本章小结  255\n第11章　持续集成自动化测试  257\n11.1　在Ant中集成Android自动化测试  257\n11.1.1　Ant使用简介  257\n11.1.2　Android应用编译过程  262\n11.1.3　使用Ant编译Android工程  263\n11.2　在Maven中集成Android自动化测试  268\n11.2.1　使用Android Maven Archetypes创建新Android工程  268\n11.2.2　Android Maven工程介绍  270\n11.2.3　与设备交互  271\n11.2.4　与模拟器交互  272\n11.2.5　集成自动化测试  274\n11.3　收集代码覆盖率  276\n11.4　本章小结  280\n第12章　Android功能调试工具  281\n12.1　使用Eclipse调试Android应用  281\n12.1.1　Eclipse调试技巧  282\n12.1.2　使用JDB调试  294\n12.1.3　设置Java远程调试  296\n12.1.4　调试器原理简介  301\n12.2　查看Android的logcat日志  302\n12.2.1　过滤logcat日志  303\n12.2.2　查看其他logcat内存日志  304\n12.3　Android调试桥接  304\n12.3.1　adb命令参考  306\n12.3.2　执行Android shell命令  309\n12.3.3　dumpsys  312\n12.4　调试Android设备上的程序  317\n12.4.1　调试命令行程序  317\n12.4.2　调试Android应用  318\n12.4.3　调试Maven Android插件启动的应用  321\n12.5　本章小结  322\n第13章　Android性能测试之分析操作日志  323\n13.1　使用Traceview分析操作日志  326\n13.1.1　记录应用操作日志  326\n13.1.2　Traceview界面说明  328\n13.1.3　使用Traceview分析并优化性能瓶颈  329\n13.2　使用DDMS  334\n13.2.1　使用DDMS  335\n13.2.2　DDMS与调试器交互的原理  336\n13.2.3　三种启动操作日志记录功能的方法  338\n13.3　使用dmtracedump分析函数调用树  339\n13.4　本章小结  341\n第14章　分析Android内存问题  343\n14.1　Android内存管理原理  343\n14.1.1　垃圾内存回收算法  343\n14.1.2　GC发现对象引用的方法  351\n14.1.3　Android内存管理源码分析  352\n14.1.4　Logcat中的GC信息  361\n14.2　调查内存泄露工具  362\n14.2.1　Shallow size和Retained size  362\n14.2.2　支配树  363\n14.3　分析Android内存泄露实例  364\n14.3.1　在DDMS中检查示例问题程序的内存情况  366\n14.3.2　使用MAT分析内存泄露  368\n14.3.3　弱引用  372\n14.3.4　MAT的其他界面使用方法  373\n14.3.5　对象查询语言OQL（Object Query Language）  376\n14.3.6　使用jHat分析内存文件  381\n14.4　显示图片  382\n14.4.1　Android应用加载大图片的最佳实践  386\n14.4.2　跟踪对象创建  388\n14.5　频繁创建小对象的问题  390\n14.6　Finalizer的问题  393\n14.7　本章小结  394\n第15章　调试多线程和HTML 5应用  395\n15.1　调试应用无响应问题  395\n15.2　Android中的多线程  397\n15.3　调试线程死锁  400\n15.3.1　资源争用问题  400\n15.3.2　线程同步机制  405\n15.3.3　解决线程死锁问题  406\n15.4　StrictMode  410\n15.4.1　在应用中启用StrictMode  413\n15.4.2　暂时禁用StrictMode  415\n15.5　调试Android上的浏览器应用  416\n15.5.1　在Android系统自带的浏览器上调试  416\n15.5.2　在Chrome浏览器上调试  418\n15.6　本章小结  422\n第16章 　调试NDK程序  423\n16.1　使用Eclipse调试Android NDK程序  423\n16.2　在命令行中调试NDK程序  426\n16.3　Android的C\/C++调试器的工作原理  431\n16.3.1　调试符号  433\n16.3.2　源码  433\n16.3.3　多线程调试的问题  433\n16.4　本章小结  434",
      "ebook_url": "http:\/\/read.douban.com\/ebook\/15355551\/",
      "pages": "434",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s27257271.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s27257271.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s27257271.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/25863881\/",
      "id": "25863881",
      "publisher": "机械工业出版社",
      "isbn10": "7111460189",
      "isbn13": "9787111460183",
      "title": "Android应用测试与调试实战",
      "url": "http:\/\/api.douban.com\/v2\/book\/25863881",
      "alt_title": "",
      "author_intro": "施懿民   资深软件开发工程师和调试技术专家，拥有近10年软件行业从业经验，精通Windows、.NET、iOS、Android以及Windows Phone等平台上的应用的测试与调试，曾经带领团队为微软的.NET Developer Platform、CLR、.NET BCL、WPF、Silverlight、ASP.NET、.NET平台和框架提供测试服务，近几年来专注于主流移动平台上的应用测试与调试，积累了丰富的经验。此外，他还精通.NET、Java、C++等编程语言，以及Windows、Linux以及Unix等环境下的编程。",
      "summary": "本书是Android应用测试与调试领域最为系统、深入且极具实践指导意义的著作，由拥有近10年从业经验的资深软件开发工程师和调试技术专家撰写，旨在为广大程序员开发高质量的Android应用提供全方位指导。它从Android应用自动化测试工程师和开发工程师的需求出发，从测试和调试两个维度，针对采用Java、HTML 5、C++&NDK三种Android应用开发方式所需要的测试和调试技术、方法进行了细致而深入的讲解，为Android应用的自动化测试和调试提供原理性的解决方案。\n全书一共16章，分为两大部分：第一部分为自动化测试篇（第1~11章），详细讲解了进行Android自动化测试需要掌握的各种技术、工具和方法，包括Android自动化测试基础、Android应用的白盒自动化测试和黑盒自动化测试的技术和原理、Android服务组件和内容组件的测试、HTML 5应用和NDK应用的测试，以及Android应用的兼容性测试和持续集成自动化测试；第二部分为调试技术篇（第12~16章），详细讲解了Android应用调试所需要的各种工具的使用、操作日志的分析、内存日志的分析，以及多线程应用HTML 5 应用和NDK 应用的调试方法和技巧。",
      "ebook_price": "39.55",
      "price": "79.00"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 18,
        "average": "7.8",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Yaghmour, Karim"
      ],
      "pubdate": "2013-3",
      "tags": [
        {
          "count": 26,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 10,
          "name": "Embedded",
          "title": "Embedded"
        },
        {
          "count": 5,
          "name": "移植",
          "title": "移植"
        },
        {
          "count": 5,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 4,
          "name": "O'Reilly",
          "title": "O'Reilly"
        },
        {
          "count": 3,
          "name": "框架",
          "title": "框架"
        },
        {
          "count": 2,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 2,
          "name": "kernel",
          "title": "kernel"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s26596779.jpg",
      "binding": "",
      "translator": [],
      "catalog": "",
      "pages": "412",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s26596779.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s26596779.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s26596779.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/7906782\/",
      "id": "7906782",
      "publisher": "",
      "isbn10": "1449308295",
      "isbn13": "9781449308292",
      "title": "Embedded Android",
      "url": "http:\/\/api.douban.com\/v2\/book\/7906782",
      "alt_title": "",
      "author_intro": "",
      "summary": "Looking to port Android to other platforms such as embedded devices? This hands-on book shows you how Android works and how you can adapt it to fit your needs. You'll delve into Android's architecture and learn how to navigate its source code, modify its various components, and create your own version of Android for your particular device. You'll also discover how Android differs from its Linux roots. If you're experienced with embedded systems development and have a good handle on Linux, this book helps you mold Android to hardware platforms other than mobile devices. Learn about Android's development model and the hardware you need to run it  Get a quick primer on Android internals, including the Linux kernel and Dalvik virtual machine  Set up and explore the AOSP without hardware, using a functional emulator image  Understand Android's non-recursive build system, and learn how to make your own modifications  Use evaluation boards to prototype your embedded Android system  Examine the native user-space, including the root filesystem layout, the adb tool, and Android's command line  Discover how to interact with - and customize - the Android Framework",
      "price": "$ 45.19"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 5,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "高煥堂"
      ],
      "pubdate": "2009年2月15日",
      "tags": [
        {
          "count": 12,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 3,
          "name": "高焕堂",
          "title": "高焕堂"
        },
        {
          "count": 2,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 1,
          "name": ",设计",
          "title": ",设计"
        },
        {
          "count": 1,
          "name": "adroid",
          "title": "adroid"
        },
        {
          "count": 1,
          "name": "谁谁谁谁谁谁",
          "title": "谁谁谁谁谁谁"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s3987705.jpg",
      "binding": "",
      "translator": [],
      "catalog": "",
      "pages": "432",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s3987705.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s3987705.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s3987705.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4047052\/",
      "id": "4047052",
      "publisher": "廣悅文化事業有限公司",
      "isbn10": "9868494613",
      "isbn13": "9789868494619",
      "title": "Android設計招式之美",
      "url": "http:\/\/api.douban.com\/v2\/book\/4047052",
      "alt_title": "",
      "author_intro": "",
      "summary": "",
      "price": "NT$450"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 11,
        "average": "7.1",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "黄隽实"
      ],
      "pubdate": "2013-3-20",
      "tags": [
        {
          "count": 15,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 13,
          "name": "PHP",
          "title": "PHP"
        },
        {
          "count": 4,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 3,
          "name": "android",
          "title": "android"
        },
        {
          "count": 1,
          "name": "Android和php开发",
          "title": "Android和php开发"
        },
        {
          "count": 1,
          "name": "IT",
          "title": "IT"
        },
        {
          "count": 1,
          "name": "it",
          "title": "it"
        },
        {
          "count": 1,
          "name": "服务器",
          "title": "服务器"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s25804527.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "前言\n第一篇 　准　备　篇\n第1章　学前必读\t1\n1.1　移动互联网时代的来临\t1\n1.2　为何选择Android和PHP\t2\n1.3　如何学习Android和PHP\t3\n1.3.1　如何学习Android\t3\n1.3.2　如何学习PHP\t4\n1.3.3　同时学好Android和PHP\t4\n1.4　小结\t5\n第2章　Android开发准备\t6\n2.1　Android背景知识\t6\n2.2　Android系统框架\t8\n2.3　Android应用框架\t11\n2.3.1　活动（Activity）\t12\n2.3.2　消息（Intent）\t14\n2.3.3　视图（View）\t16\n2.3.4　任务（Task）\t17\n2.4　Android系统四大组件\t19\n2.4.1　活动（Activity）\t20\n2.4.2　服务（Service）\t21\n2.4.3　广播接收器（Broadcast Receiver）\t23\n2.4.4　内容提供者（Content Provider）\t24\n2.5　Android上下文\t25\n2.5.1　界面上下文（Activity Context）\t25\n2.5.2　应用上下文（Application Context）\t27\n2.6　Android数据存储\t28\n2.6.1　应用配置（Shared Preferences）\t28\n2.6.2   本地文件（Files）\t29\n2.6.3　数据库（SQLite）\t30\n2.7　Android应用界面\t31\n2.7.1　控件属性\t31\n2.7.2　布局（Layout）\t33\n2.7.3　事件（Event）\t37\n2.7.4　菜单（Menu）\t39\n2.7.5　主题（Theme）\t41\n2.7.6　对话框（Dialog）\t42\n2.8　Android图形界面\t43\n2.8.1　画笔（Paint）\t43\n2.8.2　画布（Canvas）\t44\n2.8.3   基础几何图形\t46\n2.8.4　常见图形变换\t47\n2.9　Android动画效果\t50\n2.9.1　逐帧动画（Frame Animation）\t50\n2.9.2　补间动画（Tween Animation）\t51\n2.10　Android开发环境\t52\n2.10.1　开发环境的搭建\t53\n2.10.2　首个Android项目\t58\n2.10.3　使用DDMS调试工具\t63\n2.11　小结\t64\n第3章　PHP开发准备\t65\n3.1　PHP开发基础\t65\n3.1.1　PHP语言简介\t65\n3.1.2　PHP语法简介\t66\n3.1.3　PHP开发起步\t68\n3.1.4　PHP面向对象编程\t75\n3.1.5　PHP的会话\t78\n3.2　PHP开发环境\t80\n3.2.1　开发环境的搭建\t80\n3.2.2　安装配置Xampp\t81\n3.2.3　管理Apache\t83\n3.2.4　管理MySQL\t84\n3.3　使用JSON通信\t87\n3.4　常用PHP开发框架\t88\n3.5　认识Smarty模板引擎\t90\n3.6　开发框架简介\t93\n3.6.1　框架的特点和优势\t94\n3.6.2　框架的基础目录结构\t94\n3.6.3　框架MVC思路讲解\t97\n3.6.4　框架MVC实例分析\t99\n3.7　小结\t108\n第二篇　实　战　篇\n第4章　实例产品设计\t109\n4.1　为何选择微博\t109\n4.2　开发前的准备\t110\n4.2.1　选择开发模式\t110\n4.2.2　了解项目策划\t111\n4.2.3　了解原型设计\t112\n4.3　功能模块设计\t112\n4.4　应用界面设计\t114\n4.5　应用架构设计\t115\n4.6　通信协议定义\t116\n4.7　数据库结构设计\t118\n4.8　小结\t120\n第5章　程序架构设计\t121\n5.1　服务端程序架构设计\t121\n5.1.1　基础框架设计\t122\n5.1.2　调试框架设计\t127\n5.1.3　核心类库设计\t130\n5.1.4　服务端的MVC与SOA\t136\n5.2　客户端程序架构设计\t136\n5.2.1　基础框架设计\t137\n5.2.2　核心类包设计\t138\n5.2.3　Android应用的MVC\t142\n5.3　客户端界面架构设计\t142\n5.3.1　界面框架设计\t143\n5.3.2　主要界面设计\t144\n5.4　小结\t146\n第6章　服务端开发\t147\n6.1　开发入门\t147\n6.1.1　接口程序开发\t147\n6.1.2　调试框架开发\t151\n6.1.3　生成接口文档\t155\n6.2　验证接口\t156\n6.2.1　用户登录接口\t156\n6.2.2　用户登出接口\t160\n6.3　用户接口\t162\n6.3.1　新建用户接口\t162\n6.3.2　更新用户信息接口\t164\n6.3.3　查看用户信息接口\t165\n6.3.4　添加粉丝接口\t167\n6.3.5　删除粉丝接口\t171\n6.4　微博接口\t172\n6.4.1　发表微博接口\t172\n6.4.2　查看微博接口\t174\n6.4.3　微博列表接口\t176\n6.5　评论接口\t180\n6.5.1　发表评论接口\t180\n6.5.2　评论列表接口\t182\n6.6　图片接口\t184\n6.6.1　用户头像接口\t185\n6.6.2　头像列表接口\t188\n6.7　通知接口\t189\n6.8　Web版接口\t192\n6.8.1　Web版UI界面（jQuery Mobile）\t193\n6.8.2　Web版地图接口\t195\n6.9　小结\t196\n第7章　客户端开发\t198\n7.1　开发入门\t198\n7.1.1　开发思路梳理\t198\n7.1.2　掌握应用配置文件\t200\n7.1.3　常规程序开发与调试\t211\n7.2　界面布局和行为控制\t221\n7.2.1　使用Layout布局\t221\n7.2.2　使用Merge整合界面\t224\n7.2.3　使用Event控制用户行为\t226\n7.2.4　使用Intent控制界面切换\t228\n7.3　网络通信模块\t231\n7.3.1　使用HttpClient进行网络通信\t231\n7.3.2　支持CMWAP网络接入方式\t237\n7.3.3　使用JSON库为消息解码\t240\n7.3.4　使用Toast消息提示\t245\n7.4　异步任务模块\t247\n7.4.1　进程和线程\t247\n7.4.2　任务创建Thread\t249\n7.4.3　任务处理Handler\t255\n7.4.4　使用异步任务AsyncTask\t257\n7.5　全局功能模块\t259\n7.5.1　全局UI基类\t259\n7.5.2　全局Menu菜单\t264\n7.5.3　全局Dialog窗口\t265\n7.5.4　使用Service获取通知\t266\n7.5.5　使用Notification显示通知\t270\n7.6　用户登录界面\t273\n7.6.1　界面程序逻辑\t273\n7.6.2　使用TextView\t273\n7.6.3　使用EditText\t274\n7.6.4　使用Button\t276\n7.6.5　使用Shape和Selector\t277\n7.6.6　使用CheckBox\t279\n7.6.7　使用SharedPreference\t280\n7.7　微博列表界面\t281\n7.7.1　界面程序逻辑\t281\n7.7.2　使用ListView\t286\n7.7.3　使用ImageView\t290\n7.7.4　使用draw9patch\t292\n7.7.5　异步获取远程图片\t294\n7.7.6　使用SdCard缓存图片\t297\n7.7.7　使用SQLite缓存数据\t300\n7.8　我的微博列表\t303\n7.8.1　界面程序逻辑\t303\n7.8.2　使用ScrollView\t309\n7.8.3　使用自定义微博列表\t310\n7.9　微博文章界面\t313\n7.9.1　界面程序逻辑\t313\n7.9.2　界面布局进阶（综合使用UI控件）\t319\n7.9.3　发表评论功能实现\t322\n7.9.4　发表微博功能实现\t326\n7.10　用户配置界面\t328\n7.10.1　界面程序逻辑\t328\n7.10.2　使用自定义选项列表\t333\n7.10.3　修改签名功能实现\t334\n7.10.4　更换头像功能实现\t334\n7.11　网页界面开发\t340\n7.11.1　界面程序逻辑\t340\n7.11.2　使用WebView\t341\n7.11.3　使用ProgressDialog\t343\n7.11.4　使用WebView的重写和回调\t346\n7.11.5　网页地图实例分析\t348\n7.12　小结\t349\n第三篇　优　化　篇\n第8章　性能分析\t351\n8.1　关于性能测试\t351\n8.1.1　服务端压力测试\t352\n8.1.2　客户端性能测试\t359\n8.2　瓶颈\t364\n8.2.1　服务端瓶颈分析\t365\n8.2.2　客户端瓶颈分析\t366\n8.3　优化的思路\t366\n8.4　小结\t367\n第9章 　服务端优化\t368\n9.1　优化PHP程序\t368\n9.1.1　优化PHP代码\t368\n9.1.2　优化Session机制\t371\n9.1.3　使用缓存中间件\t373\n9.1.4　使用APC加速\t376\n9.2　优化数据传输\t377\n9.2.1　优化JSON协议\t377\n9.2.2　使用gzip压缩\t379\n9.3　其他优化\t380\n9.3.1　服务器优化\t380\n9.3.2　数据库优化\t383\n9.3.3　网络优化\t386\n9.4　小结\t386\n第10章　客户端优化\t387\n10.1　优化Android程序\t387\n10.1.1　优化Java代码\t387\n10.1.2　异步获取数据\t391\n10.1.3　文件资源缓存\t391\n10.1.4　数据库缓存\t392\n10.2　避免内存泄露\t392\n10.2.1　Android内存管理\t392\n10.2.2　如何判断内存泄露\t393\n10.2.3　常见内存泄露的处理\t395\n10.3　优化Android UI\t396\n10.3.1　模板代码优化\t396\n10.3.2　关于布局优化\t397\n10.3.3　使用Hierarchy Viewer工具\t402\n10.4　其他优化\t403\n10.4.1　优化图片\t403\n10.4.2　优化APK包\t403\n10.4.3　使用keytool和jarsigner签名\t404\n10.4.4　使用zipalign优化\t407\n10.5　小结\t408\n第四篇　进　阶　篇\n第11章　Android特色功能开发\t409\n11.1　使用Google Map API\t409\n11.2　使用LBS功能\t414\n11.3　使用传感器\t419\n11.4　使用摄像头\t422\n11.5　多媒体开发\t431\n11.6　语音识别\t439\n11.7　小结\t441\n第12章　Android NDK开发\t442\n12.1　NDK开发基础\t442\n12.1.1　使用NDK的原因\t442\n12.1.2　使用NDK调用C或C++\t443\n12.1.3　Android.mk和Application.mk\t445\n12.2　NDK开发入门\t448\n12.2.1　开发环境搭建\t448\n12.2.2　首个NDK项目\t449\n12.3　小结\t456\n第13章　Android游戏开发\t457\n13.1　手游开发基础\t457\n13.1.1　手游开发思路解析\t457\n13.1.2　贪食蛇和飞船游戏实例\t462\n13.1.3　认识Android游戏引擎\t464\n13.1.4　使用OpenGL和OpenGL ES\t466\n13.1.5　使用RenderScript\t472\n13.2　手游开发进阶\t474\n13.2.1　认识Cocos2d-x\t475\n13.2.2　架设Cocos2d-x开发环境\t475\n13.2.3　首个Cocos2d-x项目\t475\n13.2.4　认识Unity 3D\t487\n13.3　小结\t489\n附录A　Hush Framework框架实例源码部署\t490\n附录B　微博应用实例源码部署\t495",
      "pages": "516",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s25804527.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s25804527.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s25804527.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/21677501\/",
      "id": "21677501",
      "publisher": "机械工业出版社华章公司",
      "isbn10": "7111410505",
      "isbn13": "9787111410508",
      "title": "Android和PHP开发最佳实践",
      "url": "http:\/\/api.douban.com\/v2\/book\/21677501",
      "alt_title": "",
      "author_intro": "黄隽实，国内顶级架构师，CSDN技术博客专家，具有多年大型互联网应用架构经验，通晓多门编程语言及相关技术，对Android平台和PHP语言有深入研究，近 期专注于移动互联网领域的发展。参与的大型项目有：盛大手机游戏平台、ValueClick广告站群、EsteeLauder国际站群、Ihush特卖平台等。",
      "summary": "本书是国内第一本同时讲述Android客户端开发和PHP服务端开发的经典著作。\n本书以一个完整的微博应用项目实例为主线，由浅入深地讲解了Android客户端开发和PHP服务端开发的思路和技巧。从前期的产品设计、架构设计，到客户端和服务端的编码实现，再到性能测试和系统优化，以及最后的打包发布，完整地介绍了移动互联网应用开发的过程。同时，本书也介绍了Android系统中比较有特色的功能，比如Google地图、LBS功能、传感器、摄像头、多媒体以及语音功能的使用等。此外，本书还介绍了Android NDK的开发以及Android游戏开发的相关内容，包括OpenGL的使用、流行游戏引擎Cocos2d-x和Unity 3D。\n本书适合于所有对Android和PHP技术有兴趣的读者。不管是客户端还是服务端的开发者，都可以从本书中获得不少有用的经验。另外，值得一提的是，全书绝大部分的实例代码均源自于真实项目，参考价值极高。",
      "price": "79.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 7,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "蓋索林",
        "gasolin"
      ],
      "pubdate": "2009",
      "tags": [
        {
          "count": 12,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 5,
          "name": "程序设计",
          "title": "程序设计"
        },
        {
          "count": 4,
          "name": "Google",
          "title": "Google"
        },
        {
          "count": 4,
          "name": "Java",
          "title": "Java"
        },
        {
          "count": 3,
          "name": "软件工程",
          "title": "软件工程"
        },
        {
          "count": 2,
          "name": "手机",
          "title": "手机"
        },
        {
          "count": 2,
          "name": "移动开发",
          "title": "移动开发"
        },
        {
          "count": 1,
          "name": "python",
          "title": "python"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s3701636.jpg",
      "binding": "",
      "translator": [],
      "catalog": "",
      "pages": "440",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s3701636.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s3701636.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s3701636.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/3642654\/",
      "id": "3642654",
      "publisher": "文魁",
      "isbn10": "9866482278",
      "isbn13": "9789866482274",
      "title": "Google！Android 手機應用程式設計入門",
      "url": "http:\/\/api.douban.com\/v2\/book\/3642654",
      "alt_title": "",
      "author_intro": "",
      "summary": "還不熟悉Java程式語言，但也想快速學會Android應用程式開發？看這本書就對了！在可見的將來，基於Android平台的手持設備程式設計，將像今日的PC程式設計一樣普及。無論是為了個人興趣或是工作需要，在官方教學文件如此貧乏的此刻，本書鉅細靡遺的教學，從一步步建立應用程式到重構程式碼，絕對能讓初學Android應用程式開發的您立刻上手開發屬於您的Android手持設備應用程式。本書在您學習Android應用程式設計的過程中處處以實例為導向，於用得著這些概念或架構之處配上詳細的解說。邊解釋邊移動，讓您在學到了概念，頭腦還熱著時就可以接觸到相應的程式碼，順暢地學習Android平台的運作與開發觀念。\n目錄：\n第一章 初探 Android\n第二章 安裝 Android 開發工具\n第三章 開啟現有專案\n第四章 操作 Android 模擬器（Emulator）\n第五章 建立一個 Android 應用程式\n第六章 描述使用者介面\n第七章 設計使用者介面\n第八章 存取識別符號\n第九章 解讀程式流程\n第十章 完成 BMI 程式\n第十一章 重構程式\n第十二章 加入對話框（Dialog）\n第十三章 查看線上內容（Uri）\n第十四章 加入選單（Menu）\n第十五章 定義 Android 清單（Manifest）\n第十六章 加入新活動（Activity）\n第十七章 傳送資料到新活動（Intent）\n第十八章 記錄與偵錯（Log）\n第十九章 活動的生命週期（LifeCycle）\n第二十章 儲存資訊（Preference）\n第二十一章 開發不息\n第二十二章 顯性設計\n第二十三章 支援多國語系\n第二十四章 使用接口（Adapter）\n第二十五章 加入下拉選單元件（Spinner）\n第二十六章 簽發應用程式金鑰（keytools）\n第二十七章 發佈到 Android 市集（Market）\n第二十八章 加入列表活動（ListActivity）\n第二十九章 使用資料庫（SQLite）\n第三十章 存取資料表（SQLiteOpenHelper）\n第三十一章 加入增刪改查操作（CRUD）\n第三十二章 加入相依的活動（ActivityForResult）\n第三十三章 申請 Google 地圖服務（API Key）\n第三十四章 使用地圖（MapView）\n第三十五章 加入按鍵控制（KeyEvent）\n第三十六章 取得現在位置（GPS\/基地台三角定位）\n第三十七章 結合地圖與定位功能（MyLocationOverlay）\n第三十八章 為地圖標上地標（ItemizedOverlay）\n附錄如何取得範例原始碼",
      "price": "520NT"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 7,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Nudelman, Greg"
      ],
      "pubdate": "2013-3",
      "tags": [
        {
          "count": 16,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 13,
          "name": "交互设计",
          "title": "交互设计"
        },
        {
          "count": 12,
          "name": "design",
          "title": "design"
        },
        {
          "count": 6,
          "name": "设计",
          "title": "设计"
        },
        {
          "count": 4,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 4,
          "name": "Programming",
          "title": "Programming"
        },
        {
          "count": 3,
          "name": "手机交互",
          "title": "手机交互"
        },
        {
          "count": 1,
          "name": "计算机技术",
          "title": "计算机技术"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s24978556.jpg",
      "binding": "",
      "translator": [],
      "catalog": "",
      "pages": "456",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s24978556.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s24978556.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s24978556.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/12890735\/",
      "id": "12890735",
      "publisher": "",
      "isbn10": "1118394151",
      "isbn13": "9781118394151",
      "title": "Android Design Patterns",
      "url": "http:\/\/api.douban.com\/v2\/book\/12890735",
      "alt_title": "",
      "author_intro": "",
      "summary": "Master the challenges of Android user interface development with these sample patterns With Android 4, Google brings the full power of its Android OS to both smartphone and tablet computing.  Designing effective user interfaces that work on multiple Android devices is extremely challenging. This book provides more than 75 patterns that you can use to create versatile user interfaces for both smartphones and tablets, saving countless hours of development time. Patterns cover the most common and yet difficult types of user interactions, and each is supported with richly illustrated, step-by-step instructions. Includes sample patterns for welcome and home screens, searches, sorting and filtering, data entry, navigation, images and thumbnails, interacting with the environment and networks, and more Features tablet-specific patterns and patterns for avoiding results you don't want Illustrated, step-by-step instructions describe what the pattern is, how it works, when and why to use it, and related patterns and antipatterns A companion website offers additional content and a forum for interaction Android Design Patterns: Interaction Design Solutions for Developers  provides extremely useful tools for developers who want to take advantage of the booming Android app development market.",
      "price": "$ 50.84"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 3,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "最佳实践与设计精粹",
      "author": [
        "张亚飞"
      ],
      "pubdate": "2011-10",
      "tags": [
        {
          "count": 11,
          "name": "手机",
          "title": "手机"
        },
        {
          "count": 11,
          "name": "移动互联网",
          "title": "移动互联网"
        },
        {
          "count": 10,
          "name": "移动web开发",
          "title": "移动web开发"
        },
        {
          "count": 4,
          "name": "互联网",
          "title": "互联网"
        },
        {
          "count": 4,
          "name": "iphone",
          "title": "iphone"
        },
        {
          "count": 3,
          "name": "移动终端",
          "title": "移动终端"
        },
        {
          "count": 2,
          "name": "设计",
          "title": "设计"
        },
        {
          "count": 2,
          "name": "移动端网页制作",
          "title": "移动端网页制作"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s26692610.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第一篇 手机版专用网站设计和开发入门篇\n第二篇 HTML5在iPhone、Android、Windows Phone的实战篇\n第三篇 基于HTML、CSS和Javascript设计网站和开发移动Web应用\n第四篇 基于HTML、CSS和Javascript开发手机应用程序",
      "pages": "464",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s26692610.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s26692610.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s26692610.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6938496\/",
      "id": "6938496",
      "publisher": "清华大学出版社",
      "isbn10": "7302268851",
      "isbn13": "9787302268857",
      "title": "Android、iPhone、Windows Phone手机网页及网站设计",
      "url": "http:\/\/api.douban.com\/v2\/book\/6938496",
      "alt_title": "",
      "author_intro": "《万维网应用程序开发纲要》起草者",
      "summary": "《Android、iPhone、Windows Phone手机网页及网站设计:最佳实践与设计精粹》侧重于实战，提供有各种手机浏览器兼容性指南，修复了当前普遍存在的错误认识，目的是帮助用户建立正确的手机网站设计以及手机Web应用程序开发的知识，面向具有一定Web开发技能的开发者。\n《Android、iPhone、Windows Phone手机网页及网站设计:最佳实践与设计精粹》共5大部分，包括4篇，具有清晰的知识脉络，分别介绍如下：\n第I篇是用于手机网站设计和开发的知识体系框架，包括手机网站的特点、各种标准的应用、设计时的注意事项，以及实用的工程范例。\n第II篇是HTML 5在iphone、Android、Windows Phone的实战篇，它为浏览器成为应用程序的运行平台提供了坚实的基础，这是Web开发的核心内容，也特别适用于移动Web应用程序的开发。本篇介绍了怎样在手机浏览器中使用HTML 5。\n第III篇是基于HTML、CSS和JavaScript开发移动Web应用程序，包括jQuery Mobile框架的使用。\n第IV篇是基于HTML、CSS和JavaScript结合PhoneGap框架开发手机应用程序，现在不需要Object-C和Java也可以实现手机应用程序的开发。\n所有功能皆提供了完整的应用范例，以帮助用户深入理解，对于想快速学习手机网站设计和手机应用程序开发的用户来说是最佳的学习捷径。\n《Android、iPhone、Windows Phone手机网页及网站设计:最佳实践与设计精粹》不仅适合于Web开发者和设计者快速制作手机专用网站，还可作为高等院校计算机专业教材。",
      "price": "69.80元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 22,
        "average": "6.1",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "明日科技"
      ],
      "pubdate": "2012-9-1",
      "tags": [
        {
          "count": 24,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 4,
          "name": "移动开发",
          "title": "移动开发"
        },
        {
          "count": 3,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 3,
          "name": "程序猿",
          "title": "程序猿"
        },
        {
          "count": 2,
          "name": "java",
          "title": "java"
        },
        {
          "count": 2,
          "name": "明日科技",
          "title": "明日科技"
        },
        {
          "count": 1,
          "name": "科技",
          "title": "科技"
        },
        {
          "count": 1,
          "name": "开发",
          "title": "开发"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s27441746.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "目　录\n第1篇　基础篇\n第1章　Android快速入门\t3\n教学录像：1小时19分钟\n1.1　什么是Android\t4\n1.1.1　平台特性\t4\n1.1.2　平台架构\t4\n1.1.3　Android市场\t5\n1.2　搭建Android开发环境\t6\n1.2.1　系统需求\t6\n1.2.2　JDK的下载\t6\n1.2.3　JDK的安装\t8\n1.2.4　Android SDK的下载与安装\t10\n1.2.5　Eclipse的下载与安装\t16\n1.2.6　Eclipse的汉化\t17\n1.2.7　ADT插件的安装及配置\t20\n1.3　第一个Android程序\t24\n1.3.1　创建Android应用程序\t25\n1.3.2　Android项目结构说明\t26\n1.3.3　运行Android应用程序\t29\n1.3.4　调试Android应用程序\t30\n1.3.5　Android应用开发流程\t32\n1.4　小结\t32\n1.5　实践与练习\t32\n第2章　Android模拟器与常用命令\t33\n教学录像：47分钟\n2.1　使用Android模拟器\t34\n2.1.1　模拟器概述\t34\n2.1.2　Android虚拟设备和模拟器\t34\n2.1.3　Android模拟器启动与停止\t36\n2.1.4　控制模拟器\t36\n2.1.5　模拟器与磁盘镜像\t37\n2.1.6　Android 4.0模拟器介绍\t38\n2.1.7　模拟器限制\t38\n2.1.8　范例1：设置模拟器语言\t38\n2.1.9　范例2：设置时区和时间\t40\n2.1.10　范例3：设置模拟器桌面背景\t40\n2.2　SDK中常用命令\t41\n2.2.1　adb命令\t43\n2.2.2　android命令\t45\n2.2.3　emulator命令\t47\n2.2.4　mksdcard命令\t48\n2.2.5　范例1：在SD卡上创建\/删除文件夹\t49\n2.2.6　范例2：使用DDMS透视图管理SD卡\t50\n2.3　经典范例\t52\n2.3.1　安装搜狗拼音输入法\t52\n2.3.2　卸载搜狗拼音输入法\t53\n2.3.3　使用模拟器拨打电话\t54\n2.4　小结\t54\n2.5　实践与练习\t55\n第3章　用户界面设计\t56\n教学录像：4小时57分钟\n3.1　控制UI界面\t57\n3.1.1　使用XML布局文件控制UI界面\t57\n3.1.2　在代码中控制UI界面\t59\n3.1.3　使用XML和Java代码混合控制UI\n界面\t61\n3.1.4　开发自定义的View\t63\n3.2　布局管理器\t65\n3.2.1　线性布局\t66\n3.2.2　表格布局\t69\n3.2.3　帧布局\t72\n3.2.4　相对布局\t74\n3.2.5　范例1：使用表格布局与线性布局实现\n分类工具栏\t76\n3.2.6　范例2：布局个性游戏开始界面\t80\n3.3　基本组件\t82\n3.3.1　文本框与编辑框\t82\n3.3.2　按钮\t88\n3.3.3　单选按钮和复选框\t91\n3.3.4　图像视图\t97\n3.3.5　列表选择框\t99\n3.3.6　列表视图\t102\n3.3.7　日期、时间拾取器\t106\n3.3.8　计时器\t108\n3.3.9　范例1：实现跟踪鼠标单击状态的图片\n按钮\t109\n3.3.10　范例2：实现带图标的ListView\t110\n3.4　经典范例\t112\n3.4.1　我同意游戏条款\t112\n3.4.2　猜猜鸡蛋放在哪只鞋子里\t115\n3.5　小结\t119\n3.6　实践与练习\t119\n第4章　高级用户界面设计\t120\n教学录像：2小时46分钟\n4.1　高级组件\t121\n4.1.1　自动完成文本框\t121\n4.1.2　进度条\t123\n4.1.3　拖动条和星级评分条\t126\n4.1.4　选项卡\t130\n4.1.5　图像切换器\t132\n4.1.6　网格视图\t134\n4.1.7　画廊视图\t138\n4.1.8　范例1：显示在标题上的进度条\t141\n4.1.9　范例2：幻灯片式图片浏览器\t143\n4.2　消息提示框与对话框\t146\n4.2.1　使用Toast显示消息提示框\t146\n4.2.2　使用Notification在状态栏上显示通知\t147\n4.2.3　使用AlertDialog创建对话框\t150\n4.2.4　范例1：询问是否退出的对话框\t155\n4.2.5　范例2：带图标的列表对话框\t157\n4.3　经典范例\t159\n4.3.1　实现仿Windows 7图片预览窗格效果\t159\n4.3.2　状态栏中显示代表登录状态的图标\t161\n4.4　小结\t164\n4.5　实践与练习\t165\n第5章　基本程序单元Activity\t166\n教学录像：2小时4分钟\n5.1　Activity概述\t167\n5.2　创建、配置、启动和关闭Activity\t168\n5.2.1　创建Activity\t168\n5.2.2　配置Activity\t169\n5.2.3　启动和关闭Activity\t170\n5.2.4　范例1：实现启动和关闭Activity\t171\n5.2.5　范例2：实现应用对话框主题的关于\nActivity\t173\n5.3　多个Activity的使用\t175\n5.3.1　使用Bundle在Activity之间交换数据\t175\n5.3.2　调用另一个Activity并返回结果\t177\n5.3.3　范例1：实现根据身高计算标准体重\t179\n5.3.4　范例2：带选择头像的用户注册页面\t182\n5.4　使用Fragment\t185\n5.4.1　创建Fragment\t186\n5.4.2　在Activity中添加Fragment\t186\n5.5　经典范例\t191\n5.5.1　仿QQ客户端登录界面\t191\n5.5.2　带查看原图功能的图像浏览器\t195\n5.6　小结\t198\n5.7　实践与练习\t198\n第6章　Android应用核心Intent\t199\n教学录像：39分钟\n6.1　Intent对象\t200\n6.1.1　组件名称（Component Name）\t200\n6.1.2　动作（Action）\t200\n6.1.3　数据（Data）\t202\n6.1.4　种类（Category）\t203\n6.1.5　额外（Extras）\t204\n6.1.6　标记（Flags）\t204\n6.1.7　范例1：在Activity间使用Intent传递\n信息\t204\n6.1.8　范例2：返回系统Home桌面\t207\n6.2　Intent使用\t208\n6.2.1　Intent过滤器\t209\n6.2.2　范例1：使用包含预定义动作的隐式\nIntent\t211\n6.2.3　范例2：使用包含自定义动作的隐式\nIntent\t213\n6.3　经典范例\t215\n6.3.1　使用Intent拨打电话\t215\n6.3.2　使用Intent打开网页\t217\n6.4　小结\t218\n6.5　实践与练习\t218\n第7章　Android事件处理\t219\n教学录像：37分钟\n7.1　事件处理概述\t220\n7.2　处理键盘事件\t220\n7.2.1　物理按键简介\t220\n7.2.2　范例1：屏蔽后退键\t221\n7.2.3　范例2：提示音量增加事件\t222\n7.3　处理触摸事件\t223\n7.3.1　范例1：按钮触摸事件\t223\n7.3.2　范例2：检测触摸事件\t224\n7.4　手势的创建与识别\t225\n7.4.1　手势的创建\t225\n7.4.2　手势的导出\t226\n7.4.3　手势的识别\t226\n7.5　经典范例\t228\n7.5.1　查看手势对应分值\t228\n7.5.2　使用手势输入数字\t230\n7.6　小结\t231\n7.7　实践与练习\t231\n第8章　资源访问\t232\n教学录像：2小时56分钟\n8.1　字符串（string）资源\t233\n8.1.1　定义字符串资源文件\t233\n8.1.2　使用字符串资源\t233\n8.2　颜色（color）资源\t234\n8.2.1　颜色值的定义\t234\n8.2.2　定义颜色资源文件\t234\n8.2.3　使用颜色资源\t235\n8.3　尺寸（dimen）资源\t235\n8.3.1　Android支持的尺寸单位\t235\n8.3.2　定义尺寸资源文件\t236\n8.3.3　使用尺寸资源\t236\n8.3.4　范例1：通过字符串、颜色和尺寸资源\n改变文字及样式\t237\n8.3.5　范例2：逐渐加宽的彩虹桥背景\t239\n8.4　布局（Layout）资源\t240\n8.5　数组（array）资源\t241\n8.5.1　定义数组资源文件\t241\n8.5.2　使用数组资源\t241\n8.6　Drawable资源\t242\n8.6.1　图片资源\t242\n8.6.2　StateListDrawable资源\t245\n8.6.3　范例1：使用9-Patch图片实现不失真\n按钮背景\t246\n8.6.4　范例2：控制按钮是否可用\t247\n8.7　样式（style）和主题（theme）资源\t249\n8.7.1　样式资源\t249\n8.7.2　主题资源\t250\n8.8　原始XML资源\t252\n8.9　菜单（menu）资源\t253\n8.9.1　定义菜单资源文件\t254\n8.9.2　使用菜单资源\t255\n8.9.3　范例1：创建上下文菜单\t256\n8.9.4　范例2：创建带子菜单的选项菜单\t258\n8.10　Android程序国际化\t260\n8.11　经典范例\t261\n8.11.1　背景半透明效果的Activity\t261\n8.11.2　实现了国际化的选项菜单\t263\n8.12　小结\t265\n8.13　实践与练习\t266\n第2篇　高级篇\n第9章　图形图像处理技术\t269\n教学录像：2小时56分钟\n9.1　常用绘图类\t270\n9.1.1　Paint类\t270\n9.1.2　Canvas类\t272\n9.1.3　Bitmap类\t273\n9.1.4　BitmapFactory类\t274\n9.2　绘制2D图像\t274\n9.2.1　绘制几何图形\t274\n9.2.2　绘制文本\t277\n9.2.3　绘制路径\t279\n9.2.4　绘制图片\t281\n9.2.5　范例1：绘制Android的机器人\t284\n9.2.6　范例2：实现简易涂鸦板\t285\n9.3　为图形添加特效\t290\n9.3.1　旋转图像\t290\n9.3.2　缩放图像\t292\n9.3.3　倾斜图像\t294\n9.3.4　平移图像\t295\n9.3.5　使用BitmapShader渲染图像\t296\n9.3.6　范例1：实现带描边的圆角图片\t298\n9.3.7　范例2：实现放大镜效果\t299\n9.4　Android中的动画\t301\n9.4.1　实现逐帧动画\t301\n9.4.2　实现补间动画\t302\n9.4.3　范例1：忐忑的精灵\t306\n9.4.4　范例2：旋转、平移、缩放和透明度\n渐变的补间动画\t308\n9.5　经典范例\t310\n9.5.1　在GridView中显示SD卡上的全部\n图片\t310\n9.5.2　迷途奔跑的野猪\t313\n9.6　小结\t316\n9.7　实践与练习\t316\n第10章　多媒体应用开发\t317\n教学录像：1小时36分钟\n10.1　播放音频与视频\t318\n10.1.1　使用MediaPlayer播放音频\t318\n10.1.2　使用SoundPool播放音频\t322\n10.1.3　使用VideoView播放视频\t325\n10.1.4　使用MediaPlayer和SurfaceView\n播放视频\t327\n10.1.5　范例1：播放SD卡上的全部音频\n文件\t331\n10.1.6　范例2：带音量控制的音乐播放器\t336\n10.2　控制相机拍照\t337\n10.3　经典范例\t342\n10.3.1　为游戏界面添加背景音乐和按键音\t342\n10.3.2　制作开场动画\t346\n10.4　小结\t348\n10.5　实践与练习\t348\n第11章　ContentProvider实现数据共享\t349\n教学录像：42分钟\n11.1　Content Provider概述\t350\n11.1.1　数据模型\t350\n11.1.2　URI的用法\t351\n11.2　预定义Content Provider\t351\n11.2.1　查询数据\t352\n11.2.2　增加记录\t353\n11.2.3　增加新值\t353\n11.2.4　批量更新记录\t353\n11.2.5　删除记录\t353\n11.2.6　范例1：系统内置联系人的使用\t354\n11.2.7　范例2：查询联系人ID和姓名\t354\n11.3　自定义Content Provider\t356\n11.3.1　继承ContentProvider类\t356\n11.3.2　声明Content Provider\t358\n11.4　经典范例\t359\n11.4.1　查询联系人姓名和电话\t359\n11.4.2　自动补全联系人姓名\t360\n11.5　小结\t363\n11.6　实践与练习\t363\n第12章　线程与消息处理\t364\n教学录像：50分钟\n12.1　实现多线程\t365\n12.1.1　创建线程\t365\n12.1.2　开启线程\t366\n12.1.3　线程的休眠\t366\n12.1.4　中断线程\t366\n12.1.5　范例1：通过实现Runnable接口来\n创建线程\t367\n12.1.6　范例2：开启一个新线程播放背景\n音乐\t369\n12.2　Handler消息传递机制\t371\n12.2.1　循环者（Looper）简介\t371\n12.2.2　消息处理类（Handler）简介\t373\n12.2.3　消息类（Message）简介\t374\n12.2.4　范例1：开启新线程获取网络图片\n并显示到ImageView中\t374\n12.2.5　范例2：开启新线程实现电子广告牌\t376\n12.3　经典范例\t378\n12.3.1　多彩的霓虹灯\t378\n12.3.2　简易打地鼠游戏\t380\n12.4　小结\t382\n12.5　实践与练习\t382\n第13章　Service应用\t383\n教学录像：48分钟\n13.1　Service概述\t384\n13.1.1　Service的分类\t384\n13.1.2　Service类中的重要方法\t384\n13.1.3　Service的声明\t386\n13.2　创建Started Service\t387\n13.2.1　继承IntentService类\t388\n13.2.2　继承Service类\t389\n13.2.3　启动服务\t390\n13.2.4　停止服务\t391\n13.2.5　实例1：继承IntentService输出当前\n时间\t391\n13.2.6　实例2：继承Service输出当前时间\t393\n13.3　创建Bound Service\t396\n13.3.1　继承Binder类\t397\n13.3.2　使用Messenger类\t399\n13.3.3　绑定到服务\t400\n13.3.4　实例1：继承Binder类绑定服务显示\n时间\t401\n13.3.5　实例2：使用Messenger类绑定服务\n显示时间\t404\n13.4　管理Service的生命周期\t407\n13.5　经典范例\t408\n13.5.1　视力保护程序\t408\n13.5.2　查看当前运行服务信息\t410\n13.6　小结\t412\n13.7　实践与练习\t412\n第14章　网络编程及Internet应用\t413\n教学录像：1小时36分钟\n14.1　通过HTTP访问网络\t414\n14.1.1　使用HttpURLConnection访问网络\t414\n14.1.2　使用HttpClient访问网络\t422\n14.1.3　范例1：从指定网站下载文件\t427\n14.1.4　范例2：访问需要登录后才能访问的\n页面\t430\n14.2　使用WebView显示网页\t436\n14.2.1　使用WebView组件浏览网页\t436\n14.2.2　使用WebView加载HTML代码\t437\n14.2.3　让WebView支持JavaScript\t439\n14.3　经典范例\t440\n14.3.1　打造功能实用的网页浏览器\t440\n14.3.2　获取天气预报\t443\n14.4　小结\t445\n14.5　实践与练习\t446\n第3篇　项目实战篇\n第15章　基于Android的家庭理财通\t449\n教学录像：51分钟\n15.1　系统分析\t450\n15.1.1　需求分析\t450\n15.1.2　可行性分析\t450\n15.1.3　编写项目计划书\t451\n15.2　系统设计\t452\n15.2.1　系统目标\t452\n15.2.2　系统功能结构\t453\n15.2.3　系统业务流程\t453\n15.2.4　系统编码规范\t454\n15.3　系统开发及运行环境\t455\n15.4　数据库与数据表设计\t456\n15.4.1　数据库分析\t456\n15.4.2　创建数据库\t456\n15.4.3　创建数据表\t457\n15.5　创建项目\t458\n15.6　系统文件夹组织结构\t460\n15.7　公共类设计\t460\n15.7.1　数据模型公共类\t460\n15.7.2　Dao公共类\t462\n15.8　登录模块设计\t467\n15.8.1　设计登录布局文件\t467\n15.8.2　登录功能的实现\t468\n15.8.3　退出登录窗口\t469\n15.9　系统主窗体设计\t470\n15.9.1　设计系统主窗体布局文件\t470\n15.9.2　显示各功能窗口\t471\n15.9.3　定义文本及图片组件\t473\n15.9.4　定义功能图标及说明文字\t473\n15.9.5　设置功能图标及说明文字\t473\n15.10　收入管理模块设计\t475\n15.10.1　设计新增收入布局文件\t475\n15.10.2　设置收入时间\t479\n15.10.3　添加收入信息\t480\n15.10.4　重置新增收入窗口中的各个控件\t481\n15.10.5　设计收入信息浏览布局文件\t481\n15.10.6　显示所有的收入信息\t482\n15.10.7　单击指定项时打开详细信息\t483\n15.10.8　设计修改\/删除收入布局文件\t484\n15.10.9　显示指定编号的收入信息\t487\n15.10.10　修改收入信息\t489\n15.10.11　删除收入信息\t489\n15.11　便签管理模块设计\t490\n15.11.1　设计新增便签布局文件\t490\n15.11.2　添加便签信息\t492\n15.11.3　清空便签文本框\t493\n15.11.4　设计便签信息浏览布局文件\t493\n15.11.5　显示所有的便签信息\t495\n15.11.6　单击指定项时打开详细信息\t496\n15.11.7　设计修改\/删除便签布局文件\t497\n15.11.8　显示指定编号的便签信息\t499\n15.11.9　修改便签信息\t500\n15.11.10　删除便签信息\t500\n15.12　系统设置模块设计\t500\n15.12.1　设计系统设置布局文件\t501\n15.12.2　设置登录密码\t502\n15.12.3　重置密码文本框\t503\n15.13　运行项目\t503\n15.14　将程序安装到Android手机上\t504\n15.15　开发中常见问题与解决方法\t506\n15.15.1　程序在装有Android系统的手机上\n无法运行\t506\n15.15.2　无法将最新修改在Android模拟器\n中体现\t506\n15.15.3　退出系统后还能使用记录的密码登录\t506\n15.16　小结\t507",
      "pages": "507",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s27441746.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s27441746.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s27441746.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/11534979\/",
      "id": "11534979",
      "publisher": "清华大学出版社",
      "isbn10": "7302293155",
      "isbn13": "9787302293156",
      "title": "Android从入门到精通",
      "url": "http:\/\/api.douban.com\/v2\/book\/11534979",
      "alt_title": "",
      "author_intro": "",
      "summary": "内 容 简 介\n《Android从入门到精通》从初学者的角度出发，通过通俗易懂的语言、丰富多彩的实例，详细介绍了Android应用程序开发应该掌握的各方面技术。全书共分15章，内容包括Android快速入门、Android模拟器与常用命令、用户界面设计、高级用户界面设计、基本程序单元Activity、Android应用核心Intent、Android事件处理、资源访问、图形图像处理技术、多媒体应用开发、Content Provider实现数据共享线程与消息处理、Service应用、网络编程及Internet应用和基于Android的家庭理财通。所有知识都结合具体实例进行介绍，涉及的程序代码给出了详细的注释，可以使读者轻松领会Android应用程序开发的精髓，快速提高开发技能。另外，本书除了纸质内容之外，配书光盘中还给出了海量开发资源库，主要内容如下：\n 语音视频讲解：总时长25小时，共62段        \t\t 技术资源库：600页专业参考文档\n 实例资源库：436个经典实例  \t\t           \t 面试资源库：369道面试真题\n 能力测试题库：138道能力测试题目              \t PPT电子教案\n本书适合作为软件开发入门者的自学用书，也适合作为高等院校相关专业的教学参考书，也可供开发人员查阅、参考。",
      "series": {
        "id": "25599",
        "title": "软件开发视频大讲堂 第3版"
      },
      "price": "69.80元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 11,
        "average": "7.2",
        "min": 0
      },
      "subtitle": "Programming with the Google SDK",
      "author": [
        "Rick Rogers",
        "John Lombardo",
        "Zigurd Mednieks",
        "G. Blake Meike"
      ],
      "pubdate": "2009-05-13",
      "tags": [
        {
          "count": 13,
          "name": "android",
          "title": "android"
        },
        {
          "count": 2,
          "name": "mobile",
          "title": "mobile"
        },
        {
          "count": 1,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 1,
          "name": "linux",
          "title": "linux"
        },
        {
          "count": 1,
          "name": "API",
          "title": "API"
        },
        {
          "count": 1,
          "name": "US",
          "title": "US"
        },
        {
          "count": 1,
          "name": "Mobile",
          "title": "Mobile"
        },
        {
          "count": 1,
          "name": "Google",
          "title": "Google"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s4545498.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "318",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s4545498.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s4545498.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s4545498.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/3574822\/",
      "id": "3574822",
      "publisher": "O'Reilly Media",
      "isbn10": "0596521472",
      "isbn13": "9780596521479",
      "title": "Android Application Development",
      "url": "http:\/\/api.douban.com\/v2\/book\/3574822",
      "alt_title": "",
      "author_intro": "",
      "summary": "This practical book provides the concepts and code you need to develop software with Android, the open-source platform for cell phones and mobile devices that's generating enthusiasm across the industry. Based on the Linux operating system and developed by Google and the Open Handset Alliance, Android has the potential to unite a fragmented mobile market. \"Android Application Development\" introduces this programming environment, and offers you a complete working example that demonstrates Android architectural features and APIs. With this book, you will: get a complete introduction to the Android programming environment, architecture, and tools; build a modular application, beginning with a core module that serves to launch modules added in subsequent chapters; learn the concepts and architecture of a specific feature set, including views, maps, location-based services, persistent data storage, 2D and 3D graphics, media services, telephony services, and messaging; use ready-to-run example code that implements each feature; and, delve into advanced topics, such as security, custom views, performance analysis, and internationalization.  The book is a natural complement to the existing Android documentation provided by Google. Whether you want to develop a commercial application for mobile devices, or just want to create a mobile mashup for personal use, \"Android Application Development\" demonstrates how you can design, build, and test applications for the new mobile market.",
      "price": "USD 39.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 28,
        "average": "6.6",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "徐宜生"
      ],
      "pubdate": "2015-9-1",
      "tags": [
        {
          "count": 39,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 9,
          "name": "Android进阶",
          "title": "Android进阶"
        },
        {
          "count": 5,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 2,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 2,
          "name": "码码码",
          "title": "码码码"
        },
        {
          "count": 1,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 1,
          "name": "徐宜生",
          "title": "徐宜生"
        },
        {
          "count": 1,
          "name": "动画",
          "title": "动画"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s28283342.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "第1章  Android体系与系统架构\t1\n1.1  Google生态系统\t2\n1.2  Android系统架构\t2\n1.2.1  Linux\t3\n1.2.2  Dalvik与ART\t3\n1.2.3  Framework\t3\n1.2.4  Standard libraries\t4\n1.2.5  Application\t4\n1.3  Android App组件架构\t4\n1.3.1  Android四大组件如何协同工作\t5\n1.3.2  应用运行上下文对象\t5\n1.4  Android系统源代码目录与系统目录\t6\n1.4.1  Android系统源代码目录\t6\n1.4.2  Android系统目录\t8\n1.4.3  Android App文件目录\t11\n第2章  Android开发工具新接触\t13\n2.1  Android开发IDE介绍\t14\n2.1.1  Android Studio初体验\t14\n2.1.2  Android Studio配置\t15\n2.2  Android Studio高级使用技巧\t19\n2.2.1  更新SDK\t20\n2.2.2  Android Studio常用界面\t21\n2.2.3  导入Android Studio工程\t23\n2.3  ADB命令使用技巧\t24\n2.3.1  ADB基础\t24\n2.3.2  ADB常用命令\t25\n2.3.3  ADB命令来源\t29\n2.4  模拟器使用与配置\t29\n第3章  Android控件架构与自定义控件详解\t32\n3.1  Android控件架构\t33\n3.2  View的测量\t34\n3.3  View的绘制\t37\n3.4  ViewGroup的测量\t38\n3.5  ViewGroup的绘制\t39\n3.6  自定义View\t39\n3.6.1  对现有控件进行拓展\t40\n3.6.2  创建复合控件\t43\n3.6.3  重写View来实现全新的控件\t51\n3.7  自定义ViewGroup\t54\n3.8  事件拦截机制分析\t59\n第4章  ListView使用技巧\t65\n4.1  ListView常用优化技巧\t66\n4.1.1  使用ViewHolder模式提高效率\t66\n4.1.2  设置项目间分隔线\t68\n4.1.3  隐藏ListView的滚动条\t68\n4.1.4  取消ListView的Item点击效果\t68\n4.1.5  设置ListView需要显示在第几项\t69\n4.1.6  动态修改ListView\t69\n4.1.7  遍历ListView中的所有Item\t71\n4.1.8  处理空ListView\t71\n4.1.9  ListView滑动监听\t72\n4.2  ListView常用拓展\t74\n4.2.1  具有弹性的ListView\t75\n4.2.2  自动显示、隐藏布局的ListView\t76\n4.2.3  聊天ListView\t79\n4.2.4  动态改变ListView布局\t85\n第5章  Android Scroll分析\t87\n5.1  滑动效果是如何产生的\t88\n5.1.1  Android坐标系\t88\n5.1.2  视图坐标系\t88\n5.1.3  触控事件——MotionEvent\t89\n5.2  实现滑动的七种方法\t91\n5.2.1  layout方法\t92\n5.2.2  offsetLeftAndRight()与offsetTopAndBottom()\t93\n5.2.3  LayoutParams\t93\n5.2.4  scrollTo与scrollBy\t94\n5.2.5  Scroller\t96\n5.2.6  属性动画\t98\n5.2.7  ViewDragHelper\t98\n第6章  Android绘图机制与处理技巧\t106\n6.1  屏幕的尺寸信息\t107\n6.1.1  屏幕参数\t107\n6.1.2  系统屏幕密度\t107\n6.1.3  独立像素密度dp\t107\n6.1.4  单位转换\t108\n6.2  2D绘图基础\t110\n6.3  Android XML绘图\t113\n6.3.1  Bitmap\t113\n6.3.2  Shape\t113\n6.3.3  Layer\t115\n6.3.4  Selector\t116\n6.4  Android绘图技巧\t117\n6.4.1  Canvas\t117\n6.4.2  Layer图层\t121\n6.5  Android图像处理之色彩特效处理\t122\n6.5.1  色彩矩阵分析\t122\n6.5.2  Android颜色矩阵——ColorMatrix\t128\n6.5.3  常用图像颜色矩阵处理效果\t131\n6.5.4  像素点分析\t134\n6.5.5  常用图像像素点处理效果\t135\n6.6  Android图像处理之图形特效处理\t137\n6.6.1  Android变形矩阵——Matrix\t137\n6.6.2  像素块分析\t142\n6.7  Android图像处理之画笔特效处理\t145\n6.7.1  PorterDuffXfermode\t145\n6.7.2  Shader\t149\n6.7.3  PathEffect\t153\n6.8  View之孪生兄弟——SurfaceView\t155\n6.8.1  SurfaceView与View的区别\t155\n6.8.2  SurfaceView的使用\t156\n6.8.3  SurfaceView实例\t159\n第7章  Android动画机制与使用技巧\t162\n7.1  Android View动画框架\t163\n7.1.1  透明度动画\t163\n7.1.2  旋转动画\t163\n7.1.3  位移动画\t164\n7.1.4  缩放动画\t164\n7.1.5  动画集合\t164\n7.2  Android属性动画分析\t165\n7.2.1  ObjectAnimator\t166\n7.2.2  PropertyValuesHolder\t168\n7.2.3  ValueAnimator\t168\n7.2.4  动画事件的监听\t168\n7.2.5  AnimatorSet\t169\n7.2.6  在XML中使用属性动画\t170\n7.2.7  View的animate方法\t170\n7.3  Android布局动画\t171\n7.4  Interpolators（插值器）\t171\n7.5  自定义动画\t172\n7.6  Android 5.X SVG矢量动画机制\t175\n7.6.1  ＜path＞标签\t175\n7.6.2  SVG常用指令\t176\n7.6.3  SVG编辑器\t177\n7.6.4  Android中使用SVG\t177\n7.6.5  SVG动画实例\t181\n7.7  Android动画特效\t188\n7.7.1  灵动菜单\t188\n7.7.2  计时器动画\t190\n7.7.3  下拉展开动画\t191\n第8章  Activity与Activity调用栈分析\t195\n8.1  Activity\t196\n8.1.1  起源\t196\n8.1.2  Activity形态\t196\n8.1.3  生命周期\t196\n8.2  Android任务栈简介\t200\n8.3  AndroidMainifest启动模式\t200\n8.3.1  standard\t201\n8.3.2  singleTop\t201\n8.3.3  singleTask\t201\n8.3.4  singleInstance\t202\n8.4  Intent Flag启动模式\t203\n8.5  清空任务栈\t203\n8.6  Activity任务栈使用\t204\n第9章  Android系统信息与安全机制\t205\n9.1  Android系统信息获取\t206\n9.1.1  android.os.Build\t206\n9.1.2  SystemProperty\t207\n9.1.3  Android系统信息实例\t208\n9.2  Android Apk应用信息获取之PackageManager\t209\n9.2.1  PackageManager\t210\n9.3  Android Apk应用信息获取之ActivityManager\t215\n9.4  解析Packages.xml获取系统信息\t218\n9.5  Android安全机制\t220\n9.5.1  Android安全机制简介\t220\n9.5.2  Android系统安全隐患\t222\n9.5.3  Android Apk反编译\t223\n9.5.4  Android Apk加密\t226\n第10章  Android性能优化\t227\n10.1  布局优化\t228\n10.1.1  Android UI渲染机制\t228\n10.1.2  避免Overdraw\t229\n10.1.3  优化布局层级\t229\n10.1.4  避免嵌套过多无用布局\t229\n10.1.5  Hierarchy Viewer\t234\n10.2  内存优化\t236\n10.2.1  什么是内存\t236\n10.2.2  获取Android系统内存信息\t237\n10.2.3  内存回收\t238\n10.2.4  内存优化实例\t238\n10.3  Lint工具\t240\n10.4  使用Android Studio的Memory Monitor工具\t240\n10.5  使用TraceView工具优化App性能\t241\n10.5.1  生成TraceView日志的两种方法\t241\n10.5.2  打开TraceView日志\t242\n10.5.3  分析TraceView日志\t242\n10.6  使用MAT工具分析App内存状态\t244\n10.6.1  生成HPROF文件\t244\n10.6.2  分析HPROF文件\t245\n10.7  使用Dumpsys命令分析系统状态\t247\n第11章  搭建云端服务器\t248\n11.1  移动后端服务介绍\t249\n11.2  使用Bmob创建移动后端服务\t250\n11.2.1  数据服务\t251\n11.2.2  推送服务\t254\n第12章  Android 5.X新特性详解\t257\n12.1  Android 5.X UI设计初步\t258\n12.1.1  材料的形态模拟\t258\n12.1.2  更加真实的动画\t258\n12.1.3  大色块的使用\t259\n12.2  Material Design主题\t260\n12.3  Palette\t261\n12.4  视图与阴影\t263\n12.5  Tinting和Clipping\t265\n12.5.1  Tinting（着色）\t265\n12.5.2  Clipping（裁剪）\t267\n12.6  列表与卡片\t269\n12.6.1  RecyclerView\t269\n12.6.2  CardView\t275\n12.7  Activity过渡动画\t276\n12.8  Material Design 动画效果\t283\n12.8.1  Ripple效果\t283\n12.8.2  Circular Reveal\t285\n12.8.3  View state changes Animation\t288\n12.9  Toolbar\t293\n12.10  Notification\t296\n12.10.1  基本的Notification\t297\n12.10.2  折叠式Notification\t298\n12.10.3  悬挂式Notification\t300\n12.10.4  显示等级的Notification\t301\n第13章  Android实例提高\t303\n13.1  移动迷宫——拼图游戏\t304\n13.1.1  准备工作\t305\n13.1.2  初始界面\t307\n13.1.3  拼图界面\t312\n13.1.4  效果预览与功能进阶\t324\n13.2  魔幻矩阵——2048\t325\n13.2.1  2048概述\t325\n13.2.2  2048游戏分析\t326\n13.2.3  2048初始化工作\t327\n13.2.4  小方块设计\t328\n13.2.5  全局设置\t330\n13.2.6  游戏面板设计\t332\n13.2.7  主程序设计\t340\n13.2.8  功能进阶\t341\n13.3  实战经验总结\t342",
      "pages": "356",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s28283342.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s28283342.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s28283342.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/26599539\/",
      "id": "26599539",
      "publisher": "电子工业出版社",
      "isbn10": "712126773X",
      "isbn13": "9787121267734",
      "title": "Android群英传",
      "url": "http:\/\/api.douban.com\/v2\/book\/26599539",
      "alt_title": "",
      "author_intro": "",
      "summary": "《Android群英传》对具有一定Android开发基础的读者，以通俗易懂的语言介绍了Android开发的进阶技巧。《Android群英传》共分为13章，讲解了Android体系与系统架构、Android开发工具新接触、Android控件架构与自定义控件详解、ListView使用技巧、Android Scroll分析、Android绘图机制与处理技巧、Android动画机制与使用技巧、Activity与Activity调用栈分析、Android系统信息与安全机制、Android性能优化、搭建云端服务器、Android 5.X新特性详解、Android实例提高。《Android群英传》最后通过实例来展示如何实际实践这些技巧，让读者更好地体会如何提高Android开发。\n《Android群英传》运用大量实际开发中的实例，并结合最新的Android开发SDK和IDE，让读者能够了解最前沿的开发技术。《Android群英传》适合具有一定开发基础的开发者，帮助开发者快速提高开发能力。",
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 13,
        "average": "7.3",
        "min": 0
      },
      "subtitle": "Building Applications with the Android SDK",
      "author": [
        "James Steele",
        "Nelson To"
      ],
      "pubdate": "2010-10-27",
      "tags": [
        {
          "count": 13,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 3,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 2,
          "name": "技术",
          "title": "技术"
        },
        {
          "count": 2,
          "name": "Programming",
          "title": "Programming"
        },
        {
          "count": 2,
          "name": "Mobile",
          "title": "Mobile"
        },
        {
          "count": 2,
          "name": "IT",
          "title": "IT"
        },
        {
          "count": 2,
          "name": "计算机科学",
          "title": "计算机科学"
        },
        {
          "count": 1,
          "name": "计算机",
          "title": "计算机"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s4561316.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "400",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s4561316.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s4561316.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s4561316.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/5392351\/",
      "id": "5392351",
      "publisher": "Addison-Wesley Professional",
      "isbn10": "0321741234",
      "isbn13": "9780321741233",
      "title": "The Android Developer's Cookbook",
      "url": "http:\/\/api.douban.com\/v2\/book\/5392351",
      "alt_title": "",
      "author_intro": "",
      "summary": "Want to get started building applications for Android, the world's hottest, fast-growing mobile platform? Already building Android applications and want to get better at it? This book brings together all the expert guidance-and code-you'll need! Completely up-to-date to reflect the newest and most widely used Android SDKs, The Android Developer's Cookbook is the essential resource for developers building apps for any Android device, from phones to tablets. Proven, modular recipes take you from the absolute basics to advanced location-based services, security techniques, and performance optimization. You'll learn how to write apps from scratch, ensure interoperability, choose the best solutions for common problems, and avoid development pitfalls. Coverage includes:  * Implementing threads, services, receivers, and other background tasks * Providing user alerts * Organizing user interface layouts and views * Managing user-initiated events such as touches and gestures * Recording and playing audio and video * Using hardware APIs available on Android devices * Interacting with other devices via SMS, web browsing, and social networking * Storing data efficiently with SQLite and its alternatives * Accessing location data via GPS * Using location-related services such as the Google Maps API * Building faster applications with native code * Providing backup and restore with the Android Backup Manager * Testing and debugging apps throughout the development cycle Turn to The Android Developer's Cookbook for proven, expert answers-and the code you need to implement them. It's all you need to jumpstart any Android project, and create high-value, feature-rich apps that sell!",
      "price": "USD 39.99"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 8,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "Android游戏开发大全",
      "author": [
        "吴亚峰\/\/苏亚光"
      ],
      "pubdate": "2012-1",
      "tags": [
        {
          "count": 13,
          "name": "游戏开发",
          "title": "游戏开发"
        },
        {
          "count": 11,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 5,
          "name": "Android游戏开发大全",
          "title": "Android游戏开发大全"
        },
        {
          "count": 1,
          "name": "Google",
          "title": "Google"
        },
        {
          "count": 1,
          "name": "游戏",
          "title": "游戏"
        },
        {
          "count": 1,
          "name": "计算机技术",
          "title": "计算机技术"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s8484967.jpg",
      "binding": "",
      "translator": [
        "百纳科技 注解"
      ],
      "catalog": "第一篇  Android游戏开发核心技术  第1章  Android平台简介  第2章  Android游戏开发之前台渲染  第3章  Android游戏开发之交互式通信  第4章  Android游戏开发之数据存储和传感器  第5章  Android游戏开发之网络编程  第6章  不一样的游戏，一样的精彩  第7章  游戏背后的数学与物理  第8章  游戏中的人工智能  第9章  游戏开发小秘技  第10章  游戏的心脏——物理引擎  第11章  OpenGL ES应用开发基础第二篇  Android游戏开发实战综合案例  第12章  滚屏动作游戏——太空保卫战  第13章  棋牌游戏——中国象棋人机对弈  第14章  物理传感器游戏——小球快跑(3D版)  第15章  塔防游戏——精灵塔防  第16章  策略游戏——回到战国  第17章  体育游戏——2D迷你桌球  第18章  益智游戏——3D版推箱子  第19章  物理引擎游戏——盛怒的老鼠",
      "pages": "674",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s8484967.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s8484967.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s8484967.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6981180\/",
      "id": "6981180",
      "publisher": "人民邮电出版社",
      "isbn10": "7115264937",
      "isbn13": "9787115264930",
      "title": "Android游戏开发大全",
      "url": "http:\/\/api.douban.com\/v2\/book\/6981180",
      "alt_title": "",
      "author_intro": "吴亚峰，毕业于北京邮电大学，后留学澳大利亚卧龙岗大学取得硕士学位，1998年开始从事Java的开发，有十多年的Java开发经验与培训经验，主要的研究方向是Java EE。现在为Java EE独立软件开发工程师，同时兼任Sun授权、Java培训中心认证教师，为数十家著名企业培训了上千名软件开发人员，曾编写过《精通NetBeans——Java桌面、Web与企业级程序开发详解》及《Java SE 6.0编程指南》等畅销技术书籍。\n    苏亚光：JavaME独立软件工程师，有软件领域7年的从业经验，在软件开发和计算机教学方面有着丰富的经验。早期主要从事底层软件的设计与开发工作，现主要从事JavaEE企业应用程序的开发、设计等方面的工作。同时，在SOA领域也做了很多有益的工作。",
      "summary": "《Android游戏开发大全》以Android手机游戏的开发为主题，结合真实的游戏案例向读者详细介绍了Android平台下游戏开发的整个流程，同时在游戏开发的介绍过程中还分享了作者多年积累的开发技巧与经验。\n全书分为两篇，共19章，第1篇(第1～11章)以简单易懂的实例为依托，详细介绍了Android的前台渲染技术、常用界面布局、网络开发、SQLite数据库的存取、传感器应用的开发、游戏中经常使用的人工智能算法、流行的物理引擎Box2D以及OpenGLES3D开发的相关知识。第2篇(第12～19章)详细介绍了8个真实的游戏案例，涵盖了手机游戏中的8个不同种类，包括体育类、益智类、滚屏动作类、棋牌类、物理传感器类、塔防类、物理引擎类以及策略类游戏。每一个游戏都是按照实际的开发步骤进行介绍，并逐步地将Android手机游戏的整个开发过程展现在读者面前。同时在源代码中还包含了详细的注释，以尽量帮助读者掌握代码中的每一个细节。另外，第2篇中所有的案例项目都配有讲解视频，以帮助读者快速理解并得到提升。\n《Android游戏开发大全》的讲述由浅入深，从游戏开发的基础知识到开发大型游戏，结构清晰、语言简洁，非常适合Android游戏初学者和Android游戏进阶开发者阅读参考。",
      "price": "88.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 14,
        "average": "6.5",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "李宁"
      ],
      "pubdate": "2012-4",
      "tags": [
        {
          "count": 9,
          "name": "android",
          "title": "android"
        },
        {
          "count": 4,
          "name": "移动开发",
          "title": "移动开发"
        },
        {
          "count": 3,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 3,
          "name": "programming",
          "title": "programming"
        },
        {
          "count": 2,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 1,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 1,
          "name": "的",
          "title": "的"
        },
        {
          "count": 1,
          "name": "灰常喜欢",
          "title": "灰常喜欢"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s11291237.jpg",
      "binding": "",
      "translator": [],
      "catalog": "",
      "pages": "639",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s11291237.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s11291237.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s11291237.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/10733303\/",
      "id": "10733303",
      "publisher": "",
      "isbn10": "7508494652",
      "isbn13": "9787508494654",
      "title": "Android开发完全讲义",
      "url": "http:\/\/api.douban.com\/v2\/book\/10733303",
      "alt_title": "",
      "author_intro": "",
      "summary": "《Android开发完全讲义(第2版)》是国内覆盖面最广的Android开发指南，国内著名Android社区eoeandroid极力推荐。《Android开发完全讲义(第2版)》内容全面，详细讲解Android框架、Android用户接口、Android组件、Android的数据存储解决方案、Android的4种可跨平台通信的组件（Activity、Service、Broadcast和ContentProvide）、网络、绘图、多媒体、2D动画、OpenGL ES、资源、国际化、访问Android手机的硬件、实时壁纸、实时文件夹、NDK（利用C\/C++开发可运行在Android上的应用程序）、脚本语言（Python、Lua、Perl等）、手势输入、文字语音转换（TTS）、蓝牙等技术，在《Android开发完全讲义(第2版)》的最后给出了两个完整的例子：\"万年历\"和\"知道当前位置Google GTalk机器人。\"",
      "price": "82.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 1,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "罗格斯"
      ],
      "pubdate": "2012-9",
      "tags": [
        {
          "count": 17,
          "name": "android",
          "title": "android"
        },
        {
          "count": 8,
          "name": "游戏开发",
          "title": "游戏开发"
        },
        {
          "count": 4,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 2,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 2,
          "name": "计算机科学",
          "title": "计算机科学"
        },
        {
          "count": 2,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 1,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 1,
          "name": "游戏开安",
          "title": "游戏开安"
        }
      ],
      "origin_title": "Learning Android Game Programming : A Hands-On Guide to Building Your First Android Game",
      "image": "https://img1.doubanio.com\/mpic\/s11292199.jpg",
      "binding": "",
      "translator": [
        "爱飞翔"
      ],
      "catalog": "译者序\n序\n前言\n第1章　手机游戏 \/ 1\n1.1　手机游戏市场 \/ 2\n1.2　电脑游戏的世界 \/ 3\n1.2.1　游戏类型 \/ 3\n1.2.2　适合于手机的游戏 \/ 5\n1.2.3　典型的游戏组件 \/ 6\n1.2.4　《少女大战吸血鬼》 \/ 8\n1.2.5　v3的设计 \/ 9\n1.3　andengine范例 \/ 11\n1.4　总结 \/ 12\n1.5　习题 \/ 12\n第2章　游戏要素与工具 \/ 14\n2.1　软件开发工具 \/ 15\n2.1.1　android sdk \/ 15\n2.1.2　andengine游戏引擎库 \/ 16\n2.1.3　andengine游戏概念 \/ 17\n.2.1.4　box2d物理引擎 \/ 19\n2.2　图形工具 \/ 19\n2.2.1　矢量图工具：inkscape \/ 20\n2.2.2　位图工具：gimp \/ 21\n2.2.3　动画捕捉：animget \/ 22\n2.2.4　瓦片地图创建工具：tiled \/ 23\n2.2.5　truetype字体创建与编辑工具：fontstruct \/ 23\n2.3　声音工具 \/ 24\n2.3.1　音效工具：audacity \/ 24\n2.3.2　背景音乐工具：musescore \/ 25\n2.4　初试身手：制作启动画面 \/ 26\n2.4.1　创建游戏项目 \/ 27\n2.4.2　加入andengine库 \/ 27\n2.4.3　加入启动画面代码 \/ 28\n2.4.4　用模拟器运行游戏 \/ 30\n2.4.5　用android设备运行游戏 \/ 31\n2.5　总结 \/ 31\n2.6　习题 \/ 32\n第3章　游戏循环与菜单 \/ 33\n3.1　游戏循环概述 \/ 34\n3.2　andengine的游戏循环 \/ 35\n3.2.1　初始化engine对象 \/ 35\n3.2.2　其他engine类 \/ 36\n3.3　为v3增加菜单屏幕 \/ 37\n3.3.1　andengine的菜单 \/ 37\n3.3.2　构建v3的开始菜单 \/ 40\n3.3.3　创建菜单 \/ 40\n3.3.4　mainmenuactivity类 \/ 45\n3.3.5　常数与字段 \/ 46\n3.3.6　onloadresources()方法 \/ 46\n3.3.7　onloadscene()方法 \/ 46\n3.3.8　createstaticmenuscene()方法与createpopupscene()方法 \/ 46\n3.3.9　onkeydown()方法与onmenuitemclicked()方法 \/ 47\n3.3.10　从启动画面切换到菜单 \/ 47\n3.4　内存使用 \/ 50\n3.5　“退出”选项 \/ 50\n3.6　总结 \/ 50\n3.7　习题 \/ 51\n第4章　场景、图层、场景切换与实体修改器 \/ 52\n4.1　andengine的场景 \/ 53\n4.1.1　实体\/组件模型 \/ 53\n4.1.2　entity类 \/ 54\n4.1.3　构造器 \/ 54\n4.1.4　entity类的位置相关方法 \/ 55\n4.1.5　entity类的缩放相关方法 \/ 55\n4.1.6　entity类的颜色相关方法 \/ 56\n4.1.7　entity类的旋转相关方法 \/ 57\n4.1.8　管理子对象 \/ 57\n4.1.9　管理modifier \/ 58\n4.1.10　其他有用的entity类方法 \/ 58\n4.1.11　layer类 \/ 59\n4.1.12　scene类 \/ 59\n4.1.13　背景管理 \/ 60\n4.1.14　子scene对象管理 \/ 60\n4.1.15　layer对象管理 \/ 61\n4.1.16　上级scene对象管理 \/ 61\n4.1.17　触摸区域管理 \/ 61\n4.1.18　特殊scene类 \/ 61\n4.1.19　用于entity的modifier类 \/ 62\n4.1.20　entitymodifier类的通用方法 \/ 63\n4.1.21　位置相关的entitymodifier类 \/ 63\n4.1.22　缩放相关的entitymodifier类 \/ 66\n4.1.23　颜色相关的entitymodifier类 \/ 67\n4.1.24　旋转相关的entitymodifier类 \/ 67\n4.1.25　透明度相关的entitymodifier类 \/ 68\n4.1.26　延迟相关的entitymodifier类 \/ 69\n4.1.27　modifier的组合 \/ 69\n4.1.28　easefunction \/ 71\n4.2　创建游戏第1关的场景 \/ 79\n4.3　总结 \/ 84\n4.4　习题 \/ 85\n第5章　绘制与精灵 \/ 86\n5.1　快速回顾entity类 \/ 87\n5.2　绘制线条与矩形 \/ 88\n5.2.1　线条 \/ 88\n5.2.2　矩形 \/ 88\n5.3　精灵 \/ 88\n5.3.1　贴图 \/ 89\n5.3.2　效率问题 \/ 99\n5.3.3　复合精灵 \/ 100\n5.4　总结 \/ 104\n5.5　习题 \/ 105\n第6章　动画 \/ 106\n6.1　动画所需素材 \/ 107\n6.2　动画的瓦片贴图 \/ 108\n6.3　andengine的动画 \/ 108\n6.4　动画范例 \/ 110\n6.5　将动画加入level1activity类 \/ 114\n6.6　动画制作的问题 \/ 122\n6.7　高级话题：从3d模型中制作2d动画 \/ 123\n6.8　总结 \/ 123\n6.9　习题 \/ 123\n第7章　文本 \/ 125\n7.1　字型与字体 \/ 126\n7.2　载入字型 \/ 127\n7.2.1　font类 \/ 127\n7.2.2　strokefont类 \/ 127\n7.2.3　fontfactory类 \/ 128\n7.2.4　fontmanager类 \/ 128\n7.2.5　typeface类 \/ 128\n7.3　andengine中的文本 \/ 129\n7.3.1　andengine中的文本api \/ 129\n7.3.2　桌面通知 \/ 132\n7.4　定制字型 \/ 133\n7.5　将定制字型加入v3 \/ 135\n7.6　总结 \/ 142\n7.7　习题 \/ 142\n第8章　用户输入 \/ 144\n8.1　android与andengine的输入方式 \/ 145\n8.1.1　字母键盘与袖珍键盘 \/ 146\n8.1.2　触摸 \/ 146\n8.1.3　自定义手势 \/ 152\n8.1.4　屏幕游戏手柄 \/ 152\n8.1.5　加速计 \/ 153\n8.1.6　位置和方向 \/ 153\n8.1.7　语音 \/ 158\n8.2　将用户输入加入v3 \/ 161\n8.3　总结 \/ 166\n8.4　习题 \/ 166\n第9章　瓦片地图 \/ 168\n9.1　为何使用瓦片地图 \/ 169\n9.2　瓦片地图的类型 \/ 169\n9.2.1　正交瓦片地图 \/ 171\n9.2.2　等距投影瓦片地图 \/ 171\n9.3　瓦片地图的结构 \/ 172\n9.4　andengine中的瓦片地图 \/ 172\n9.4.1　tmx与tsx文件 \/ 172\n9.4.2　tmxloader类 \/ 172\n9.4.3　tmxtiledmap类 \/ 173\n9.4.4　tmxlayer类 \/ 174\n9.4.5　tmxtile类 \/ 174\n9.5　瓦片编辑器：tiled \/ 175\n9.6　tmx文件 \/ 176\n9.7　正交瓦片地图游戏：《打吸血鬼》 \/ 177\n9.7.1　wav的瓦片地图 \/ 177\n9.7.2　创建wav的瓦片集 \/ 178\n9.7.3　创建wav的瓦片地图 \/ 179\n9.7.4　《打吸血鬼》游戏的代码 \/ 181\n9.8　等距投影瓦片地图 \/ 191\n9.9　总结 \/ 191\n9.10　习题 \/ 192\n第10章　粒子系统 \/ 193\n10.1　粒子发射器是什么 \/ 194\n10.2　粒子系统如何运作 \/ 195\n10.3　andengine的粒子系统 \/ 195\n10.3.1　particlesystem类 \/ 196\n10.3.2　particleemitter类 \/ 197\n10.3.3　particleinitializer类 \/ 198\n10.3.4　particlemodifier类 \/ 199\n10.3.5　有用的particlesystem类方法 \/ 200\n10.4　创建粒子系统 \/ 201\n10.4.1　以传统方式创建粒子系统 \/ 201\n10.4.2　以xml文件创建粒子系统 \/ 202\n10.5　将粒子发射器加入v3游戏中 \/ 206\n10.5.1　以传统方式制作v3的爆炸效果 \/ 206\n10.5.2　以xml文件方式制作v3的爆炸效果 \/ 210\n10.6　总结 \/ 211\n10.7　习题 \/ 211\n第11章　声音 \/ 213\n11.1　如何在游戏中使用声音 \/ 214\n11.1.1　音乐 \/ 214\n11.1.2　音效 \/ 214\n11.2　音乐与音效的来源 \/ 215\n11.3　音乐与音效制作工具 \/ 216\n11.4　音频解码器 \/ 216\n11.5　使用andengine播放声音 \/ 217\n11.5.1　music类 \/ 218\n11.5.2　sound类 \/ 218\n11.5.3　musicfactory类 \/ 219\n11.5.4　soundfactory类 \/ 219\n11.6　将声音加入v3游戏 \/ 220\n11.6.1　创建音效 \/ 220\n11.6.2　创建背景音乐 \/ 223\n11.6.3　修改v3游戏的代码 \/ 225\n11.7　总结 \/ 235\n11.8　习题 \/ 236\n第12章　物理效果 \/ 237\n12.1　box2d物理引擎 \/ 238\n12.1.1　box2d概念 \/ 238\n12.1.2　设定box2d \/ 240\n12.2　构建物理学游戏的关卡 \/ 241\n12.3　andengine与box2d \/ 242\n12.3.1　下载andenginephysicsbox2dextension并将其加入游戏项目 \/ 242\n12.3.2　box2d的api \/ 244\n12.3.3　简单的物理效果范例 \/ 247\n12.3.4　关卡加载 \/ 252\n12.4　《愤怒的村民》：v3中的物理学小游戏 \/ 255\n12.5　实现iv游戏 \/ 255\n12.5.1　创建关卡 \/ 256\n12.5.2　编写ivactivity.java \/ 260\n12.6　总结 \/ 270\n12.7　习题 \/ 270\n第13章　人工智能 \/ 272\n13.1　游戏ai相关话题 \/ 273\n13.1.1　简单的脚本 \/ 273\n13.1.2　决策树、minimax树与状态机 \/ 273\n13.1.3　专家系统或基于规则的决策系统 \/ 276\n13.1.4　神经网络 \/ 277\n13.1.5　遗传算法 \/ 278\n13.1.6　路径查找 \/ 279\n13.1.7　动态困难度调节 \/ 280\n13.1.8　程序化的音乐生成 \/ 280\n13.2　实现v3游戏的ai \/ 281\n13.3　总结 \/ 290\n13.4　习题 \/ 290\n第14章　计分与碰撞 \/ 291\n14.1　计分系统设计 \/ 292\n14.1.1　更新小游戏取得的分数 \/ 293\n14.1.2　记录5个最高分 \/ 293\n14.1.3　在小游戏场景中显示分数 \/ 294\n14.1.4　分数页面的显示 \/ 295\n14.2　andengine的碰撞 \/ 298\n14.2.1　andengine的shape碰撞 \/ 298\n14.2.2　box2d的碰撞 \/ 299\n14.3　开始计算玩家的得分 \/ 300\n14.4　《墓地》（第1关）场景 \/ 300\n14.4.1　常量和字段 \/ 300\n14.4.2　onloadengine方法与onloadresources方法 \/ 303\n14.4.3　onloadscene方法 \/ 304\n14.4.4　mstartvamp任务 \/ 306\n14.5　《打吸血鬼》 \/ 307\n14.5.1　常量和字段 \/ 307\n14.5.2　onloadscene方法 \/ 308\n14.5.3　opencoffin和closecoffin方法 \/ 309\n14.6　《愤怒的村民》 \/ 310\n14.6.1　常量和字段 \/ 310\n14.6.2　onloadscene方法 \/ 311\n14.6.3　onloadcomplete方法 \/ 312\n14.6.4　addstake方法 \/ 313\n14.7　总结 \/ 314\n14.8　习题 \/ 314\n第15章　多媒体扩展包 \/ 315\n15.1　下载多媒体扩展包 \/ 316\n15.2　动态壁纸 \/ 317\n15.2.1　android动态壁纸 \/ 317\n15.2.2　创建v3的android动态壁纸 \/ 318\n15.3　mod格式音乐 \/ 322\n15.3.1　搜寻mod格式的音乐 \/ 322\n15.3.2　xmp mod播放器 \/ 323\n15.4　多人游戏 \/ 324\n15.5　andengine的多点触摸 \/ 326\n15.6　增强现实游戏 \/ 328\n15.7　总结 \/ 332\n15.8　习题 \/ 332\n第16章　游戏集成 \/ 334\n16.1　困难度调节 \/ 336\n16.1.1　困难度参数的保存 \/ 336\n16.1.2　困难度参数的设定 \/ 337\n16.2　游戏结束画面的代码 \/ 337\n16.3　第1关：主游戏 \/ 340\n16.4　《打吸血鬼》 \/ 345\n16.5　《愤怒的村民》 \/ 347\n16.6　选项菜单 \/ 350\n16.7　总结 \/ 350\n16.8　习题 \/ 350\n第17章　测试与发行 \/ 352\n17.1　应用程序商业模式 \/ 353\n17.2　测试与发行准备工作 \/ 354\n17.2.1　在实际设备上测试游戏 \/ 354\n17.2.2　考虑加入终端用户许可协议 \/ 355\n17.2.3　向manifest文件加入图标与标签 \/ 357\n17.2.4　关闭记录与调试功能 \/ 357\n17.2.5　在游戏中增加版本号 \/ 357\n17.2.6　获取密钥 \/ 358\n17.2.7　编译与签名最终的.apk文件 \/ 359\n17.2.8　测试最终的.apk文件 \/ 359\n17.3　发行游戏 \/ 360\n17.3.1　android market \/ 360\n17.3.2　amazon app store \/ 362\n17.4　推广游戏 \/ 363\n17.4.1　app store推广 \/ 364\n17.4.2　游戏评论网站推广 \/ 366\n17.4.3　手机广告 \/ 366\n17.4.4　口碑营销 \/ 367\n17.4.5　社交网络推广 \/ 367\n17.5　总结 \/ 367\n附录　习题解答 \/ 369",
      "pages": "412",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s11292199.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s11292199.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s11292199.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/11614306\/",
      "id": "11614306",
      "publisher": "机械工业出版社",
      "isbn10": "7111391543",
      "isbn13": "9787111391548",
      "title": "Android游戏开发实践指南",
      "url": "http:\/\/api.douban.com\/v2\/book\/11614306",
      "alt_title": "Learning Android Game Programming : A Hands-On Guide to Building Your First Android Game",
      "author_intro": "Rick Rogers，资深软件开发工程师，拥有30余年软件开发经验，从事手机软件开发10余年，经验十分丰富。他还是一位有经验的技术作家，曾在杂志上发表过多篇技术文章，并著有另外一本关于Android应用开发的图书。",
      "summary": "《华章程序员书库:Android游戏开发实践指南》是一本经典的Android游戏开发教程，由资深软件开发专家亲自执笔，AndEngine引擎创建者作序推荐。《华章程序员书库:Android游戏开发实践指南》中以开源引擎AndEngine为基础，不仅以专题的形式巧妙地将Android游戏开发必须掌握的各项关键技术（场景、图层、图形绘制、精灵、动画、物理效果、粒子系统、碰撞检测、关卡设计、美工、声音……）串联起来，系统地讲解了Android游戏开发者应该学习的理论知识，而且用一个完整的案例贯穿全书，将游戏开发的各项要素整合到一起，对Android游戏开发的方法和流程做了一个全景展示，可操作性极强。\n《华章程序员书库:Android游戏开发实践指南》共分17章：第1章介绍手机游戏的概况和类型；第2章～第15章各章都会阐述一个与游戏开发相关的话题，其中包括游戏的要素与游戏开发的工具，游戏逻辑循环的概念和用AndEngine开始开发游戏的方法，场景、图层、场景切换与实体修改器，精灵和动画精灵的绘制方法，文本和用户输入，瓦片地图，粒子系统，声音，物理效果，人工智能，计分与碰撞以及多媒体扩展包；第16章介绍如何通过完善现有功能使游戏更有趣；第17章介绍游戏的测试与发行。每章最后都有练习题，可帮助读者边学边练，迅速提高技能，书最后提供了习题答案。\n\n海报：",
      "series": {
        "id": "12919",
        "title": "华章程序员书库"
      },
      "price": "79.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 14,
        "average": "7.3",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "Sessa, Carlos"
      ],
      "pubdate": "2013-6",
      "tags": [
        {
          "count": 20,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 7,
          "name": "Programming",
          "title": "Programming"
        },
        {
          "count": 3,
          "name": "英文版",
          "title": "英文版"
        },
        {
          "count": 2,
          "name": "2014",
          "title": "2014"
        },
        {
          "count": 2,
          "name": "Android开发",
          "title": "Android开发"
        },
        {
          "count": 1,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 1,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 1,
          "name": "互联网",
          "title": "互联网"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s22776118.jpg",
      "binding": "",
      "translator": [],
      "catalog": "",
      "pages": "216",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s22776118.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s22776118.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s22776118.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/19994024\/",
      "id": "19994024",
      "publisher": "",
      "isbn10": "1617290564",
      "isbn13": "9781617290565",
      "title": "50 Android Hacks",
      "url": "http:\/\/api.douban.com\/v2\/book\/19994024",
      "alt_title": "",
      "author_intro": "",
      "summary": "The best programming techniques are often the shortest and simplest. Hacks are the little gems you learn from the old guy in the next cube or from the geniuses on StackOverflow. In this compact and infinitely useful book, Android expert Carlos Sessa delivers 50 hacks that will save you time, stretch your skills, and maybe even make you smile. 50 Android Hacks organizes 50 Android hacks into categories including Layout, Animation, Patterns, UX, and more. Each fully-illustrated hack is just a few pages long and includes annotated source code. AUDIENCE This book is for beginner as well as advanced Android developers. ABOUT THE TECHNOLOGY A hack is an alternative or additional piece of code that performs a specific function. These functions can help customize Android devices, making them more useful and fun to use.",
      "price": "$ 39.54"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 16,
        "average": "6.3",
        "min": 0
      },
      "subtitle": "技术详解与最佳实践",
      "author": [
        "陈文",
        "郭依正"
      ],
      "pubdate": "2013-8-20",
      "tags": [
        {
          "count": 20,
          "name": "android",
          "title": "android"
        },
        {
          "count": 6,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 5,
          "name": "android网络编程",
          "title": "android网络编程"
        },
        {
          "count": 4,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 3,
          "name": "android网络编程（陈文）",
          "title": "android网络编程（陈文）"
        },
        {
          "count": 3,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 2,
          "name": "网络编程",
          "title": "网络编程"
        },
        {
          "count": 2,
          "name": "科学",
          "title": "科学"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s27034073.jpg",
      "binding": "平装",
      "translator": [],
      "catalog": "序\n前言\n第一篇　概述篇\n第1章　Android网络编程概要2\n1.1　Android简介2\n1.1.1　Android的发展2\n1.1.2　Android功能特性3\n1.1.3　Android系统构架4\n1.2　Android网络程序的功能6\n1.2.1　通信功能6\n1.2.2　及时分享6\n1.2.3　个人管理6\n1.2.4　娱乐游戏7\n1.2.5　企业应用7\n1.3　设置Android开发环境7\n1.3.1　相关下载7\n1.3.2　安装ADT9\n1.3.3　Hello World！11\n1.4　网络应用实战案例17\n1.4.1　加载一个页面17\n1.4.2　下载一个页面21\n1.5　小结21\n第二篇　实战篇\n第2章　Android基本网络技术和编程实践24\n2.1　计算机网络及其协议24\n2.1.1　计算机网络概述24\n2.1.2　网络协议概述25\n2.1.3　IP、TCP和UDP协议26\n2.2　在Android中使用TCP、UDP协议31\n2.2.1　Socket基础31\n2.2.2　使用TCP通信34\n2.2.3　使用UDP通信36\n2.3　Socket实战案例39\n2.3.1　Socket聊天举例39\n2.3.2　FTP客户端41\n2.3.3　Telnet客户端44\n2.4　小结46\n第3章　Android基本Web技术和编程实践47\n3.1　HTTP协议47\n3.1.1　HTTP简介47\n3.1.2　实战案例：基于HTTP协议的文件上传51\n3.2　Android中的HTTP编程57\n3.2.1　HttpClient和URLConnection57\n3.2.2　Post和Get在HttpClient的使用58\n3.2.3　实战案例：使用HttpClient和URLConnection访问维基百科60\n3.3　Android处理JSON64\n3.3.1　JSON简介64\n3.3.2　JSON数据解析65\n3.3.3　JSON打包67\n3.3.4　实战案例：JSON解析wikipedia内容68\n3.4　Android处理SOAP71\n3.4.1　SOAP简介71\n3.4.2　SOAP消息72\n3.4.3　实战案例：SOAP解析天气服务74\n3.5　Android对HTML的处理79\n3.5.1　解析HTML79\n3.5.2　HTML适配屏幕80\n3.5.3　JavaScript混合编程81\n3.5.4　实战案例：Android自定义打开HTML页面87\n3.6小结91\n第4章　Android常见网络接口编程92\n4.1　Android解析和创建XML92\n4.1.1　XML简介92\n4.1.2　DOM解析XML97\n4.1.3　SAX解析XML102\n4.1.4　PULL解析XML108\n4.1.5　实战案例：Android中创建XML110\n4.2　Android订阅RSS113\n4.2.1　RSS简介113\n4.2.2　实战案例：简单RSS阅读器115\n4.3　Android Email编程122\n4.3.1　Android发送Email122\n4.3.2　实战案例：Android下Email的Base64加密123\n4.4　Android网络安全125\n4.4.1　Android网络安全简介125\n4.4.2　Android加密和解密127\n4.4.3　实战案例：Android应用添加签名133\n4.5　OAuth认证135\n4.5.1　OAuth简介135\n4.5.2　实战案例：使用OAuth接口137\n4.6　小结139\n第5章　Android网络模块编程141\n5.1　Android地图和定位141\n5.1.1　获取map-api密钥141\n5.1.2　获取位置144\n5.1.3　实战案例：利用MapView显示地图146\n5.2　USB编程150\n5.2.1　USB主从设备150\n5.2.2　USB Accessory Mode151\n5.2.3　USB Host Mode157\n5.2.4　实战案例：Android和Arduino交互159\n5.3　Wi-Fi编程168\n5.3.1　Android Wi-Fi相关类168\n5.3.2　Android Wi-Fi基本操作171\n5.3.3　实战案例：使用Wi-Fi直连方式传输文件177\n5.4　蓝牙编程185\n5.4.1　蓝牙简介185\n5.4.2　Android蓝牙API分析185\n5.4.3　Android蓝牙基本操作187\n5.4.4　实战案例：蓝牙连接192\n5.5　NFC编程简介197\n5.5.1　NFC技术简介197\n5.5.2　NFC API简介198\n5.5.3　NFC处理流程分析199\n5.6　小结205\n第6章　Android线程、数据存取、缓存和UI同步206\n6.1　Android线程206\n6.1.1　Android线程模型206\n6.1.2　异步任务类211\n6.1.3　实战案例：利用AsyncTask实现多线程下载213\n6.2　数据存取214\n6.2.1　Shared Preferences数据存储215\n6.2.2　Internal Storage数据存储216\n6.2.3　External Storage数据存储217\n6.2.4　SQLite Databases数据存储219\n6.2.5　实战案例：SQLite数据库操作220\n6.3　网络判定227\n6.3.1　判断用户是否连接228\n6.3.2　判断网络连接的类型228\n6.3.3　监控网络连接改变228\n6.3.4　实战案例：根据广播消息判断网络连接情况228\n6.4　消息缓存230\n6.4.1　Android中的缓存机制230\n6.4.2　实战案例：下载、缓存和显示图片231\n6.5　界面更新236\n6.5.1　刷新数据时的界面更新236\n6.5.2　完成任务时的界面更新237\n6.5.3　实战案例：自定义列表显示更新238\n6.6　小结248\n第7章　基于SIP协议的VoIP应用249\n7.1　SIP协议简介249\n7.2　SIP服务器搭建250\n7.2.1　下载安装Brekeke SIP Server250\n7.2.2　访问服务器251\n7.2.3　启动服务器252\n7.3　SIP程序设置253\n7.3.1　Android SIP API中的类和接口253\n7.3.2　Android极限列表253\n7.3.3　完整的Manifest文件254\n7.4　SIP初始化通话255\n7.4.1　SipManager对象255\n7.4.2　SipProfile对象256\n7.5　监听SIP通话257\n7.5.1　创建监听器258\n7.5.2　拨打电话258\n7.5.3　接收呼叫259\n7.6　实战案例：SIP通话261\n7.7　小结270\n第8章　基于XMPP协议的即时通信应用271\n8.1　XMPP协议简介271\n8.2　使用Openfire搭建XMPP服务器272\n8.3　登录XMPP服务器276\n8.3.1　Asmack相关类276\n8.3.2　登录XMPP服务器277\n8.4　联系人相关操作279\n8.4.1　获取联系人列表279\n8.4.2　获取联系人状态280\n8.4.3　添加和删除联系人280\n8.4.4　监听联系人添加信息281\n8.5　消息处理282\n8.5.1　接收消息282\n8.5.2　发送消息283\n8.6　实战案例：XMPP多人聊天283\n8.6.1　创建新多人聊天室284\n8.6.2　加入聊天室286\n8.6.3　发送和接收消息287\n8.7　小结288\n第三篇　源码分析篇\n第9章　Android对HTML的处理290\n9.1　Android HTML处理关键类290\n9.2　HTMLViewer分析292\n9.3　浏览器源代码解析296\n9.3.1　WebView加载入口分析296\n9.3.2　调用JavaScript接口299\n9.4　WebKit简单分析300\n9.4.1　HTTP Cache管理300\n9.4.2　Cookie管理301\n9.4.3　处理HTTP认证以及证书302\n9.4.4　处理JavaScript的请求302\n9.4.5　处理MIME类型305\n9.4.6　访问WebView的历史306\n9.4.7　保存网站图标306\n9.4.8　WebStorage306\n9.4.9　处理UI307\n9.4.10　Web设置分析309\n9.4.11　HTML5音视频处理309\n9.4.12　缩放和下载311\n9.4.13　插件管理311\n9.5　小结313\n第10章　Android网络处理分析314\n10.1　Android网络处理关键类及其说明314\n10.2　Android网络处理流程315\n10.2.1　监控网络连接状态315\n10.2.2　认证类316\n10.2.3　DHCP状态机317\n10.2.4　LocalServerSocket318\n10.2.5　响应邮件请求320\n10.2.6　提供网络信息323\n10.2.7　Proxy类324\n10.2.8　VPN服务325\n10.3　Android封装的HTTP处理类326\n10.3.1　AndroidHttpClient类和DefaultHttpClient类326\n10.3.2　SSL认证信息处理类327\n10.3.3　SSL错误信息处理328\n10.3.4　AndroidHttpClient328\n10.4　Android RTP协议329\n10.4.1　传输音频码330\n10.4.2　AudioGroup331\n10.4.3　语音流RtpStream和AudioStream332\n10.5　Android SIP协议333\n10.5.1　SIP通话简介334\n10.5.2　SIP初始化335\n10.5.3　SipProfile336\n10.5.4　SipSession337\n10.5.5　SIP包错误处理338\n10.6　小结339\n第11章　Android网络应用分析340\n11.1　Android中使用SAX解析XML340\n11.1.1　几种XML解析方式讨论340\n11.1.2　SAX解析XML的原理341\n11.1.3　SAX发现XML的根元素342\n11.1.4　SAX发现XML的子元素345\n11.2　基于位置的服务348\n11.2.1　位置服务的基本概念348\n11.2.2　位置服务的基本类348\n11.2.3　调用Google地图350\n11.2.4　根据位置刷新地图显示351\n11.3　媒体传输协议353\n11.3.1　MTP和PTP简介353\n11.3.2　定义MTP和PTP的类型354\n11.3.3　封装MTP设备信息357\n11.3.4　封装MTP对象的信息358\n11.3.5　封装MTP设备上存储单元的信息360\n11.4　小结362",
      "ebook_url": "http:\/\/read.douban.com\/ebook\/15249059\/",
      "pages": "362",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s27034073.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s27034073.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s27034073.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/25717405\/",
      "id": "25717405",
      "publisher": "机械工业出版社",
      "isbn10": "7111435028",
      "isbn13": "9787111435020",
      "title": "深入理解Android网络编程",
      "url": "http:\/\/api.douban.com\/v2\/book\/25717405",
      "alt_title": "",
      "author_intro": "陈文　资深Android开发工程师，深入分析过Android系统的源代码，对Android系统的底层原理有非常深入的认识，尤其是与网络编程相关的功能模块。精通XMPP协议和企业级云端系统的构建，现从事移动互联网系统的框架设计和研发工作。此外，他对Java、HMTL 5、Web数据挖掘、个性化搜索引擎等技术也有一定的研究。",
      "summary": "这是一本Android网络编程方面的专著，旨在帮助开发者们高效地编写出高质量的Android网络应用。不仅系统讲解了Android网络编程的各项核心技术和功能模块，通过多个案例解读了Android网络编程的方法和技巧，而且从源码角度深入解析了Android核心网络处理方法和关键应用的实现原理，包含大量最佳实践。\n全书共11章，分为三个部分：概述篇（第1章）在介绍了Android开发平台后，重点讲解了Android网络程序的功能及开发环境的配置，引领读者走进Android网络编程的大门；实战篇（第2~8章），详细讲解了TCP、UDP、HTTP等基本网络协议在Android上的应用，展示了使用Android处理JSON、SOAP、HTML、XML等数据的方法，讲解了Android中的RSS编程、Email编程、OAuth认证等，解析了Android中Locations、Maps、USB、Wi-Fi、Bluetooth、NFC等网络模块的编程，讨论了Android中线程、数据存取、消息缓存、界面更新等的处理方法，探讨了SIP、XMPP等协议在Android上的应用；源码分析篇（第9~11章）分析了Android中与HTML处理、网络处理以及部分网络应用相关的源代码，帮助读者从底层原理上加深对相关知识点的理解。",
      "ebook_price": "43.94",
      "series": {
        "id": "28292",
        "title": "深入理解Android"
      },
      "price": "69.00"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 13,
        "average": "6.9",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "高煥堂"
      ],
      "pubdate": "2009年1月1日",
      "tags": [
        {
          "count": 10,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 4,
          "name": "高焕堂",
          "title": "高焕堂"
        },
        {
          "count": 3,
          "name": "软件开发",
          "title": "软件开发"
        },
        {
          "count": 1,
          "name": "CS",
          "title": "CS"
        },
        {
          "count": 1,
          "name": "Google",
          "title": "Google"
        },
        {
          "count": 1,
          "name": "编程",
          "title": "编程"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s3987702.jpg",
      "binding": "",
      "translator": [],
      "catalog": "",
      "pages": "431",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s3987702.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s3987702.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s3987702.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/4047041\/",
      "id": "4047041",
      "publisher": "廣悅文化事業有限公司",
      "isbn10": "9868494605",
      "isbn13": "9789868494602",
      "title": "Android應用框架原理與程式設計36技",
      "url": "http:\/\/api.douban.com\/v2\/book\/4047041",
      "alt_title": "",
      "author_intro": "",
      "summary": "",
      "price": "NT$450"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 9,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "邱彦林"
      ],
      "pubdate": "2012-8",
      "tags": [
        {
          "count": 16,
          "name": "AIR",
          "title": "AIR"
        },
        {
          "count": 16,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 9,
          "name": "Flash,移动开发",
          "title": "Flash,移动开发"
        },
        {
          "count": 3,
          "name": "ActionScript3",
          "title": "ActionScript3"
        },
        {
          "count": 2,
          "name": "Adobe",
          "title": "Adobe"
        },
        {
          "count": 2,
          "name": "FLEX",
          "title": "FLEX"
        },
        {
          "count": 2,
          "name": "移动开发",
          "title": "移动开发"
        },
        {
          "count": 2,
          "name": "邱彦林",
          "title": "邱彦林"
        }
      ],
      "origin_title": "",
      "image": "https://img3.doubanio.com\/mpic\/s11173305.jpg",
      "binding": "",
      "translator": [],
      "catalog": "前言\n第一篇　准备篇\n第1章　AIR Android开发简介 \/ 2\n1.1　开发之前需要了解的信息 \/ 2\n1.1.1　AIR Android开发的可行性 \/ 2\n1.1.2　开发过程中常见的问题 \/ 4\n1.1.3　优势和局限性 \/ 6\n1.2　搭建开发环境 \/ 7\n1.2.1　安装Android SDK \/ 7\n1.2.2　使用Flash Professional CS5 \/ 9\n1.2.3　使用Flash Builder 4.5 \/ 13\n1.2.4　构建开源的开发环境 \/ 16\n1.3　实战：一个简单的AIR项目 \/ 17\n1.4　本章小结 \/ 20\n第2章　第一个AIR Android程序：翻转黑白棋 \/ 21\n2.1　游戏的设计思路 \/ 21\n2.2　像往常一样编写ActionScript代码 \/ 23\n2.2.1　创建棋子类Grid \/ 23\n2.2.2　编写主类Main \/ 24\n2.3　设置程序属性 \/ 31\n2.3.1　了解应用程序描述文件 \/ 31\n2.3.3　设置访问权限 \/ 32\n2.4　打包APK文件 \/ 33\n2.5　安装和运行程序 \/ 34\n2.5.1　使用模拟器运行程序 \/ 34\n2.5.2　在真机上运行程序 \/ 39\n2.6　本章小结 \/ 40\n第二篇　基础篇\n第3章　处理用户交互 \/ 42\n3.1　关于多点触摸 \/ 42\n3.2　处理触摸事件 \/ 43\n3.2.1　使用TouchEvent类 \/ 43\n3.2.2　触摸事件与鼠标事件的区别 \/ 47\n3.3　处理手势动作 \/ 48\n3.3.1　放大与缩小手势 \/ 49\n3.3.2　旋转手势 \/ 52\n3.3.3　Swipe手势 \/ 53\n3.4　本章小结 \/ 56\n第4章　加速计 \/ 57\n4.1　Accelerometer API用法 \/ 57\n4.2　重力小球实例 \/ 59\n4.2.1　如何模拟重力场 \/ 59\n4.2.2　绘制小球 \/ 60\n4.2.3　让小球总是掉到屏幕下方 \/ 61\n4.2.4　为小球设置围墙 \/ 62\n4.2.5　优化代码后运行程序 \/ 64\n4.2.6　管理程序的状态 \/ 64\n4.3　加速计实战：检测手机晃动 \/ 66\n4.4　本章小结 \/ 68\n第5章　地理定位 \/ 69\n5.1　开启手机的地理定位功能 \/ 69\n5.2　Geolocation API用法 \/ 70\n5.3　地理定位实战：自动查询地址和天气 \/ 73\n5.3.1　查询地址Geocoding \/ 74\n5.3.2　查询本地天气Weather \/ 75\n5.3.3　代码解析 \/ 76\n5.3.4　测试运行 \/ 79\n5.4　本章小结 \/ 83\n第6章　整合系统程序 \/ 84\n6.1　使用自定义URI调用系统程序 \/ 84\n6.1.1　电话拨号tel \/ 84\n6.1.2　发送短信sms \/ 88\n6.1.3　发送邮件mailto \/ 90\n6.2　使用Android系统自带的地图服务 \/ 92\n6.3　使用StageWebView加载网页 \/ 95\n6.4　本章小结 \/ 100\n第7章　多媒体 \/ 101\n7.1　使用摄像头 \/ 101\n7.1.1　摄像头的传统用法 \/ 101\n7.1.2　使用CameraUI类调用摄像程序 \/ 103\n7.2　使用设备上的多媒体资源 \/ 108\n7.2.1　使用CameraRoll类向系统相册添加照片 \/ 108\n7.2.2　使用CameraRoll类选取照片 \/ 111\n7.3　使用麦克风录音 \/ 115\n7.4　播放视频 \/ 122\n7.4.1　AIR支持的视频格式 \/ 122\n7.4.2　播放视频实战：VideoPlayer \/ 123\n7.5　本章小结 \/ 126\n第8章　文件和数据库 \/ 127\n8.1　文件系统API \/ 127\n8.1.1　Android文件系统和程序目录结构 \/ 127\n8.1.2　常用的文件操作 \/ 132\n8.1.3　用异步方式操作文件 \/ 134\n8.2　SQL数据库 \/ 136\n8.2.1　SQLite简介 \/ 136\n8.2.2　连接数据库 \/ 137\n8.2.3　创建表 \/ 138\n8.2.4　添加、查询、更新和删除 \/ 141\n8.2.5　数据库实战：使用查询参数重用SQLStatement对象 \/ 146\n8.3　本章小结 \/ 149\n第9章　网络通信 \/ 150\n9.1　网络通信知识简介 \/ 150\n9.1.1　网络通信API \/ 150\n9.1.2　AIR的安全机制 \/ 153\n9.2　检测网络状态 \/ 154\n9.3　Socket实战：开发即时聊天工具 \/ 157\n9.3.1　Socket通信流程 \/ 157\n9.3.2　在桌面建立服务器 \/ 158\n9.3.3　构建简单的聊天服务器 \/ 160\n9.3.4　制作聊天客户端 \/ 167\n9.4　强大的P2P功能 \/ 173\n9.4.1　P2P通信模型 \/ 173\n9.4.2　P2P开发实战：视频直播 \/ 174\n9.5　本章小结 \/ 179\n第10章　调试和发布 \/ 180\n10.1　调试程序 \/ 180\n10.1.1　使用ADL在桌面上调试程序 \/ 180\n10.1.2　远程连接Flash调试器 \/ 183\n10.1.3　使用Android SDK的DDMS工具 \/ 186\n10.2　发布程序前的准备工作 \/ 188\n10.2.1　设置程序的基本属性 \/ 188\n10.2.2　管理程序的版本号 \/ 189\n10.2.3　针对Android设备的设置 \/ 190\n10.3　发布APK文件 \/ 191\n10.4　将程序发布到应用商店 \/ 192\n10.4.1　发布到Google Play商店 \/ 192\n10.4.2　发布到安卓市场 \/ 195\n10.5　本章小结 \/ 196\n第三篇　进阶篇\n第11章　针对移动设备的程序设计 \/ 198\n11.1　设计界面 \/ 198\n11.1.1　自动适应不同型号的屏幕 \/ 198\n11.1.2　友好的用户交互 \/ 202\n11.1.3　有效的界面布局 \/ 204\n11.2　管理程序的状态 \/ 207\n11.2.1　监测程序状态 \/ 208\n11.2.2　实战：自动保存播放位置 \/ 211\n11.3　跨平台开发 \/ 215\n11.3.1　跨平台开发时的注意事项 \/ 215\n11.3.2　技巧：使用编译参数兼容多平台 \/ 217\n11.4　本章小结 \/ 219\n第12章　键盘交互 \/ 220\n12.1　Android设备上的键盘交互 \/ 220\n12.1.1　Android设备上的实体按键 \/ 220\n12.1.2　监听键盘事件 \/ 222\n12.2　实战：使用Menu键模拟Android的菜单和行为 \/ 224\n12.2.1　创建菜单对象 \/ 224\n12.2.2　关联按键动作 \/ 228\n12.3　Back键的用法 \/ 232\n12.3.1　实战：使用Back键进行页面导航 \/ 233\n12.3.2　通过Back键自动关闭程序 \/ 238\n12.4　本章小结 \/ 239\n第13章　性能优化 \/ 240\n13.1　了解ActionScript 3.0的运行机制 \/ 240\n13.1.1　ActionScript 3.0的特点 \/ 240\n13.1.2　关于垃圾回收机制 \/ 243\n13.2　从编程细节处看优化 \/ 246\n13.2.1　使用最合适的数据类型和API \/ 246\n13.2.2　资源的回收和释放 \/ 249\n13.2.3　实例：一段代码的优化历程 \/ 251\n13.3　常用工具和代码库 \/ 253\n13.3.1　使用FlexPMD优化代码 \/ 254\n13.3.2　Flash Builder的性能调试工具Profiler \/ 255\n13.3.3　第三方调试工具Monster Debugger \/ 258\n13.4　优化技巧实战案例 \/ 260\n13.4.1　运用render事件减少代码执行 \/ 260\n13.4.2　构建对象池重用对象：动态小球实例 \/ 265\n13.4.3　异步事件的使用：搜索SD卡 \/ 270\n13.5　本章小结 \/ 274\n第四篇　实战篇\n第14章　迷宫游戏的准备阶段 \/ 276\n14.1　需求分析 \/ 276\n14.1.1　游戏规则 \/ 276\n14.1.2　游戏功能的实现 \/ 277\n14.2　技术要点分析 \/ 277\n14.2.1　如何实现物理效果 \/ 278\n14.2.2　如何生成地图 \/ 279\n14.3　Box2D物理引擎 \/ 279\n14.3.1　Box2D中的基本概念 \/ 280\n14.3.2　示例程序HelloBox2D \/ 280\n14.3.3　实现碰撞效果 \/ 285\n14.4　迷宫地图算法 \/ 287\n14.4.1　问题分析 \/ 287\n14.4.2　回溯法详解 \/ 288\n14.4.3　代码实现 \/ 290\n14.5　本章小结 \/ 296\n第15章　迷宫游戏的实现 \/ 297\n15.1　制作迷宫地图 \/ 297\n15.1.1　绘制带有物理属性的地图 \/ 297\n15.1.2　添加随机障碍物 \/ 300\n15.2　加入可“行走”的角色 \/ 302\n15.2.1　创建小球 \/ 302\n15.2.2　使用加速计控制小球的移动 \/ 303\n15.2.3　碰撞检测 \/ 304\n15.3　游戏状态控制 \/ 306\n15.3.1　自动暂停和恢复 \/ 306\n15.3.2　关卡设置 \/ 308\n15.4　游戏代码分析 \/ 309\n15.4.1　程序中的类 \/ 309\n15.4.2　主程序Game类详解 \/ 310\n15.5　本章小结 \/ 320\n第五篇　高级篇\n第16章　AIR本地扩展 \/ 322\n16.1　ANE的特点 \/ 322\n16.2　一个简单的本地扩展 \/ 323\n16.2.1　搭建开发环境 \/ 323\n16.2.2　编写本地代码 \/ 324\n16.2.3　编写ActionScript代码 \/ 329\n16.2.4　打包和发布 \/ 332\n16.2.5　在程序中使用本地扩展 \/ 334\n16.3　ANE进阶实战技术 \/ 337\n16.3.1　Intent机制：分享信息到社交网站 \/ 337\n16.3.2　在顶部状态栏显示系统通知 \/ 342\n16.4　本章小结 \/ 347",
      "ebook_url": "http:\/\/read.douban.com\/ebook\/15171241\/",
      "pages": "347",
      "images": {
        "small": "https://img3.doubanio.com\/spic\/s11173305.jpg",
        "large": "https://img3.doubanio.com\/lpic\/s11173305.jpg",
        "medium": "https://img3.doubanio.com\/mpic\/s11173305.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/11593575\/",
      "id": "11593575",
      "publisher": "机械工业出版社",
      "isbn10": "7111391772",
      "isbn13": "9787111391777",
      "title": "AIR Android应用开发实战",
      "url": "http:\/\/api.douban.com\/v2\/book\/11593575",
      "alt_title": "",
      "author_intro": "邱彦林（网名：walktree）  资深Adobe技术专家和资深Android开发工程师，精通ActionScript 2、ActionScript3、Flex、FMS等；有多年Flash相关技术开发经验，开发了大量Flash\/Flex项目，是开源项目as3-pdf reader的创建者，并维护至今，在Adobe技术社区有较高的知名度和影响力。国内Android应用开发的先驱者之一，对Android应用开发也有非常深入的研究，尤其精通AIR Android应用的开发。他对PHP和Python相关的技术也有一定的研究。\n此外，他还是一位颇具经验的技术撰稿人和技术作家，曾经在社区和《程序员》杂志上发表了大量技术文章，著有《Flex第一步》等著作。",
      "summary": "本书由资深Adobe技术专家兼资深Android应用开发工程师亲自执笔，既系统全面地讲解了如何利用Adobe AIR技术开发Android应用，又细致深入地讲解了如何将已有的基于PC的AIR应用移植到Android设备上。不仅包含大量实践指导意义极强的实战案例，还包括大量建议和最佳实践，是系统学习AIR Android应用开发不可多得的参考书。\n全书共16章，分为五个部分：准备篇（1～2章） 主要介绍了利用AIR开发Android应用之前需要了解的基本信息、开发环境的搭建，以及一个简单的AIR Android应用开发的全过程，旨在让读者对AIR Android应用开发有一个全面清晰的认识；基础篇（3～10章）对AIR移动开发技术进行了系统而全面地讲解，包括移动设备上的用户交互方式、加速计的使用、地理定位功能、整合系统程序、访问设备资源、网络通信、多媒体、文件和数据库等，以及程序的调试和发布；进阶篇（11～13章）以AIR桌面应用开发为参照对象，讲解了AIR移动开发的重点和难点，如何针对移动设备进行界面设计，如何提高用户体验，以及如何提升程序的性能等，作者分享了大量具有实际意义的技巧和最佳实践；实战篇（14～15章）详细讲解了一款游戏的开发过程，将AIR移动技术和Flash Web技术灵活地结合了起来，展现了Flash技术在移动平台上的巨大潜力；高级篇（第16章）讲解了AIR 3.0的新特色—本地扩展，本地扩展为AIR技术提供了超强的扩展能力，使得开发者可以摆脱AIR的技术局限性。",
      "ebook_price": "43.18",
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 7,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "Telephony原理剖析与最佳实践",
      "author": [
        "杨青平"
      ],
      "pubdate": "2013-1",
      "tags": [
        {
          "count": 13,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 5,
          "name": "Telephony",
          "title": "Telephony"
        },
        {
          "count": 4,
          "name": "android",
          "title": "android"
        },
        {
          "count": 3,
          "name": "深入理解Android",
          "title": "深入理解Android"
        },
        {
          "count": 2,
          "name": "源码分析",
          "title": "源码分析"
        },
        {
          "count": 1,
          "name": "计算机技术",
          "title": "计算机技术"
        },
        {
          "count": 1,
          "name": "计算机",
          "title": "计算机"
        },
        {
          "count": 1,
          "name": "经典著作",
          "title": "经典著作"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s25802447.jpg",
      "binding": "",
      "translator": [],
      "catalog": "推荐序\n前言\n第一部分　基础篇\n第1章　初识Android \/ 2\n1.1　智能手机的系统结构 \/ 2\n1.2　Android系统架构 \/ 3\n1.2.1　应用层 \/ 3\n1.2.2　应用框架层 \/ 4\n1.2.3　系统运行库层 \/ 5\n1.2.4　核心层 \/ 6\n1.3　Android Telephony框架结构 \/ 6\n1.3.1　系统运行库层的HAL层 \/ 7\n1.3.2　简析HAL结构 \/ 8\n1.3.3　Android为什么引入HAL \/ 9\n1.3.4　Android中HAL的运行结构 \/ 9\n1.4　本章小结 \/ 10\n第2章　搭建Android源代码编译环境 \/ 11\n2.1　Ubuntu Linux操作系统及工具安装 \/ 11\n2.1.1　PC配置建议 \/ 12\n2.1.2　Ubuntu安装光盘的制作 \/ 12\n2.1.3　Ubuntu安装过程 \/ 12\n2.1.4　Ubuntu系统工具包更新升级 \/ 14\n2.1.5　Java运行环境JDK安装及配置 \/ 15\n2.1.6　Android SDK的下载和配置 \/ 16\n2.1.7　使用Android SDK启动虚拟设备 \/ 17\n2.2　Android源代码下载及编译过程 \/ 19\n2.2.1　工作目录设置 \/ 19\n2.2.2　源代码下载 \/ 19\n2.2.3　整体编译Android 源代码 \/ 19\n2.2.4　单个模块按需编译 \/ 20\n2.2.5　编译生成本地Android SDK \/ 21\n2.3　Android常用工具使用及相关技巧说明 \/ 21\n2.3.1　使用本地编译成功的镜像文件启动Android模拟器 \/ 22\n2.3.2　Android调试工具adb的使用方法 \/ 23\n2.3.3　进入Android虚拟设备控制台模拟短信、来电等功能 \/ 23\n2.4　Eclipse配置及使用 \/ 24\n2.4.1　Android开发套件ADT下载及配置 \/ 24\n2.4.2　建立Android源代码Java工程 \/ 25\n2.4.3　格式化Android Java源代码 \/ 26\n2.5　使用Source Insight方便阅读C\/C++代码 \/ 26\n2.5.1　安装Wine \/ 26\n2.5.2　安装Source Insight \/ 26\n2.5.3　配置Source Insight C\/C++工程 \/ 27\n2.6　本章小结 \/ 27\n第3章　主要技术准备 \/ 29\n3.1　何为同步和异步 \/ 29\n3.2　Handler消息处理机制 \/ 30\n3.2.1　Handler概念分析 \/ 30\n3.2.2　Handler特性 \/ 30\n3.2.3　常用Handler消息处理机制讲解 \/ 31\n3.2.4　Handler的作用 \/ 34\n3.3　AIDL跨应用服务 \/ 35\n3.3.1　AIDL概念分析 \/ 35\n3.3.2　AIDL服务提供方 \/ 36\n3.3.3　AIDL服务调用方 \/ 37\n3.4　广播 \/ 38\n3.4.1　Android 系统中的广播 \/ 38\n3.4.2　Broadcast接收 \/ 38\n3.4.3　Broadcast发送 \/ 39\n3.5　本章小结 \/ 39\n第二部分　Telephony通话功能\n第4章　深入解析通话流程 \/ 42\n4.1　通话相关主要源代码汇总及简要说明 \/ 42\n4.2　电话主动呼叫流程分析 \/ 44\n4.2.1　运行Android虚拟设备 \/ 44\n4.2.2　拨号界面DialtactsActivity的onCreate方法 \/ 45\n4.2.3　DialpadFragment拨号盘Tab表单 \/ 45\n4.2.4　寻找拨号统一入口OutgoingCallBroadcaster \/ 47\n4.2.5　CallController拨号placeCall方法 \/ 47\n4.2.6　Phone帮助类PhoneUtils静态placeCall方法 \/ 48\n4.2.7　通话大管家CallManager \/ 50\n4.2.8　Phone对象的dial拨号方法 \/ 50\n4.2.9　Call状态跟踪者GsmCallTracker \/ 51\n4.2.10　RIL消息的出入口RIL.java \/ 52\n4.2.11　启动通话主界面InCallScreen \/ 53\n4.2.12　拨号流程总结 \/ 53\n4.3　电话被动接收来电流程分析 \/ 55\n4.3.1　Android虚拟设备模拟接收来电 \/ 56\n4.3.2　RegistrantList消息处理机制 \/ 57\n4.3.3　GsmCallTracker响应RIL的Call状态变化通知 \/ 60\n4.3.4　RIL.java的getCurrentCalls方法 \/ 60\n4.3.5　GsmCallTracker响应消息通知 \/ 61\n4.3.6　handlePollCalls发出来电通知 \/ 61\n4.3.7　GSMPhone的通知方法notifyNewRingingConnection \/ 62\n4.3.8　CallManager响应来电消息通知 \/ 62\n4.3.9　CallNotifier响应来电通知 \/ 63\n4.3.10　InCallScreen展现来电界面 \/ 64\n4.3.11　来电流程总结 \/ 65\n4.4　通话关键流程 \/ 66\n4.4.1　建立Android通话模型 \/ 67\n4.4.2　AT命令发送流程 \/ 68\n4.4.3　通话状态变化流程 \/ 69\n4.4.4　本地主动挂断通话流程 \/ 70\n4.4.5　远端断开通话连接流程 \/ 72\n4.5　本章小结 \/ 73\n第5章　深入解析Telephony通话应用机制 \/ 74\n5.1　Phone应用的关键代码解析 \/ 74\n5.2　认识通话主界面InCallScreen \/ 75\n5.2.1　InCallScreen中的主要方法 \/ 76\n5.2.2　单例模式的Activity通话界面 \/ 76\n5.2.3　Layout布局说明 \/ 77\n5.3　通话主界面InCallScreen \/ 78\n5.3.1　onCreate—运行Activity \/ 78\n5.3.2　onNewIntent—单例InCallScreen加载入口 \/ 80\n5.3.3　internalResolveIntent—进入InCallScreen处理Intent的唯一方法 \/ 81\n5.3.4　onResume—显示InCallScreen通话界面 \/ 82\n5.3.5　handleMessage—Handler消息响应方法 \/ 84\n5.3.6　onSuppServiceFailed—显示通话服务失败提示信息 \/ 85\n5.3.7　updateScreen—更新通话界面 \/ 86\n5.3.8　onDisconnect—断开通话连接 \/ 88\n5.3.9　handleOnscreenButtonClick—响应通话控制按钮点击事件 \/ 90\n5.3.10　InCallScreen通话界面运行机制总结 \/ 91\n5.4　通话信息展示CallCard \/ 92\n5.4.1　两路通话布局View控件 \/ 92\n5.4.2　updateState—更新CallCard \/ 93\n5.4.3　displayMainCallStatus—显示\/更新第一路通话信息 \/ 95\n5.4.4　displayOnHoldCallStatus—显示\/更新第二路通话信息 \/ 97\n5.4.5　修改通话信息展示的思路及原则 \/ 98\n5.5　 通话控制InCallTouchUi \/ 99\n5.5.1　View布局控件 \/ 99\n5.5.2　updateState—更新InCallTouchUi \/ 101\n5.5.3　MultiWaveView—来电控制接听、拒接界面 \/ 102\n5.5.4　HeadSet—响应免提事件 \/ 103\n5.5.5　修改来电界面的思路及原则 \/ 104\n5.6　通话功能中必不可少的DTMF \/ 105\n5.6.1　什么是DTMF \/ 105\n5.6.2　DTMFTwelveKeyDialer的布局 \/ 105\n5.6.3　如何显示DTMF界面 \/ 106\n5.6.4　Tone音发送流程 \/ 106\n5.7　Phone应用的加载入口PhoneApp类 \/ 108\n5.7.1　PhoneApp类属性及方法 \/ 108\n5.7.2　onCreate—PhoneApp应用加载入口 \/ 109\n5.7.3　PowerManager—PhoneApp电源管理 \/ 110\n5.7.4　Sensor—PhoneApp感应器的应用 \/ 112\n5.7.5　MediaButtonBroadcastReceiver—接收耳机HOOK键广播事件 \/ 115\n5.7.6　PhoneAppBroadcastReceiver—接收Phone应用杂项广播事件 \/ 116\n5.8　Handler消息处理的幕后工作者CallNotifier \/ 118\n5.8.1　CallNotifier的本质 \/ 118\n5.8.2　Handler消息注册和响应机制 \/ 119\n5.8.3　onNewRingingConnection—接收到新来电的幕后处理 \/ 119\n5.8.4　onPhoneStateChanged—通话状态变化的幕后处理 \/ 121\n5.8.5　onDisconnect—通话连接断开的幕后处理 \/ 122\n5.9　本章小结 \/ 124\n第6章　手机通话功能框架层实现机制 \/ 125\n6.1　Telephony Frameworks层解析 \/ 125\n6.1.1　通话功能相关代码文件 \/ 125\n6.1.2　通话功能关键类 \/ 126\n6.1.3　Telephony通信能力模型 \/ 127\n6.2　GSMPhone对象详解 \/ 128\n6.2.1　GSMPhone类层次继承关系 \/ 128\n6.2.2　GSMPhone类代码结构解析 \/ 129\n6.2.3　PhoneFactory工厂方法实现类 \/ 130\n6.2.4　PhoneProxy代理模式实现类 \/ 131\n6.2.5　GSMPhone类的组合逻辑关系 \/ 132\n6.2.6　GSMPhone类的Handler消息处理机制 \/ 133\n6.2.7　GSMPhone类通话管理实现机制 \/ 136\n6.3　CallTracker运行机制 \/ 137\n6.3.1　GsmCallTracker类代码结构解析 \/ 137\n6.3.2　GsmCallTracker的Handler消息处理机制 \/ 139\n6.3.3　GsmCallTracker与RIL对象的交互机制 \/ 142\n6.4　以GsmCall为核心的通话管理模型 \/ 145\n6.4.1　GsmCall类代码结构解析 \/ 146\n6.4.2　GsmConnection类代码结构解析 \/ 147\n6.4.3　DriverCall与GsmCall、GsmConnection的关系 \/ 149\n6.5　GsmCallTracker类的 handlePollCalls方法处理逻辑 \/ 153\n6.5.1　初始化操作 \/ 153\n6.5.2　更新通话相关信息 \/ 154\n6.5.3　根据最新的通话状态发出通知 \/ 158\n6.5.4　更新手机状态 \/ 158\n6.6　GsmCallTracker通话连接断开的处理机制 \/ 160\n6.6.1　本地主动挂断通话的处理机制 \/ 160\n6.6.2　远端断开通话连接的处理机制 \/ 162\n6.7　Android虚拟设备上验证GSM制式手机的通话模型 \/ 164\n6.7.1　增加日志输出 \/ 164\n6.7.2　运行Android虚拟设备并分析日志 \/ 166\n6.8　通话大管家CallManager \/ 168\n6.8.1　CallManager的本质 \/ 168\n6.8.2　Handler消息注册及运行机制 \/ 169\n6.8.3　如何获取通话基本信息 \/ 170\n6.9　通话计时实例分析 \/ 171\n6.9.1　记录通话的开始时间 \/ 171\n6.9.2　记录通话的结束时间 \/ 171\n6.9.3　Phone应用计算通话时长 \/ 171\n6.10　 Handler消息处理机制 \/ 173\n6.10.1　Handler消息的注册过程 \/ 173\n6.10.2　Handler消息的接收和响应过程 \/ 174\n6.11　实战—来电防火墙 \/ 175\n6.11.1　应用原理分析 \/ 175\n6.11.2　在onNewRingingConnection方法加入拦截请求 \/ 176\n6.12　本章小结 \/ 176\n第三部分　Telephony通信功能\n第7章　网络服务状态运行机制 \/ 180\n7.1　什么是ServiceState \/ 180\n7.2　初识ServiceState实体类 \/ 180\n7.2.1　ServiceState类的实质 \/ 181\n7.2.2　ServiceState类关键常量及属性 \/ 181\n7.2.3　ServiceState类关键方法 \/ 182\n7.3　ServiceStateTracker运行机制详解 \/ 183\n7.3.1　ServiceStateTracker抽象类为核心的类图 \/ 184\n7.3.2　ServiceStateTracker代码结构 \/ 184\n7.3.3　ServiceStateTracker的Handler消息处理机制 \/ 186\n7.3.4　ServiceStateTracker与RIL对象的交互机制 \/ 189\n7.4　handlePollStateResult方法处理逻辑 \/ 192\n7.4.1　RIL返回查询结果的异常判断和处理 \/ 192\n7.4.2　处理4个不同网络服务查询返回的结果 \/ 192\n7.4.3　用pollStateDone方法完成收尾工作 \/ 195\n7.5　ServiceState最佳实践 \/ 197\n7.5.1　获取运营商信息 \/ 197\n7.5.2　通知栏手机信号实时变化 \/ 198\n7.6　实战—飞行模式的实现 \/ 200\n7.6.1　飞行模式的设置入口 \/ 200\n7.6.2　Radio无线通信模块的开启或关闭 \/ 202\n7.7　本章小结 \/ 203\n第8章　Android手机上网实现机制 \/ 204\n8.1　Android网络整体结构 \/ 204\n8.2　什么是DataConnection \/ 205\n8.2.1　DataConnection类定义及子类 \/ 205\n8.2.2　DataConnection类关键属性 \/ 206\n8.2.3　DataConnection类的方法 \/ 207\n8.2.4　5个数据连接对象的状态转换 \/ 207\n8.3　StateMachine状态机 \/ 208\n8.3.1　State设计模式 \/ 209\n8.3.2　StateMachine核心类 \/ 209\n8.3.3　StateMachine运行机制 \/ 210\n8.3.4　DataConnection使用State模式的运行机制 \/ 211\n8.4　什么是APN \/ 212\n8.4.1　APN配置关键字段 \/ 212\n8.4.2　Android支持的APN类型 \/ 213\n8.4.3　如何在Android中新增APN配置 \/ 213\n8.5　开机自动建立default默认数据连接 \/ 215\n8.5.1　如何查看手机上网的基本参数配置 \/ 215\n8.5.2　初始化ApnContext \/ 216\n8.5.3　创建DataConnection数据连接 \/ 219\n8.5.4　激活DataConnection数据连接 \/ 222\n8.6　DataConnectionTracker运行机制 \/ 226\n8.6.1　初始化ApnContext操作 \/ 227\n8.6.2　开机建立default默认的数据连接 \/ 228\n8.6.3　关闭数据连接 \/ 229\n8.6.4　循环更新网络连接状态信息 \/ 230\n8.6.5　APN数据库配置信息变化的观察者 \/ 231\n8.7　获取Android手机上网数据包 \/ 232\n8.7.1　使用tcpdump工具抓取TCP\/IP数据包 \/ 232\n8.7.2　使用Wireshark软件分析TCP\/IP数据包 \/ 232\n8.8　MMS彩信数据连接的实现 \/ 233\n8.8.1　建立和关闭彩信数据连接 \/ 233\n8.8.2　如何支持多种类型网络连接 \/ 234\n8.9　实战—手机上网数据总开关的实现 \/ 235\n8.10　本章小结 \/ 235\n第9章　深入解析短信发送和接收流程 \/ 237\n9.1　MMS应用主要源代码汇总及简要说明 \/ 237\n9.2　主动发送短信流程分析 \/ 238\n9.2.1　进入短信会话列表界面 \/ 238\n9.2.2　短信编辑界面 \/ 239\n9.2.3　SmsMessageSender短信发送处理逻辑 \/ 241\n9.2.4　Telephony Frameworks层中的SmsManager类 \/ 243\n9.2.5　IccSmsInterfaceManager服务发送短信 \/ 244\n9.2.6　SMSDispatcher短信分发器 \/ 245\n9.2.7　主动发送短信流程总结 \/ 246\n9.3　短信发送状态相关处理机制 \/ 248\n9.3.1　如何判断短信是否成功发送到短信中心 \/ 248\n9.3.2　如何判断短信接收方已经成功收取短信 \/ 250\n9.4　短信接收流程分析 \/ 252\n9.4.1　短信接收的开始 \/ 252\n9.4.2　进入短信分发器SMSDispatcher \/ 253\n9.4.3　接收并处理新短信Broadcast广播 \/ 254\n9.4.4　短信接收流程总结 \/ 254\n9.5　彩信发送和接收关键流程 \/ 255\n9.5.1　彩信传输过程中的关键类 \/ 255\n9.5.2　TransactionService为核心的彩信传输机制 \/ 257\n9.5.3　Transaction对象执行彩信传输 \/ 259\n9.5.4　基于WAP PUSH的彩信接收与下载 \/ 260\n9.6　本章小结 \/ 261\n第四部分　深入解析Android RIL\n第10章　Android RIL框架结构及RILJ运行机制 \/ 264\n10.1　Android RIL关键处理流程 \/ 264\n10.1.1　Android RIL框架结构 \/ 264\n10.1.2　Android RIL的数据交互 \/ 265\n10.2　认识RILJ \/ 265\n10.2.1　RILJ核心类图 \/ 265\n10.2.2　RILJ关键属性 \/ 266\n10.2.3　RILJ关键方法 \/ 267\n10.2.4　RILJ运行机制 \/ 268\n10.3　认识RILRequest类 \/ 269\n10.3.1　RILRequest类的关键属性 \/ 269\n10.3.2　RILRequest类的方法 \/ 269\n10.4　解析RILJ发出RIL请求流程 \/ 271\n10.4.1　send方法发送Handler消息 \/ 271\n10.4.2　RILSender接收和处理Handler消息 \/ 272\n10.5　解析RILJ接收Response消息处理流程 \/ 273\n10.5.1　RILReceiver内部类运行机制 \/ 273\n10.5.2　Solicited Response消息处理方法processSolicited \/ 276\n10.5.3　UnSolicited Response消息处理方法processUnsolicited \/ 279\n10.6　本章小结 \/ 280\n第11章　RILC系统结构及LibRIL运行机制 \/ 281\n11.1　RILC主要代码目录结构 \/ 281\n11.2　解析RILC运行机制 \/ 282\n11.2.1　RILC启动过程 \/ 283\n11.2.2　RILC运行过程 \/ 285\n11.3　初识RILC中的运行环境LibRIL \/ 285\n11.3.1　LibRIL主要文件及作用 \/ 285\n11.3.2　重点结构体说明 \/ 286\n11.4　LibRIL运行环境加载过程 \/ 288\n11.4.1　开启ril_event事件监听入口RIL_startEventLoop \/ 288\n11.4.2　RIL_register函数引入三方RIL_RadioFunctions \/ 290\n11.5　运行状态中ril_event事件处理机制 \/ 291\n11.5.1　认识ril_event结构体 \/ 291\n11.5.2　RIL事件生命周期控制的处理函数 \/ 292\n11.5.3　ril_event_loop处理机制 \/ 294\n11.6　详解LibRIL运行机制 \/ 296\n11.6.1　RILJ与LibRIL建立Socket连接过程 \/ 296\n11.6.2　Solicited消息的交互流程和处理机制 \/ 297\n11.7　本章小结 \/ 302\n第12章　Reference-RIL运行框架 \/ 303\n12.1　Reference-RIL运行机制 \/ 303\n12.1.1　RIL_Init函数初始化Reference-RIL \/ 303\n12.1.2　onRequest接收LibRIL的请求调用 \/ 304\n12.1.3　UnSolicited消息处理逻辑 \/ 306\n12.2　AT命令 \/ 310\n12.2.1　如何新增AT命令 \/ 310\n12.2.2　Android Telephony常用AT命令 \/ 310\n12.3　Android RIL层运行框架和机制总结 \/ 311\n12.3.1　总结Solicited消息处理流程 \/ 312\n12.3.2　总结UnSolicited消息处理流程 \/ 313\n12.4　本章小结 \/ 314\n第五部分　系统服务\n第13章　Telephony提供的系统服务 \/ 316\n13.1　System Service系统服务类图 \/ 316\n13.2　详解PhoneInterfaceManager实现机制 \/ 317\n13.2.1　ITelephony.aidl接口定义 \/ 318\n13.2.2　PhoneInterfaceManager服务创建过程 \/ 318\n13.2.3　PhoneInterfaceManager服务使用实例分析 \/ 318\n13.3　详解TelephonyRegistry实现机制 \/ 319\n13.3.1　系统服务的创建入口 \/ 320\n13.3.2　TelephonyRegistry关键方法 \/ 320\n13.3.3　listen方法处理逻辑 \/ 320\n13.3.4　notifyCallState方法发出通话状态变化通知 \/ 321\n13.3.5　触发TelephonyRegistry发出通知机制 \/ 322\n13.3.6　TelephonyRegistry系统服务使用实例分析 \/ 323\n13.4　简述TelephonyManager实现机制 \/ 324\n13.5　本章小结 \/ 326",
      "ebook_url": "http:\/\/read.douban.com\/ebook\/15163646\/",
      "pages": "352",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s25802447.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s25802447.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s25802447.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/20480692\/",
      "id": "20480692",
      "publisher": "机械工业出版社",
      "isbn10": "7111406761",
      "isbn13": "9787111406761",
      "title": "深入理解Android",
      "url": "http:\/\/api.douban.com\/v2\/book\/20480692",
      "alt_title": "",
      "author_intro": "",
      "summary": "《深入理解Android:Telephony原理剖析与最佳实践》是“深入理解Android”系列的第3本，前两本书的内容和质量在Android开发者社群内得到了高度认可，已经树立起该系列图书的品牌。在写作思路和方式上，《深入理解Android:Telephony原理剖析与最佳实践》与前两本书一脉相承，对它们的优点进行了继承和发扬；在内容上，《深入理解Android:Telephony原理剖析与最佳实践》从从源代码角度深入解析了Android Telephony的架构设计与实现原理，深刻揭示了Android系统的通信机制。对于Android应用开发工程师和系统工程师而言，《深入理解Android:Telephony原理剖析与最佳实践》都是难得的研究和学习资料。\n全书共13章，分为五部分：第一部分（1~3章），首先介绍了智能手机的系统结构、Android系统的架构、Telephony框架的结构，然后详细介绍了Android源代码编译环境和阅读环境的搭建方法，以及阅读《深入理解Android:Telephony原理剖析与最佳实践》要做的技术准备；第二部分（4~6章），对Android的通话功能进行了深入的分析，包括对通话流程的分析、对主动拨号和来电流程的分析、对通话应用机制的分析，以及对手机通信功能在框架层和应用层中的实现机制的分析；第三部分（7~9章），对Android的通信功能进行了深入的分析，包括对网络服务状态的运行机制的分析、对Android手机上网的实现机制的分析，以及对短息发送和接收流程的分析；第四部分（10~12章），对Android RIL的工作机制进行了深入的分析，包括对框架层中的RILJ运行机制的分析、对RILC系统结构及LibRIL运行机制的分析，以及对Reference-RIL框架的原理的分析；第五部分（13章），分析了Telephony模块所提供的系统服务，包括系统服务的注册入口以及调用系统服务接口的实例。\n\n海报：",
      "ebook_price": "48.86",
      "series": {
        "id": "28292",
        "title": "深入理解Android"
      },
      "price": "69.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 5,
        "average": "0.0",
        "min": 0
      },
      "subtitle": "",
      "author": [
        "一得"
      ],
      "pubdate": "2012-11",
      "tags": [
        {
          "count": 12,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 8,
          "name": "安卓",
          "title": "安卓"
        },
        {
          "count": 3,
          "name": "已经有了",
          "title": "已经有了"
        },
        {
          "count": 2,
          "name": "计算机",
          "title": "计算机"
        }
      ],
      "origin_title": "一得",
      "image": "https://img1.doubanio.com\/mpic\/s25107068.jpg",
      "binding": "",
      "translator": [],
      "catalog": "第1章 Android操作系统（1）\n1.1 Android源起（2）\n1.2 Android的特点（3）\n1.2.1 开放（3）\n1.2.2 多样化（3）\n1.2.3 可玩性强（4）\n1.3 Android系统版本演进（4）\n第2章 Android选机攻略（15）\n2.1 CPU（16）\n2.1.1 芯片架构（16）\n2.1.2 芯片厂商（19）\n2.1.3 决选（23）\n2.2 GPU（24）\n2.2.1 GPU介绍（24）\n2.2.2 决选（26）\n2.3 显示屏幕（27）\n2.3.1 显示屏幕介绍（27）\n2.3.2 显示参数（30）\n2.3.3 决选（31）\n2.4 RAM（31）\n2.5 其他（32）\n2.5.1 触摸屏（32）\n2.5.2 摄像头（32）\n2.5.3 通信模块（33）\n2.5.4 电池（34）\n2.6 Android选机总决选（34）\n第3章 应用为王 初级玩转（36）\n3.1 玩转应用市场（37）\n3.1.1 官方电子市场（37）\n3.1.2 国内第三方应用市场（42）\n3.2 PC端管理软件（42）\n3.2.1 豌豆荚（43）\n3.2.2 91手机助手（49）\n3.3 不推荐的应用安装方式（54）\n第4章 优化Android高级玩转（55）\n4.1 优化前的准备（56）\n4.1.1 刷机（56）\n4.1.2 root权限（58）\n4.2 精简系统（58）\n4.2.1 为什么要精简（58）\n4.2.2 初级精简（59）\n4.2.3 高级精简（60）\n4.3 省电技巧（62）\n4.3.1 改进使用习惯（62）\n4.3.2 合理优化（64）\n4.3.3 任务管理（65）\n第5章 常用应用推荐（67）\n5.1 Android应用商店（68）\n5.2 软件类应用（76）\n5.2.1 网络工具（76）\n5.2.2 生活实用工具（78）\n5.2.3 商务学习工具（89）\n5.2.4 社交娱乐工具（100）\n5.2.5 其他（116）\n5.3 游戏类应用（120）\n5.3.1 益智策略类（120）\n5.3.2 体育竞技类（129）\n5.3.3 赛车类（132）\n5.3.4 大型动作游戏（135）\n5.3.5 忍者系列（137）\n第6章 高级应用和新奇应用推荐（140）\n6.1 工具应用（141）\n6.1.1 Taskman（141）\n6.1.2 海卓HIAPN（142）\n6.1.3 快速重启（143）\n6.1.4 Z Device Test（144）\n6.2 新奇应用（146）\n6.2.1 透明屏幕（146）\n6.2.2 体感游戏（148）\n6.2.3 AR应用（154）\n6.2.4 HTML5应用（163）\n6.2.5 声控应用（163）\n6.2.6 Weird Voice（166）\n6.2.7 丑脸评分（167）\n6.2.8 广告免疫（168）\n6.2.9 Java\/J2ME Runner（168）\n6.2.10 远程控制类应用（170）\n6.2.11 LED Show（174）\n6.3 极客应用（175）\n6.3.1 终端模拟器Terminal（175）\n6.3.2 SQLite Editor（177）\n6.3.3 I-Jetty（178）\n6.3.4 Root Explorer（179）\n6.3.5 Dev Tools（180）\n6.4 系统优化应用（181）\n6.4.1 Autostarts（181）\n6.4.2 SystemApp Remover（181）\n6.4.3 “显示分辨率调整”（181）\n6.4.4 色调调整（183）\n6.5 评测应用（185）\n6.5.1 综合评测应用（185）\n6.5.2 CPU性能（186）\n6.5.3 GPU性能（189）\n6.5.4 浏览器性能（191）\n6.6 其他应用（包括游戏）（192）\n6.7 在PC端运行Android应用（195）\n6.7.1 BlueStacks（195）\n6.7.2 Android SDK（197）\n6.8 召唤（197）\n第7章 Android高频问题解答（199）\n7.1 名词解释类（200）\n7.2 系统功能类（200）\n7.3 第三方应用类（202）\n7.4 其他（202）",
      "pages": "203",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s25107068.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s25107068.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s25107068.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/20370976\/",
      "id": "20370976",
      "publisher": "电子工业出版社",
      "isbn10": "7121187280",
      "isbn13": "9787121187285",
      "title": "安卓工程师教你玩转Android",
      "url": "http:\/\/api.douban.com\/v2\/book\/20370976",
      "alt_title": "一得",
      "author_intro": "",
      "summary": "《安卓工程师教你玩转Android》内容丰富、图文并茂，授人以鱼、更授人以渔，既可以作为Android智能设备入门者的教材，也可以作为Android玩家的参考手册。近年来，包括智能手机、平板电脑和智能电视在内的Android智能设备发展迅速，成为人们娱乐生活、工作学习的重要工具和伙伴。《安卓工程师教你玩转Android》由一得编著，《安卓工程师教你玩转Android》是一本让你了解Android并教会你如何玩转Android的书，主要内容包括Android操作系统、选机攻略、应用的查找和安装、如何优化Android、常用应用推荐、高级应用和新奇应用推荐，以及Android高频问题问答。",
      "price": "39.00元"
    },
    {
      "rating": {
        "max": 10,
        "numRaters": 10,
        "average": "7.2",
        "min": 0
      },
      "subtitle": "Writing Android Native Apps Using Python, Lua, and Beanshell",
      "author": [
        "Paul Ferrill"
      ],
      "pubdate": "2011-6-27",
      "tags": [
        {
          "count": 20,
          "name": "Python",
          "title": "Python"
        },
        {
          "count": 19,
          "name": "Android",
          "title": "Android"
        },
        {
          "count": 14,
          "name": "SL4A",
          "title": "SL4A"
        },
        {
          "count": 6,
          "name": "编程",
          "title": "编程"
        },
        {
          "count": 5,
          "name": "Programming",
          "title": "Programming"
        },
        {
          "count": 4,
          "name": "Apress",
          "title": "Apress"
        },
        {
          "count": 1,
          "name": "2011",
          "title": "2011"
        },
        {
          "count": 1,
          "name": "DEV",
          "title": "DEV"
        }
      ],
      "origin_title": "",
      "image": "https://img1.doubanio.com\/mpic\/s8317159.jpg",
      "binding": "Paperback",
      "translator": [],
      "catalog": "",
      "pages": "296",
      "images": {
        "small": "https://img1.doubanio.com\/spic\/s8317159.jpg",
        "large": "https://img1.doubanio.com\/lpic\/s8317159.jpg",
        "medium": "https://img1.doubanio.com\/mpic\/s8317159.jpg"
      },
      "alt": "http:\/\/book.douban.com\/subject\/6787931\/",
      "id": "6787931",
      "publisher": "APRESS ACADEMIC",
      "isbn10": "1430235691",
      "isbn13": "9781430235699",
      "title": "Pro Android Python with SL4A",
      "url": "http:\/\/api.douban.com\/v2\/book\/6787931",
      "alt_title": "",
      "author_intro": "",
      "summary": "Pro Android Python with SL4A is for programmers and hobbyists who want to write apps for Android devices without having to learn Java first. Paul Ferrill leads you from installing the Scripting Layer for Android (SL4A) to writing small scripts, to more complicated and interesting projects, and finally to uploading and packaging your programs to an Android device. Android runs scripts in many scripting languages, but Python, Lua, and Beanshell are particularly popular. Most programmers know more than one programming language, so that they have the best tool for whatever task they want to accomplish. Pro Android Python with SL4A explores the world of Android scripting by introducing you to the most important open-source programming languages that are available on Android-based hardware. Pro Android Python with SL4A starts by exploring the Android software development kit and then shows you how to set up an Eclipse-based Android development environment. You then approach the world of Android programming by using Beanshell, which runs on the Dalvik, and learning how to write small programs to administer an Android device. Next, discover how Lua, a lightweight language perfectly suited for scripting on smaller devices, can work with Android. Lua can be used for small but important tasks, like SMS encryption and synchronizing photos with flickr. Last, but certainly not least, you will discover the world of Python scripting for SL4A, and the power contained within the full range of Python modules that can combine with the Android SDK. You'll learn to write small location-aware apps to get you started, but by the end of this book, you'll find yourself writing fully GUI-fied applications running on the Android desktop! Pro Android Python with SL4A is rounded out with a chapter on distributing and packaging scripts, a skill that you'll find very useful as you reach out to a wider audience with your programs. What you'll learn * Understand the SL4A * Explore the Android software development kit * Write scripts to administer an Android phone * Write and execute full Python and applications * Learn how to write simple apps using Facades * Explore the full Android development process, from development to packaging Who this book is for This is a book for beginning and intermediate Android developers, and a book for anyone coding in Python, Lua or exploring Beanshell. Table of Contents * Introduction * Getting Started with Android Scripting * Navigating the Android SDK * Developing Androids Scripts with Eclipse * Exploring the Android API * Background Scripting * Python Utilities * Python Dialog-Based GUIs * Python for GUI with WebUI * Packaging and Distributing Your Scripts",
      "price": "GBP 35.99"
    }
  ]
}